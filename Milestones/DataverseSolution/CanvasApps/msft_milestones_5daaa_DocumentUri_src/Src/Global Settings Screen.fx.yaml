"'Global Settings Screen' As screen":
    Fill: =gblAppStyles.Background.Fill
    OnVisible: |-
        =Clear(colCategories);
        ForAll(
            Sort(
                Filter(
                    'Project Work Item Categories',
                    'Project Work Item Categories (Views)'.'Active Project Work Item Categories'
                ),
                'Created On',
                Ascending
            ),
            Collect(
                colCategories,
                {
                    CategoryName: Name,
                    CategoryColor: Color,
                    DarkColor: 'Color Dark',
                    ID: 'Project Work Item Category',
                    Order: CountRows(colCategories) + 1
                }
            )
        );
        ClearCollect(
            colRemovedCategories,
            First(colCategories)
        );
        Clear(colRemovedCategories);
        Clear(colPriorities);
        ForAll(
            Sort(
                Filter(
                    'Project Work Item Priorities',
                    'Project Work Item Priorities (Views)'.'Active Project Work Item Priorities'
                ),
                'Created On',
                Ascending
            ),
            Collect(
                colPriorities,
                {
                    PriorityName: Name,
                    PriorityColor: Color,
                    DarkColor: 'Color Dark',
                    ID: 'Project Work Item Priority',
                    Order: CountRows(colPriorities) + 1
                }
            )
        );
        ClearCollect(
            colRemovedPriorities,
            First(colPriorities)
        );
        Clear(colRemovedPriorities);
        Clear(colStatuses);
        ForAll(
            Sort(
                Filter(
                    'Project Work Item Statuses',
                    'Project Work Item Statuses (Views)'.'Active Project Work Item Statuses'
                ),
                Sequence,
                Ascending
            ),
            Collect(
                colStatuses,
                {
                    StatusName: Name,
                    StatusColor: Color,
                    DarkColor: 'Color Dark',
                    ID: 'Project Work Item Status',
                    Order: CountRows(colStatuses) + 1
                }
            )
        );
        ClearCollect(
            colRemovedStatuses,
            First(colStatuses)
        );
        Clear(colRemovedStatuses);
        UpdateContext(
            {
                locGalleryDefaultStatus: Blank(),
                locGalleryDefaultCategory: Blank(),
                locGalleryDefaultPriority: Blank()
            }
        )

    tmrSetFocus_GlobalSettings As timer:
        AutoStart: =locSetFocusTimerStart
        Color: =RGBA(0, 0, 0, 0)
        Duration: =100
        Fill: =RGBA(0, 0, 0, 0)
        Height: =0
        HoverFill: =Transparent
        OnTimerEnd: |
            =Switch(
                locSetFocusControlTarget,
                "imgCloseWarning_Settings",
                SetFocus(imgCloseWarning_GlobalSettings),
                "btnAddCategory", 
                SetFocus(btnAddCategory),
                "btnAddPriority",
                SetFocus(btnAddPriority),
                "btnAddStatus",
                SetFocus(btnAddStatus)
            );
        OnTimerStart: =
        Size: =0
        TabIndex: =-1
        Width: =0
        X: =Parent.Width - Self.Width
        Y: =Parent.Height - Self.Height
        ZIndex: =1

    lblAnnounce_GlobalSettings As label:
        DisplayMode: =DisplayMode.Disabled
        Font: =Font.'Segoe UI'
        Height: =0*0
        Live: =Live.Assertive
        PaddingBottom: =0
        PaddingLeft: =0
        PaddingRight: =0
        PaddingTop: =0
        Text: =locScreenReaderAnnouncedText //this text is announced by screen readers, when the variable is updated
        Width: =0*0
        ZIndex: =2

    conHeader_GlobalSettings As groupContainer:
        Height: =80*1
        Width: =Parent.Width-Self.X
        X: =0*1
        ZIndex: =4

        imgBack_GlobalSettings As image:
            AccessibleLabel: |-
                =With(
                    {
                        varDefault: "Click to go back",
                        varOOBTextId: "imgBack_Settings__locAccessibleText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            DisabledFill: |-
                =With(
                    {
                        varImageIsCategory: LookUp(
                            staticIcons,
                            staticIconName = "Back"
                        ).staticIconIsCategory
                    },
                    If(
                        varImageIsCategory,
                        gblAppStyles.Icons.DisabledFill_Category,
                        Transparent
                    )
                )
            Fill: |-
                =With(
                    {
                        varImageIsCategory: LookUp(
                            staticIcons,
                            staticIconName = "Back"
                        ).staticIconIsCategory
                    },
                    If(
                        varImageIsCategory,
                        gblAppStyles.Icons.Fill_Category,
                        Transparent
                    )
                )
            Height: =40
            Image: |
                =With(
                    {
                        varImageRecord: LookUp(
                            staticIcons,
                            staticIconName = "Back"
                        ),
                        varColor: If(
                            Self.DisplayMode = DisplayMode.Disabled,
                            gblAppStyles.Icons.DisabledColor,
                            gblAppStyles.Icons.Color
                        )
                    },
                    With(
                        {
                            varImageData: Concatenate(
                                "data:image/svg+xml;utf8, ",
                                EncodeUrl(
                                    Concatenate(
                                        "<svg viewBox='",
                                        varImageRecord.staticIconViewbox,
                                        "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                        varImageRecord.staticIconPath,
                                        "' fill='#",
                                        varColor,
                                        "'/></svg>"
                                    )
                                )
                            )
                        },
                        varImageData
                    )
                )
            OnSelect: |-
                =//screen reader start
                UpdateContext(
                    {
                        locScreenReaderAnnouncedText: With(
                            {
                                varAnnouncedText: With(
                                    {
                                        varDefault: "Navigating back to the projects screen",
                                        varOOBTextId: "imgBack_Settings_Announcement"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            },
                            If(
                                locScreenReaderAnnouncedText = varAnnouncedText,
                                Concatenate(
                                    varAnnouncedText,
                                    " "
                                ),
                                varAnnouncedText
                            )
                        )
                    }
                );
                //screen reader end
                Navigate(
                    'Projects Screen',
                    ScreenTransition.Fade,
                    {
                        locBackNavigation: true,
                        locProjectSortOrder: locProjectSortOrder,
                        locExpandProjectList: locExpandProjectList,
                        locAddProject: locAddProject,
                        locSortWorkItemBy: locSortWorkItemBy,
                        locShowSearchWorkItem: locShowSearchWorkItem,
                        locAddWorkItem: locAddWorkItem,
                        locProjectStatusSelection: locProjectStatusSelection,
                        locWorkItemSortOrder: locWorkItemSortOrder
                    }
                )
            PaddingBottom: =10
            PaddingLeft: =10
            PaddingRight: =10
            PaddingTop: =10
            RadiusBottomLeft: =5
            RadiusBottomRight: =5
            RadiusTopLeft: =5
            RadiusTopRight: =5
            TabIndex: |-
                =If(
                    locDeleteSettings,
                    -1,
                    If(
                        Self.Visible,
                        0,
                        -1
                    )
                )
            Tooltip: =Self.AccessibleLabel
            Width: =40
            X: =20*1
            Y: =lblHeader_GlobalSettings.Y
            ZIndex: =1

        lblHeader_GlobalSettings As label:
            BorderColor: =gblAppStyles.Label.BorderColor
            BorderThickness: =gblAppStyles.Label.BorderThickness
            Color: =gblAppStyles.Label.Color
            DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
            DisabledColor: =gblAppStyles.Label.DisabledColor
            DisabledFill: =gblAppStyles.Label.DisabledFill
            Fill: =gblAppStyles.Label.Fill
            FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Bold
            Height: =40*1
            HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
            HoverColor: =gblAppStyles.Label.HoverColor
            HoverFill: =gblAppStyles.Label.HoverFill
            PaddingBottom: =0
            PaddingTop: =0
            PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
            PressedColor: =gblAppStyles.Label.PressedColor
            PressedFill: =gblAppStyles.Label.PressedFill
            Role: =TextRole.Heading1
            Size: =gblAppStyles.Label.Size.Large
            TabIndex: |-
                =If(
                    true,
                    -1,
                    0
                )
            Text: |-
                =With(
                    {
                        varDefault: "Global settings",
                        varOOBTextId: "lblGlobalSettingsHeader__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Tooltip: =Self.Text
            Width: =Parent.Width - Self.X - btnCancel_GlobalSettings.Width*2 - 60
            X: =imgBack_GlobalSettings.X + imgBack_GlobalSettings.Width
            Y: =20*1
            ZIndex: =2

        btnSave_GlobalSettings As button:
            BorderColor: =gblAppStyles.ButtonPrimary.BorderColor
            BorderThickness: =gblAppStyles.ButtonPrimary.BorderThickness
            Color: =gblAppStyles.ButtonPrimary.Color
            DisabledBorderColor: =gblAppStyles.ButtonPrimary.DisabledBorderColor
            DisabledColor: =gblAppStyles.ButtonPrimary.DisabledColor
            DisabledFill: =gblAppStyles.ButtonPrimary.DisabledFill
            DisplayMode: |-
                =If(
                    locSettingsChanged && CountRows(
                        Filter(
                            galPriorities.AllItems,
                            IsBlank(txtPriorityName)
                        )
                    ) = 0 && CountRows(
                        Filter(
                            galCategories.AllItems,
                            IsBlank(txtCategoryName)
                        )
                    ) = 0 && CountRows(
                        Filter(
                            galStatuses.AllItems,
                            IsBlank(txtStatusName)
                        )
                    ) = 0 ,
                    DisplayMode.Edit,
                    DisplayMode.Disabled
                )
            Fill: =gblAppStyles.ButtonPrimary.Fill
            FocusedBorderColor: =gblAppStyles.ButtonPrimary.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.ButtonPrimary.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            Height: =32*1
            HoverBorderColor: =gblAppStyles.ButtonPrimary.HoverBorderColor
            HoverColor: =gblAppStyles.ButtonPrimary.HoverColor
            HoverFill: =gblAppStyles.ButtonPrimary.HoverFill
            OnSelect: |-
                =UpdateContext({locSettingsChanged: false});  
                //screen reader start
                UpdateContext(
                    {
                        locScreenReaderAnnouncedText: With(
                            {
                                varAnnouncedText: With(
                                    {
                                        varDefault: "All settings have been updated",
                                        varOOBTextId: "btnSave_Settings_Announcement"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            },
                            If(
                                locScreenReaderAnnouncedText = varAnnouncedText,
                                Concatenate(
                                    varAnnouncedText,
                                    " "
                                ),
                                varAnnouncedText
                            )
                        )
                    }
                );
                //screen reader end
                If(
                    locCategoryChanged,
                    ForAll(
                        Filter(
                            galCategories.AllItems,
                            !IsBlank(ID)
                        ),
                       IfError( Patch(
                            'Project Work Item Categories',
                            LookUp(
                                'Project Work Item Categories',
                                'Project Work Item Category' = ID
                            ),
                            {
                                Name: txtCategoryName.Text,
                                Color: Coalesce(
                                    If(
                                        gblThemeDark,
                                        LookUp(
                                            colProjectCoverColors,
                                            Base = galCategoryColorPicker.Selected.Base && Theme = "default"
                                        ).Color,
                                        galCategoryColorPicker.Selected.Color
                                    ),
                                    ThisRecord.CategoryColor
                                ),
                                'Color Dark': Coalesce(
                                    If(
                                        gblThemeDark,
                                        galCategoryColorPicker.Selected.Color,
                                        LookUp(
                                            colProjectCoverColors,
                                            Base = galCategoryColorPicker.Selected.Base && Theme = "dark"
                                        ).Color
                                    ),
                                    ThisRecord.DarkColor
                                )
                            }
                        ),Blank())
                    );
                    ForAll(
                        Filter(
                            galCategories.AllItems,
                            IsBlank(ID)
                        ),
                        IfError(Patch(
                            'Project Work Item Categories',
                            Defaults('Project Work Item Categories'),
                            {
                                Name: txtCategoryName.Text,
                                Color: Coalesce(
                                    If(
                                        gblThemeDark,
                                        LookUp(
                                            colProjectCoverColors,
                                            Base = galCategoryColorPicker.Selected.Base && Theme = "default"
                                        ).Color,
                                        galCategoryColorPicker.Selected.Color
                                    ),
                                    ThisRecord.CategoryColor
                                ),
                                'Color Dark': Coalesce(
                                    If(
                                        gblThemeDark,
                                        galCategoryColorPicker.Selected.Color,
                                        LookUp(
                                            colProjectCoverColors,
                                            Base = galCategoryColorPicker.Selected.Base && Theme = "dark"
                                        ).Color
                                    ),
                                    ThisRecord.DarkColor
                                )
                            }
                        ),Blank())
                    );
                    
                );
                If(
                    locPriorityChanged,
                    ForAll(
                        Filter(
                            galPriorities.AllItems,
                            !IsBlank(ID)
                        ),
                       IfError( Patch(
                            'Project Work Item Priorities',
                            LookUp(
                                'Project Work Item Priorities',
                                'Project Work Item Priority' = ID
                            ),
                            {
                                Name: txtPriorityName.Text,
                                Color: Coalesce(
                                    If(
                                        gblThemeDark,
                                        LookUp(
                                            colProjectCoverColors,
                                            Base = galPriorityColorPicker.Selected.Base && Theme = "default"
                                        ).Color,
                                        galPriorityColorPicker.Selected.Color
                                    ),
                                    ThisRecord.PriorityColor
                                ),
                                'Color Dark': Coalesce(
                                    If(
                                        gblThemeDark,
                                        galPriorityColorPicker.Selected.Color,
                                        LookUp(
                                            colProjectCoverColors,
                                            Base = galPriorityColorPicker.Selected.Base && Theme = "dark"
                                        ).Color
                                    ),
                                    ThisRecord.DarkColor
                                )
                            }
                        ),Blank())
                    );
                    ForAll(
                        Filter(
                            galPriorities.AllItems,
                            IsBlank(ID)
                        ),
                        IfError(Patch(
                            'Project Work Item Priorities',
                            Defaults('Project Work Item Priorities'),
                            {
                                Name: txtPriorityName.Text,
                                Color: Coalesce(
                                    If(
                                        gblThemeDark,
                                        LookUp(
                                            colProjectCoverColors,
                                            Base = galPriorityColorPicker.Selected.Base && Theme = "default"
                                        ).Color,
                                        galPriorityColorPicker.Selected.Color
                                    ),
                                    ThisRecord.PriorityColor
                                ),
                                'Color Dark': Coalesce(
                                    If(
                                        gblThemeDark,
                                        galPriorityColorPicker.Selected.Color,
                                        LookUp(
                                            colProjectCoverColors,
                                            Base = galPriorityColorPicker.Selected.Base && Theme = "dark"
                                        ).Color
                                    ),
                                    ThisRecord.DarkColor
                                )
                            }
                        ),Blank())
                    );
                    
                );
                If(
                    locStatusChanged,
                    ForAll(
                        Filter(
                            galStatuses.AllItems,
                            !IsBlank(ID)
                        ),
                        IfError(Patch(
                            'Project Work Item Statuses',
                            LookUp(
                                'Project Work Item Statuses',
                                'Project Work Item Status' = ID
                            ),
                            {
                                Name: txtStatusName.Text,
                                Color: Coalesce(
                                    If(
                                        gblThemeDark,
                                        LookUp(
                                            colProjectCoverColors,
                                            Base = galStatusColorPicker.Selected.Base && Theme = "default"
                                        ).Color,
                                        galStatusColorPicker.Selected.Color
                                    ),
                                    ThisRecord.StatusColor
                                ),
                                'Color Dark': Coalesce(
                                    If(
                                        gblThemeDark,
                                        galStatusColorPicker.Selected.Color,
                                        LookUp(
                                            colProjectCoverColors,
                                            Base = galStatusColorPicker.Selected.Base && Theme = "dark"
                                        ).Color
                                    ),
                                    ThisRecord.DarkColor
                                )
                            }
                        ),Blank())
                    );
                    ForAll(
                        Filter(
                            galStatuses.AllItems,
                            IsBlank(ID)
                        ),
                        IfError(Patch(
                            'Project Work Item Statuses',
                            Defaults('Project Work Item Statuses'),
                            {
                                Name: txtStatusName.Text,
                                Color: Coalesce(
                                    If(
                                        gblThemeDark,
                                        LookUp(
                                            colProjectCoverColors,
                                            Base = galStatusColorPicker.Selected.Base && Theme = "default"
                                        ).Color,
                                        galStatusColorPicker.Selected.Color
                                    ),
                                    ThisRecord.StatusColor
                                ),
                                'Color Dark': Coalesce(
                                    If(
                                        gblThemeDark,
                                        galStatusColorPicker.Selected.Color,
                                        LookUp(
                                            colProjectCoverColors,
                                            Base = galStatusColorPicker.Selected.Base && Theme = "dark"
                                        ).Color
                                    ),
                                    ThisRecord.DarkColor
                                )
                            }
                        ),Blank())
                    );
                    
                );
                If(
                    locCategoryChanged || locPriorityChanged || locStatusChanged,
                    ClearCollect(
                        colWorkItems,
                        Filter(
                            'Project Work Items',
                            Project.Project = gblProject.Project
                        )
                    );
                    
                );
                Switch(
                    locGlobalSetting,
                    "priority",
                    Clear(colPriorities);
                    ForAll(
                        Sort(
                            Filter(
                                'Project Work Item Priorities',
                                'Project Work Item Priorities (Views)'.'Active Project Work Item Priorities'
                            ),
                            'Created On',
                            Ascending
                        ),
                        Collect(
                            colPriorities,
                            {
                                PriorityName: Name,
                                PriorityColor: Color,
                                DarkColor: 'Color Dark',
                                ID: 'Project Work Item Priority',
                                Order: CountRows(colPriorities) + 1
                            }
                        )
                    );
                    ClearCollect(
                        colRemovedPriorities,
                        First(colPriorities)
                    );
                    Clear(colRemovedPriorities),
                    "category",
                    Clear(colCategories);
                    ForAll(
                        Sort(
                            Filter(
                                'Project Work Item Categories',
                                'Project Work Item Categories (Views)'.'Active Project Work Item Categories'
                            ),
                            'Created On',
                            Ascending
                        ),
                        Collect(
                            colCategories,
                            {
                                CategoryName: Name,
                                CategoryColor: Color,
                                DarkColor: 'Color Dark',
                                ID: 'Project Work Item Category',
                                Order: CountRows(colCategories) + 1
                            }
                        )
                    );
                    ClearCollect(
                        colRemovedCategories,
                        First(colCategories)
                    );
                    Clear(colRemovedCategories),
                    "status",
                    Clear(colStatuses);
                    ForAll(
                        Sort(
                            Filter(
                                'Project Work Item Statuses',
                                'Project Work Item Statuses (Views)'.'Active Project Work Item Statuses'
                            ),
                            Sequence,
                            Ascending
                        ),
                        Collect(
                            colStatuses,
                            {
                                StatusName: Name,
                                StatusColor: Color,
                                DarkColor: 'Color Dark',
                                ID: 'Project Work Item Status',
                                Order: CountRows(colStatuses) + 1
                            }
                        )
                    );
                    ClearCollect(
                        colRemovedStatuses,
                        First(colStatuses)
                    );
                    Clear(colRemovedStatuses)
                );
                UpdateContext(
                    {
                        locCategoryChanged: false,
                        locPriorityChanged: false,
                        locStatusChanged: false
                    }
                );Notify("All settings have been updated")
            PressedBorderColor: =gblAppStyles.ButtonPrimary.PressedBorderColor
            PressedColor: =gblAppStyles.ButtonPrimary.PressedColor
            PressedFill: =gblAppStyles.ButtonPrimary.PressedFill
            RadiusBottomLeft: =gblAppStyles.ButtonPrimary.RadiusBottomLeft
            RadiusBottomRight: =gblAppStyles.ButtonPrimary.RadiusBottomRight
            RadiusTopLeft: =gblAppStyles.ButtonPrimary.RadiusTopLeft
            RadiusTopRight: =gblAppStyles.ButtonPrimary.RadiusTopRight
            Size: =gblAppStyles.ButtonPrimary.Size
            TabIndex: |-
                =If(
                    locDeleteSettings,
                    -1,
                    If(
                        Self.Visible,
                        0,
                        -1
                    )
                )
            Text: |-
                =With(
                    {
                        varDefault: "Save",
                        varOOBTextId: "btnSave_Settings__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Tooltip: |-
                =With(
                    {
                        varDefault: "Click to save",
                        varOOBTextId: "btnSave_Settings__locTooltip"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Width: =90*1
            X: =Parent.Width - Self.Width- 30
            Y: =lblHeader_GlobalSettings.Y + (lblHeader_GlobalSettings.Height - Self.Height) / 2
            ZIndex: =3

        btnCancel_GlobalSettings As button:
            BorderColor: =gblAppStyles.ButtonSecondary.BorderColor
            BorderThickness: =gblAppStyles.ButtonSecondary.BorderThickness
            Color: =gblAppStyles.ButtonSecondary.Color
            DisabledBorderColor: =gblAppStyles.ButtonSecondary.DisabledBorderColor
            DisabledColor: =gblAppStyles.ButtonSecondary.DisabledColor
            DisabledFill: =gblAppStyles.ButtonSecondary.DisabledFill
            Fill: =gblAppStyles.ButtonSecondary.Fill
            FocusedBorderColor: =gblAppStyles.ButtonSecondary.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.ButtonSecondary.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            Height: =32*1
            HoverBorderColor: =gblAppStyles.ButtonSecondary.HoverBorderColor
            HoverColor: =gblAppStyles.ButtonSecondary.HoverColor
            HoverFill: =gblAppStyles.ButtonSecondary.HoverFill
            OnSelect: |-
                =//screen reader start
                UpdateContext(
                    {
                        locScreenReaderAnnouncedText: With(
                            {
                                varAnnouncedText: With(
                                    {
                                        varDefault: "Navigating back to the projects screen",
                                        varOOBTextId: "imgBack_Settings_Announcement"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            },
                            If(
                                locScreenReaderAnnouncedText = varAnnouncedText,
                                Concatenate(
                                    varAnnouncedText,
                                    " "
                                ),
                                varAnnouncedText
                            )
                        )
                    }
                );
                //screen reader end
                Navigate(
                    'Projects Screen',
                    ScreenTransition.Fade,
                    {locBackNavigation: true}
                )
            PressedBorderColor: =gblAppStyles.ButtonSecondary.PressedBorderColor
            PressedColor: =gblAppStyles.ButtonSecondary.PressedColor
            PressedFill: =gblAppStyles.ButtonSecondary.PressedFill
            RadiusBottomLeft: =gblAppStyles.ButtonSecondary.RadiusBottomLeft
            RadiusBottomRight: =gblAppStyles.ButtonSecondary.RadiusBottomRight
            RadiusTopLeft: =gblAppStyles.ButtonSecondary.RadiusTopLeft
            RadiusTopRight: =gblAppStyles.ButtonSecondary.RadiusTopRight
            Size: =gblAppStyles.ButtonSecondary.Size
            TabIndex: |-
                =If(
                    locDeleteSettings,
                    -1,
                    If(
                        Self.Visible,
                        0,
                        -1
                    )
                )
            Text: |-
                =With(
                    {
                        varDefault: "Cancel",
                        varOOBTextId: "btnCancel_Settings__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Tooltip: |-
                =With(
                    {
                        varDefault: "Click to cancel",
                        varOOBTextId: "btnCancel_Settings__locTooltip"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Width: =85*1
            X: =Parent.Width - Self.Width- btnCancel_GlobalSettings.Width - 50
            Y: =btnSave_GlobalSettings.Y
            ZIndex: =4

    conDetails_GlobalSettings As groupContainer:
        Height: =Parent.Height-Self.Y
        Width: =Parent.Width-Self.X
        X: =0*0
        Y: =conHeader_GlobalSettings.Y + conHeader_GlobalSettings.Height
        ZIndex: =5

        cnvSettings_GlobalSettings As fluidGrid.fluidGridWithBlankCard:
            BorderThickness: =0
            Height: =Parent.Height - Self.Y
            Width: =Parent.Width - Self.X
            X: =0*0
            Y: =0*1
            ZIndex: =1

            dtcSettings_GlobalSettings As dataCard:
                BorderColor: =RGBA(0, 0, 0, 1)
                BorderStyle: =BorderStyle.Solid
                BorderThickness: =0
                DisplayMode: =DisplayMode.Edit
                Fill: =RGBA(0, 0, 0, 0)
                Height: =galStatuses.Y + galStatuses.Height + 40
                Width: =Parent.Width
                X: =0
                Y: =0
                ZIndex: =1

                conGlobalSettings As groupContainer:
                    Height: =Parent.Height - Self.Y
                    Width: =Parent.Width - Self.X
                    X: =0*0
                    Y: =0*1
                    ZIndex: =1

                    lblGlobalSettingsHeader As label:
                        BorderColor: =gblAppStyles.Label.BorderColor
                        BorderThickness: =gblAppStyles.Label.BorderThickness
                        Color: =gblAppStyles.Label.Color
                        DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                        DisabledColor: =gblAppStyles.Label.DisabledColor
                        DisabledFill: =gblAppStyles.Label.DisabledFill
                        Fill: =gblAppStyles.Label.Fill
                        FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                        FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                        Font: =Font.'Segoe UI'
                        FontWeight: =FontWeight.Bold
                        Height: =32*1
                        HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                        HoverColor: =gblAppStyles.Label.HoverColor
                        HoverFill: =gblAppStyles.Label.HoverFill
                        PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                        PressedColor: =gblAppStyles.Label.PressedColor
                        PressedFill: =gblAppStyles.Label.PressedFill
                        Size: =gblAppStyles.Label.Size.Medium
                        Text: |-
                            =With(
                                {
                                    varDefault: "Global settings",
                                    varOOBTextId: "lblGlobalSettingsHeader__locText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        Tooltip: =Self.Text
                        Visible: =false
                        Width: =250*1
                        X: =30*1
                        Y: =0*1
                        ZIndex: =15

                    lblGlobalSettingsText As label:
                        BorderColor: =gblAppStyles.Label.BorderColor
                        BorderThickness: =gblAppStyles.Label.BorderThickness
                        Color: =gblAppStyles.Label.Color
                        DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                        DisabledColor: =gblAppStyles.Label.DisabledColor
                        DisabledFill: =gblAppStyles.Label.DisabledFill
                        Fill: =gblAppStyles.Label.Fill
                        FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                        FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                        Font: =Font.'Segoe UI'
                        Height: =32*1
                        HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                        HoverColor: =gblAppStyles.Label.HoverColor
                        HoverFill: =gblAppStyles.Label.HoverFill
                        PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                        PressedColor: =gblAppStyles.Label.PressedColor
                        PressedFill: =gblAppStyles.Label.PressedFill
                        Size: =gblAppStyles.Label.Size.Medium
                        Text: |-
                            =With(
                                {
                                    varDefault: "The details you specifiy here are applied to all projects.",
                                    varOOBTextId: "lblGlobalSettingsText__locText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        Tooltip: =Self.Text
                        VerticalAlign: =VerticalAlign.Top
                        Width: =Parent.Width - Self.X - 30
                        X: =30*1
                        Y: =0*1
                        ZIndex: =17

                    lblGlobalSettingsCategoryHeader As label:
                        BorderColor: =gblAppStyles.Label.BorderColor
                        BorderThickness: =gblAppStyles.Label.BorderThickness
                        Color: =gblAppStyles.Label.Color
                        DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                        DisabledColor: =gblAppStyles.Label.DisabledColor
                        DisabledFill: =gblAppStyles.Label.DisabledFill
                        Fill: =gblAppStyles.Label.Fill
                        FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                        FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                        Font: =Font.'Segoe UI'
                        FontWeight: =FontWeight.Semibold
                        Height: =32*1
                        HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                        HoverColor: =gblAppStyles.Label.HoverColor
                        HoverFill: =gblAppStyles.Label.HoverFill
                        PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                        PressedColor: =gblAppStyles.Label.PressedColor
                        PressedFill: =gblAppStyles.Label.PressedFill
                        Role: =TextRole.Heading2
                        Size: =gblAppStyles.Label.Size.Medium
                        Text: |-
                            =With(
                                {
                                    varDefault: "Category",
                                    varOOBTextId: "lblGlobalSettingsCategoryHeader__locText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        Tooltip: =Self.Text
                        Width: =250*1
                        X: =30*1
                        Y: =lblGlobalSettingsText.Y + lblGlobalSettingsText.Height
                        ZIndex: =18

                    galCategories As gallery.galleryHorizontal:
                        AccessibleLabel: |-
                            =With(
                                {
                                    varDefault: "List of categories",
                                    varOOBTextId: "galCategories__locAccessibleText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        BorderColor: =gblAppStyles.ButtonSecondary.FocusedBorderColor
                        Default: |-
                            =If(
                                IsBlank(locGalleryDefaultCategory),
                                {},
                                LookUp(
                                    colCategories,
                                    Order = locGalleryDefaultCategory.Order
                                )
                            )
                        Fill: =Transparent
                        FocusedBorderThickness: =2
                        Height: =90
                        Items: =colCategories
                        TabIndex: |-
                            =If(
                                locDeleteSettings,
                                -1,
                                If(
                                    Self.Visible,
                                    0,
                                    -1
                                )
                            )
                        TemplatePadding: =0
                        TemplateSize: =242
                        Width: |-
                            =Min(
                                Self.TemplateWidth * CountRows(Self.AllItems),
                                Parent.Width - 250
                            )
                        X: =lblGlobalSettingsCategoryHeader.X
                        Y: =lblGlobalSettingsCategoryHeader.Y + lblGlobalSettingsCategoryHeader.Height
                        ZIndex: =19

                        txtCategoryName As text:
                            AccessibleLabel: =Self.HintText
                            BorderColor: =gblAppStyles.TextInput.BorderColor
                            BorderThickness: =gblAppStyles.TextInput.BorderThickness
                            Color: =gblAppStyles.TextInput.Color
                            Default: =ThisItem.CategoryName
                            DisabledBorderColor: =gblAppStyles.TextInput.DisabledBorderColor
                            DisabledColor: =gblAppStyles.TextInput.DisabledColor
                            DisabledFill: =gblAppStyles.TextInput.DisabledFill
                            Fill: =gblAppStyles.TextInput.Fill
                            FocusedBorderColor: =gblAppStyles.TextInput.FocusedBorderColor
                            FocusedBorderThickness: =gblAppStyles.TextInput.FocusedBorderThickness
                            Font: =Font.'Segoe UI'
                            Height: =32*1
                            HintText: |-
                                =With(
                                    {
                                        varDefault: "Type name here...",
                                        varOOBTextId: "txtCategoryName__locHintText"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            HoverBorderColor: =gblAppStyles.TextInput.HoverBorderColor
                            HoverColor: =gblAppStyles.TextInput.HoverColor
                            HoverFill: =gblAppStyles.TextInput.HoverFill
                            MaxLength: =750
                            OnChange: |-
                                =UpdateContext(
                                    {
                                        locSettingsChanged: true,
                                        locCategoryChanged: true
                                    }
                                )
                            OnSelect: |-
                                =UpdateContext({locCategoryColorPicker: false})
                            PaddingLeft: =15
                            PressedBorderColor: =gblAppStyles.TextInput.PressedBorderColor
                            PressedColor: =gblAppStyles.TextInput.PressedColor
                            PressedFill: =gblAppStyles.TextInput.PressedFill
                            RadiusBottomLeft: =gblAppStyles.TextInput.RadiusBottomLeft
                            RadiusBottomRight: =gblAppStyles.TextInput.RadiusBottomRight
                            RadiusTopLeft: =gblAppStyles.TextInput.RadiusTopLeft
                            RadiusTopRight: =gblAppStyles.TextInput.RadiusTopRight
                            Size: =gblAppStyles.TextInput.Size
                            TabIndex: |-
                                =If(
                                    locDeleteSettings,
                                    -1,
                                    If(
                                        Self.Visible,
                                        0,
                                        -1
                                    )
                                )
                            Tooltip: =Self.HintText
                            Width: =Parent.TemplateWidth - Self.X - 5
                            X: =btnCategoryColorPreview.X + btnCategoryColorPreview.Width + 10
                            Y: =lblCategoryTitle.Y + lblCategoryTitle.Height + 5
                            ZIndex: =1

                        btnCategoryColorPreview As button:
                            BorderColor: |-
                                =If(
                                    gblThemeDark,
                                    ColorValue("#616161"),
                                    White
                                )
                            BorderThickness: =0
                            Color: =Transparent
                            Fill: |-
                                =Coalesce(
                                    ColorValue(galCategoryColorPicker.Selected.Color),
                                    If(
                                        gblThemeDark,
                                        ColorValue(ThisItem.DarkColor),
                                        ColorValue(ThisItem.CategoryColor)
                                    ),
                                    ColorValue("#E0E0E0")
                                )
                            FocusedBorderColor: =gblAppStyles.ButtonSecondary.FocusedBorderColor
                            FocusedBorderThickness: =2
                            Font: =Font.'Segoe UI'
                            Height: =32*1
                            HoverBorderColor: =Self.BorderColor
                            HoverColor: =Self.Color
                            HoverFill: =Self.Fill
                            OnSelect: |-
                                =UpdateContext({locCategoryColorPicker: true});UpdateContext({locScreenReaderAnnouncedText: "Color Picker Expanded"})
                            PressedBorderColor: =Self.BorderColor
                            PressedColor: =Self.Color
                            PressedFill: =Self.Fill
                            RadiusBottomLeft: =5
                            RadiusBottomRight: =5
                            RadiusTopLeft: =5
                            RadiusTopRight: =5
                            TabIndex: |-
                                =If(
                                    locDeleteSettings,
                                    -1,
                                    If(
                                        Self.Visible,
                                        0,
                                        -1
                                    )
                                )
                            Text: |-
                                =With(
                                    {
                                        varDefault: "Category color",
                                        varOOBTextId: "btnCategoryColorPreview__locText"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            Tooltip: =Self.Text
                            Visible: =!(ThisItem.IsSelected && locCategoryColorPicker)
                            Width: =32*1
                            X: =10
                            Y: =txtCategoryName.Y + (txtCategoryName.Height - Self.Height) / 2
                            ZIndex: =2

                        imgDeleteCategory As image:
                            AccessibleLabel: |-
                                =With(
                                    {
                                        varDefault: "Click to delete category",
                                        varOOBTextId: "imgDeleteCategory__locAccessibleText"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            DisabledFill: |-
                                =With(
                                    {
                                        varImageIsCategory: LookUp(
                                            staticIcons,
                                            staticIconName = "Delete"
                                        ).staticIconIsCategory
                                    },
                                    If(
                                        varImageIsCategory,
                                        gblAppStyles.Icons.DisabledFill_Category,
                                        Transparent
                                    )
                                )
                            Fill: |-
                                =With(
                                    {
                                        varImageIsCategory: LookUp(
                                            staticIcons,
                                            staticIconName = "Delete"
                                        ).staticIconIsCategory
                                    },
                                    If(
                                        varImageIsCategory,
                                        gblAppStyles.Icons.Fill_Category,
                                        Transparent
                                    )
                                )
                            Height: =22*1
                            Image: |
                                =With(
                                    {
                                        varImageRecord: LookUp(
                                            staticIcons,
                                            staticIconName = "Delete"
                                        ),
                                        varColor: If(
                                            Self.DisplayMode = DisplayMode.Disabled,
                                            gblAppStyles.Icons.DisabledColor,
                                            gblAppStyles.Icons.Color
                                        )
                                    },
                                    With(
                                        {
                                            varImageData: Concatenate(
                                                "data:image/svg+xml;utf8, ",
                                                EncodeUrl(
                                                    Concatenate(
                                                        "<svg viewBox='",
                                                        varImageRecord.staticIconViewbox,
                                                        "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                        varImageRecord.staticIconPath,
                                                        "' fill='#",
                                                        varColor,
                                                        "'/></svg>"
                                                    )
                                                )
                                            )
                                        },
                                        varImageData
                                    )
                                )
                            OnSelect: |-
                                =Reset(chkConfirmDelete_Settings);
                                If(
                                    !IsBlank(ThisItem.ID),
                                    Collect(
                                        colRemovedCategories,
                                        ThisItem
                                    )
                                );
                                UpdateContext(
                                    {
                                        locDeleteSettings: true,
                                        locSettingType: "category"
                                    }
                                );
                                //set focus start
                                    UpdateContext({locSetFocusTimerStart: false});
                                    UpdateContext({locSetFocusControlTarget: "imgCloseWarning_Settings"});
                                    UpdateContext({locSetFocusTimerStart: true});
                                //set focus end  
                                //screen reader start
                                UpdateContext(
                                    {
                                        locScreenReaderAnnouncedText: With(
                                            {
                                                varAnnouncedText: With(
                                                    {
                                                        varDefault: "Opening a dialog to confirm deletion of the category",
                                                        varOOBTextId: "imgDeleteCategory_Announcement"
                                                    },
                                                    With(
                                                        {
                                                            varLocalizedText: LookUp(
                                                                colLocalization,
                                                                OOBTextID = varOOBTextId,
                                                                LocalizedText
                                                            )
                                                        },
                                                        Coalesce(
                                                            varLocalizedText,
                                                            varDefault
                                                        )
                                                    )
                                                )
                                            },
                                            If(
                                                locScreenReaderAnnouncedText = varAnnouncedText,
                                                Concatenate(
                                                    varAnnouncedText,
                                                    " "
                                                ),
                                                varAnnouncedText
                                            )
                                        )
                                    }
                                );
                                //screen reader end
                            PaddingRight: =0.00
                            PaddingTop: =0.00
                            RadiusBottomLeft: =5
                            RadiusBottomRight: =5
                            RadiusTopLeft: =5
                            RadiusTopRight: =5
                            TabIndex: |-
                                =If(
                                    locDeleteSettings,
                                    -1,
                                    If(
                                        Self.Visible,
                                        0,
                                        -1
                                    )
                                )
                            Tooltip: =Self.AccessibleLabel
                            Visible: =ThisItem.IsSelected
                            Width: =22*1
                            X: =txtCategoryName.X + txtCategoryName.Width - Self.Width - 10
                            Y: =txtCategoryName.Y + (txtCategoryName.Height - Self.Height) / 2
                            ZIndex: =3

                        lblCategoryTitle As label:
                            BorderColor: =gblAppStyles.Label.BorderColor
                            BorderThickness: =gblAppStyles.Label.BorderThickness
                            Color: =gblAppStyles.Label.Color
                            DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                            DisabledColor: =gblAppStyles.Label.DisabledColor
                            DisabledFill: =gblAppStyles.Label.DisabledFill
                            Fill: =gblAppStyles.Label.Fill
                            FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                            FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                            Font: =Font.'Segoe UI'
                            Height: =21
                            HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                            HoverColor: =gblAppStyles.Label.HoverColor
                            HoverFill: =gblAppStyles.Label.HoverFill
                            PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                            PressedColor: =gblAppStyles.Label.PressedColor
                            PressedFill: =gblAppStyles.Label.PressedFill
                            Size: =gblAppStyles.Label.Size.Medium
                            Text: |-
                                =With(
                                    {
                                        varDefault: "Category " & ThisItem.Order,
                                        varOOBTextId: "lblCategoryTitle__locText",
                                        varParam0: ThisItem.Order
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        If(
                                            IsBlankOrError(varParam0),
                                            Coalesce(
                                                varLocalizedText,
                                                varDefault
                                            ),
                                            Coalesce(
                                                Substitute(
                                                    varLocalizedText,
                                                    "{0}",
                                                    Text(varParam0)
                                                ),
                                                varDefault
                                            )
                                        )
                                    )
                                )
                            Tooltip: =Self.Text
                            Width: =242
                            X: =0*1
                            Y: =0*1
                            ZIndex: =4

                        galCategoryColorPicker As gallery.galleryHorizontal:
                            AccessibleLabel: |-
                                =With(
                                    {
                                        varDefault: "List of colors",
                                        varOOBTextId: "galCategoryColorPicker__locAccessibleText"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            BorderColor: =gblAppStyles.ButtonPrimary.Fill
                            BorderThickness: =1
                            Default: |-
                                =If(
                                    gblThemeDark,
                                    LookUp(
                                        colProjectCoverColors,
                                        Color = ThisItem.DarkColor
                                    ),
                                    LookUp(
                                        colProjectCoverColors,
                                        Color = ThisItem.CategoryColor
                                    )
                                )
                            Fill: =gblAppStyles.ButtonSecondary.Fill
                            FocusedBorderThickness: =2
                            Height: =48*1
                            Items: |-
                                =Filter(
                                    colProjectCoverColors,
                                    Theme = If(
                                        gblThemeDark,
                                        "dark",
                                        "default"
                                    )
                                )
                            OnSelect: |
                                =UpdateContext(
                                    {
                                        locCategoryColorPicker: false,
                                        locSettingsChanged: true,
                                        locCategoryChanged: true
                                    }
                                );
                            TabIndex: |-
                                =If(
                                    locDeleteSettings,
                                    -1,
                                    If(
                                        Self.Visible,
                                        0,
                                        -1
                                    )
                                )
                            TemplatePadding: =0
                            TemplateSize: =38
                            Visible: =ThisItem.IsSelected && locCategoryColorPicker
                            Width: =Parent.TemplateWidth - Self.X - 20
                            X: =imgCategoryCloseColorPicker.X + imgCategoryCloseColorPicker.Width + 5
                            Y: =txtCategoryName.Y
                            ZIndex: =5

                            btnCategoryColorPickerPreview As button:
                                BorderColor: |-
                                    =If(
                                        gblThemeDark,
                                        ColorValue("#616161"),
                                        White
                                    )
                                Color: =Transparent
                                Fill: =ColorValue(ThisItem.Color)
                                FocusedBorderColor: =gblAppStyles.ButtonSecondary.FocusedBorderColor
                                FocusedBorderThickness: =2
                                Font: =Font.'Segoe UI'
                                Height: =24*1
                                HoverBorderColor: =Self.BorderColor
                                HoverColor: =Self.Color
                                HoverFill: =Self.Fill
                                OnSelect: =Select(Parent)
                                PressedBorderColor: =Self.BorderColor
                                PressedColor: =Self.Color
                                PressedFill: =Self.Fill
                                RadiusBottomLeft: =5
                                RadiusBottomRight: =5
                                RadiusTopLeft: =5
                                RadiusTopRight: =5
                                TabIndex: |-
                                    =If(
                                        locDeleteSettings,
                                        -1,
                                        If(
                                            Self.Visible,
                                            0,
                                            -1
                                        )
                                    )
                                Text: |-
                                    =With(
                                        {
                                            varDefault: "Click to select the color",
                                            varOOBTextId: "btnProjectColorForeground__locText"
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextID = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            Coalesce(
                                                varLocalizedText,
                                                varDefault
                                            )
                                        )
                                    ) & " " & ThisItem.Color
                                Width: =24*1
                                X: =5
                                Y: =4*1
                                ZIndex: =1

                            imgCategoryColorPicker As image:
                                AccessibleLabel: |-
                                    =With(
                                        {
                                            varDefault: "Selected color",
                                            varOOBTextId: "imgCategoryColorPicker__locAccessibleText"
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextID = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            Coalesce(
                                                varLocalizedText,
                                                varDefault
                                            )
                                        )
                                    )
                                Height: =22
                                Image: |
                                    =With(
                                        {
                                            varImageRecord: LookUp(
                                                staticIcons,
                                                staticIconName = "Check"
                                            ),
                                            varColor: If(
                                                Self.DisplayMode = DisplayMode.Disabled,
                                                gblAppStyles.Icons.DisabledColor,
                                                gblAppStyles.Icons.Color
                                            )
                                        },
                                        With(
                                            {
                                                varImageData: Concatenate(
                                                    "data:image/svg+xml;utf8, ",
                                                    EncodeUrl(
                                                        Concatenate(
                                                            "<svg viewBox='",
                                                            varImageRecord.staticIconViewbox,
                                                            "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                            varImageRecord.staticIconPath,
                                                            "' fill='#",
                                                            varColor,
                                                            "'/></svg>"
                                                        )
                                                    )
                                                )
                                            },
                                            varImageData
                                        )
                                    )
                                OnSelect: =Select(Parent)
                                PaddingBottom: =2
                                PaddingLeft: =2
                                PaddingRight: =2
                                PaddingTop: =2
                                Tooltip: =Self.AccessibleLabel
                                Visible: =ThisItem.IsSelected
                                Width: =22
                                X: =btnCategoryColorPickerPreview.X + (btnCategoryColorPickerPreview.Width - Self.Width) / 2
                                Y: =btnCategoryColorPickerPreview.Y + (btnCategoryColorPickerPreview.Width - Self.Height) / 2
                                ZIndex: =2

                        imgCategoryCloseColorPicker As image:
                            AccessibleLabel: |-
                                =With(
                                    {
                                        varDefault: "Click to close color picker",
                                        varOOBTextId: "_translateCommon__CloseColorPicker"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            DisabledFill: |-
                                =With(
                                    {
                                        varImageIsCategory: LookUp(
                                            staticIcons,
                                            staticIconName = "Dismiss"
                                        ).staticIconIsCategory
                                    },
                                    If(
                                        varImageIsCategory,
                                        gblAppStyles.Icons.DisabledFill_Category,
                                        Transparent
                                    )
                                )
                            Fill: |-
                                =With(
                                    {
                                        varImageIsCategory: LookUp(
                                            staticIcons,
                                            staticIconName = "Dismiss"
                                        ).staticIconIsCategory
                                    },
                                    If(
                                        varImageIsCategory,
                                        gblAppStyles.Icons.Fill_Category,
                                        Transparent
                                    )
                                )
                            Height: =32*1
                            Image: |
                                =With(
                                    {
                                        varImageRecord: LookUp(
                                            staticIcons,
                                            staticIconName = "Dismiss"
                                        ),
                                        varColor: If(
                                            Self.DisplayMode = DisplayMode.Disabled,
                                            gblAppStyles.Icons.DisabledColor,
                                            gblAppStyles.Icons.Color
                                        )
                                    },
                                    With(
                                        {
                                            varImageData: Concatenate(
                                                "data:image/svg+xml;utf8, ",
                                                EncodeUrl(
                                                    Concatenate(
                                                        "<svg viewBox='",
                                                        varImageRecord.staticIconViewbox,
                                                        "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                        varImageRecord.staticIconPath,
                                                        "' fill='#",
                                                        varColor,
                                                        "'/></svg>"
                                                    )
                                                )
                                            )
                                        },
                                        varImageData
                                    )
                                )
                            OnSelect: |-
                                =UpdateContext({locCategoryColorPicker: false});UpdateContext({locScreenReaderAnnouncedText: "Color Picker Collapsed"})
                            PaddingBottom: =4
                            PaddingLeft: =4
                            PaddingRight: =4
                            PaddingTop: =4
                            RadiusBottomLeft: =5
                            RadiusBottomRight: =5
                            RadiusTopLeft: =5
                            RadiusTopRight: =5
                            TabIndex: |-
                                =If(
                                    locDeleteSettings,
                                    -1,
                                    If(
                                        Self.Visible,
                                        0,
                                        -1
                                    )
                                )
                            Tooltip: =Self.AccessibleLabel
                            Visible: =ThisItem.IsSelected && locCategoryColorPicker
                            Width: =32*1
                            X: =btnCategoryColorPreview.X
                            Y: =galCategoryColorPicker.Y
                            ZIndex: =6

                    lblGlobalSettingsPriorityHeader As label:
                        BorderColor: =gblAppStyles.Label.BorderColor
                        BorderThickness: =gblAppStyles.Label.BorderThickness
                        Color: =gblAppStyles.Label.Color
                        DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                        DisabledColor: =gblAppStyles.Label.DisabledColor
                        DisabledFill: =gblAppStyles.Label.DisabledFill
                        Fill: =gblAppStyles.Label.Fill
                        FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                        FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                        Font: =Font.'Segoe UI'
                        FontWeight: =FontWeight.Semibold
                        Height: =32*1
                        HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                        HoverColor: =gblAppStyles.Label.HoverColor
                        HoverFill: =gblAppStyles.Label.HoverFill
                        PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                        PressedColor: =gblAppStyles.Label.PressedColor
                        PressedFill: =gblAppStyles.Label.PressedFill
                        Role: =TextRole.Heading2
                        Size: =gblAppStyles.Label.Size.Medium
                        Text: |-
                            =With(
                                {
                                    varDefault: "Priority",
                                    varOOBTextId: "lblGlobalSettingsPriorityHeader__locText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        Tooltip: =Self.Text
                        Width: =250*1
                        X: =30*1
                        Y: =galCategories.Y + galCategories.Height + 5
                        ZIndex: =20

                    galPriorities As gallery.galleryHorizontal:
                        AccessibleLabel: |-
                            =With(
                                {
                                    varDefault: "List of priorities",
                                    varOOBTextId: "galPriorities__locAccessibleText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        BorderColor: =gblAppStyles.ButtonSecondary.FocusedBorderColor
                        Default: |-
                            =If(
                                IsBlank(locGalleryDefaultPriority),
                                {},
                                LookUp(
                                    colPriorities,
                                    Order = locGalleryDefaultPriority.Order
                                )
                            )
                        Fill: =Transparent
                        FocusedBorderThickness: =2
                        Height: =90
                        Items: =colPriorities
                        TabIndex: |-
                            =If(
                                locDeleteSettings,
                                -1,
                                If(
                                    Self.Visible,
                                    0,
                                    -1
                                )
                            )
                        TemplatePadding: =0
                        TemplateSize: =242
                        Width: |-
                            =Min(
                                Self.TemplateWidth * CountRows(Self.AllItems),
                                Parent.Width - 250
                            )
                        X: =lblGlobalSettingsPriorityHeader.X
                        Y: =lblGlobalSettingsPriorityHeader.Y + lblGlobalSettingsPriorityHeader.Height
                        ZIndex: =21

                        txtPriorityName As text:
                            AccessibleLabel: =Self.HintText
                            BorderColor: =gblAppStyles.TextInput.BorderColor
                            BorderThickness: =gblAppStyles.TextInput.BorderThickness
                            Color: =gblAppStyles.TextInput.Color
                            Default: =ThisItem.PriorityName
                            DisabledBorderColor: =gblAppStyles.TextInput.DisabledBorderColor
                            DisabledColor: =gblAppStyles.TextInput.DisabledColor
                            DisabledFill: =gblAppStyles.TextInput.DisabledFill
                            Fill: =gblAppStyles.TextInput.Fill
                            FocusedBorderColor: =gblAppStyles.TextInput.FocusedBorderColor
                            FocusedBorderThickness: =gblAppStyles.TextInput.FocusedBorderThickness
                            Font: =Font.'Segoe UI'
                            Height: =32*1
                            HintText: |-
                                =With(
                                    {
                                        varDefault: "Type name here...",
                                        varOOBTextId: "txtPriorityName__locHintText"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            HoverBorderColor: =gblAppStyles.TextInput.HoverBorderColor
                            HoverColor: =gblAppStyles.TextInput.HoverColor
                            HoverFill: =gblAppStyles.TextInput.HoverFill
                            MaxLength: =750
                            OnChange: |-
                                =UpdateContext(
                                    {
                                        locSettingsChanged: true,
                                        locPriorityChanged: true
                                    }
                                )
                            OnSelect: |-
                                =UpdateContext({locPriorityColorPicker: false})
                            PaddingLeft: =15
                            PressedBorderColor: =gblAppStyles.TextInput.PressedBorderColor
                            PressedColor: =gblAppStyles.TextInput.PressedColor
                            PressedFill: =gblAppStyles.TextInput.PressedFill
                            RadiusBottomLeft: =gblAppStyles.TextInput.RadiusBottomLeft
                            RadiusBottomRight: =gblAppStyles.TextInput.RadiusBottomRight
                            RadiusTopLeft: =gblAppStyles.TextInput.RadiusTopLeft
                            RadiusTopRight: =gblAppStyles.TextInput.RadiusTopRight
                            Size: =gblAppStyles.TextInput.Size
                            TabIndex: |-
                                =If(
                                    locDeleteSettings,
                                    -1,
                                    If(
                                        Self.Visible,
                                        0,
                                        -1
                                    )
                                )
                            Tooltip: =Self.HintText
                            Width: =Parent.TemplateWidth - Self.X - 5
                            X: =btnPriorityColorPreview.X + btnPriorityColorPreview.Width + 10
                            Y: =lblPriorityTitle.Y + lblPriorityTitle.Height + 5
                            ZIndex: =1

                        btnPriorityColorPreview As button:
                            BorderColor: |-
                                =If(
                                    gblThemeDark,
                                    ColorValue("#616161"),
                                    White
                                )
                            BorderThickness: =0
                            Color: =Transparent
                            Fill: |-
                                =Coalesce(
                                    ColorValue(galPriorityColorPicker.Selected.Color),
                                    If(
                                        gblThemeDark,
                                        ColorValue(ThisItem.DarkColor),
                                        ColorValue(ThisItem.PriorityColor)
                                    ),
                                    ColorValue("#E0E0E0")
                                )
                            FocusedBorderColor: =gblAppStyles.ButtonSecondary.FocusedBorderColor
                            FocusedBorderThickness: =2
                            Font: =Font.'Segoe UI'
                            Height: =32*1
                            HoverBorderColor: =Self.BorderColor
                            HoverColor: =Self.Color
                            HoverFill: =Self.Fill
                            OnSelect: |-
                                =UpdateContext({locPriorityColorPicker: true})
                            PressedBorderColor: =Self.BorderColor
                            PressedColor: =Self.Color
                            PressedFill: =Self.Fill
                            RadiusBottomLeft: =5
                            RadiusBottomRight: =5
                            RadiusTopLeft: =5
                            RadiusTopRight: =5
                            TabIndex: |-
                                =If(
                                    locDeleteSettings,
                                    -1,
                                    If(
                                        Self.Visible,
                                        0,
                                        -1
                                    )
                                )
                            Text: |-
                                =With(
                                    {
                                        varDefault: "Priority color",
                                        varOOBTextId: "btnPriorityColorPreview__locText"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            Tooltip: =Self.Text
                            Visible: =!(ThisItem.IsSelected && locPriorityColorPicker)
                            Width: =32*1
                            X: =10
                            Y: =txtPriorityName.Y + (txtPriorityName.Height - Self.Height) / 2
                            ZIndex: =2

                        imgDeletePriority As image:
                            AccessibleLabel: |-
                                =With(
                                    {
                                        varDefault: "Click to delete priority",
                                        varOOBTextId: "imgDeletePriority__locAccessibleText"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            DisabledFill: |-
                                =With(
                                    {
                                        varImageIsCategory: LookUp(
                                            staticIcons,
                                            staticIconName = "Delete"
                                        ).staticIconIsCategory
                                    },
                                    If(
                                        varImageIsCategory,
                                        gblAppStyles.Icons.DisabledFill_Category,
                                        Transparent
                                    )
                                )
                            Fill: |-
                                =With(
                                    {
                                        varImageIsCategory: LookUp(
                                            staticIcons,
                                            staticIconName = "Delete"
                                        ).staticIconIsCategory
                                    },
                                    If(
                                        varImageIsCategory,
                                        gblAppStyles.Icons.Fill_Category,
                                        Transparent
                                    )
                                )
                            Height: =22*1
                            Image: |
                                =With(
                                    {
                                        varImageRecord: LookUp(
                                            staticIcons,
                                            staticIconName = "Delete"
                                        ),
                                        varColor: If(
                                            Self.DisplayMode = DisplayMode.Disabled,
                                            gblAppStyles.Icons.DisabledColor,
                                            gblAppStyles.Icons.Color
                                        )
                                    },
                                    With(
                                        {
                                            varImageData: Concatenate(
                                                "data:image/svg+xml;utf8, ",
                                                EncodeUrl(
                                                    Concatenate(
                                                        "<svg viewBox='",
                                                        varImageRecord.staticIconViewbox,
                                                        "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                        varImageRecord.staticIconPath,
                                                        "' fill='#",
                                                        varColor,
                                                        "'/></svg>"
                                                    )
                                                )
                                            )
                                        },
                                        varImageData
                                    )
                                )
                            OnSelect: |-
                                =Reset(chkConfirmDelete_Settings);
                                If(
                                    !IsBlank(ThisItem.ID),
                                    Collect(
                                        colRemovedPriorities,
                                        ThisItem
                                    )
                                );
                                UpdateContext(
                                    {
                                        locDeleteSettings: true,
                                        locSettingType: "priority"
                                    }
                                );
                                //set focus start
                                    UpdateContext({locSetFocusTimerStart: false});
                                    UpdateContext({locSetFocusControlTarget: "imgCloseWarning_Settings"});
                                    UpdateContext({locSetFocusTimerStart: true});
                                //set focus end  
                                //screen reader start
                                UpdateContext(
                                    {
                                        locScreenReaderAnnouncedText: With(
                                            {
                                                varAnnouncedText: With(
                                                    {
                                                        varDefault: "Opening a dialog to confirm deletion of the priority",
                                                        varOOBTextId: "imgDeletePriority_Announcement"
                                                    },
                                                    With(
                                                        {
                                                            varLocalizedText: LookUp(
                                                                colLocalization,
                                                                OOBTextID = varOOBTextId,
                                                                LocalizedText
                                                            )
                                                        },
                                                        Coalesce(
                                                            varLocalizedText,
                                                            varDefault
                                                        )
                                                    )
                                                )
                                            },
                                            If(
                                                locScreenReaderAnnouncedText = varAnnouncedText,
                                                Concatenate(
                                                    varAnnouncedText,
                                                    " "
                                                ),
                                                varAnnouncedText
                                            )
                                        )
                                    }
                                );
                                //screen reader end
                            PaddingRight: =0.00
                            PaddingTop: =0.00
                            RadiusBottomLeft: =5
                            RadiusBottomRight: =5
                            RadiusTopLeft: =5
                            RadiusTopRight: =5
                            TabIndex: |-
                                =If(
                                    locDeleteSettings,
                                    -1,
                                    If(
                                        Self.Visible,
                                        0,
                                        -1
                                    )
                                )
                            Tooltip: =Self.AccessibleLabel
                            Visible: =ThisItem.IsSelected
                            Width: =22*1
                            X: =txtPriorityName.X + txtPriorityName.Width - Self.Width - 10
                            Y: =txtPriorityName.Y + (txtPriorityName.Height - Self.Height) / 2
                            ZIndex: =3

                        lblPriorityTitle As label:
                            BorderColor: =gblAppStyles.Label.BorderColor
                            BorderThickness: =gblAppStyles.Label.BorderThickness
                            Color: =gblAppStyles.Label.Color
                            DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                            DisabledColor: =gblAppStyles.Label.DisabledColor
                            DisabledFill: =gblAppStyles.Label.DisabledFill
                            Fill: =gblAppStyles.Label.Fill
                            FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                            FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                            Font: =Font.'Segoe UI'
                            Height: =21
                            HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                            HoverColor: =gblAppStyles.Label.HoverColor
                            HoverFill: =gblAppStyles.Label.HoverFill
                            PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                            PressedColor: =gblAppStyles.Label.PressedColor
                            PressedFill: =gblAppStyles.Label.PressedFill
                            Size: =gblAppStyles.Label.Size.Medium
                            Text: |-
                                =With(
                                    {
                                        varDefault: "Priority " & ThisItem.Order,
                                        varOOBTextId: "lblPriorityTitle__locText",
                                        varParam0: ThisItem.Order
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        If(
                                            IsBlankOrError(varParam0),
                                            Coalesce(
                                                varLocalizedText,
                                                varDefault
                                            ),
                                            Coalesce(
                                                Substitute(
                                                    varLocalizedText,
                                                    "{0}",
                                                    Text(varParam0)
                                                ),
                                                varDefault
                                            )
                                        )
                                    )
                                )
                            Tooltip: =Self.Text
                            Width: =242
                            X: =0*1
                            Y: =0*1
                            ZIndex: =4

                        galPriorityColorPicker As gallery.galleryHorizontal:
                            AccessibleLabel: |-
                                =With(
                                    {
                                        varDefault: "List of colors",
                                        varOOBTextId: "galPriorityColorPicker__locAccessibleText"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            BorderColor: =gblAppStyles.ButtonPrimary.Fill
                            BorderThickness: =1
                            Default: |-
                                =If(
                                    gblThemeDark,
                                    LookUp(
                                        colProjectCoverColors,
                                        Color = ThisItem.DarkColor
                                    ),
                                    LookUp(
                                        colProjectCoverColors,
                                        Color = ThisItem.PriorityColor
                                    )
                                )
                            Fill: =gblAppStyles.ButtonSecondary.Fill
                            FocusedBorderThickness: =2
                            Height: =48*1
                            Items: |-
                                =Filter(
                                    colProjectCoverColors,
                                    Theme = If(
                                        gblThemeDark,
                                        "dark",
                                        "default"
                                    )
                                )
                            OnSelect: |
                                =UpdateContext(
                                    {
                                        locPriorityColorPicker: false,
                                        locSettingsChanged: true,
                                        locPriorityChanged: true
                                    }
                                );
                            TabIndex: |-
                                =If(
                                    locDeleteSettings,
                                    -1,
                                    If(
                                        Self.Visible,
                                        0,
                                        -1
                                    )
                                )
                            TemplatePadding: =0
                            TemplateSize: =38
                            Visible: =ThisItem.IsSelected && locPriorityColorPicker
                            Width: =Parent.TemplateWidth - Self.X 
                            X: =imgPriorityCloseColorPicker.X + imgPriorityCloseColorPicker.Width + 5
                            Y: =txtPriorityName.Y
                            ZIndex: =5

                            btnPriorityColorPickerPreview As button:
                                BorderColor: |-
                                    =If(
                                        gblThemeDark,
                                        ColorValue("#616161"),
                                        White
                                    )
                                Color: =Transparent
                                Fill: =ColorValue(ThisItem.Color)
                                FocusedBorderColor: =gblAppStyles.ButtonSecondary.FocusedBorderColor
                                FocusedBorderThickness: =2
                                Font: =Font.'Segoe UI'
                                Height: =24*1
                                HoverBorderColor: =Self.BorderColor
                                HoverColor: =Self.Color
                                HoverFill: =Self.Fill
                                OnSelect: =Select(Parent)
                                PressedBorderColor: =Self.BorderColor
                                PressedColor: =Self.Color
                                PressedFill: =Self.Fill
                                RadiusBottomLeft: =5
                                RadiusBottomRight: =5
                                RadiusTopLeft: =5
                                RadiusTopRight: =5
                                TabIndex: |-
                                    =If(
                                        locDeleteSettings,
                                        -1,
                                        If(
                                            Self.Visible,
                                            0,
                                            -1
                                        )
                                    )
                                Text: |-
                                    =With(
                                        {
                                            varDefault: "Click to select the color",
                                            varOOBTextId: "btnProjectColorForeground__locText"
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextID = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            Coalesce(
                                                varLocalizedText,
                                                varDefault
                                            )
                                        )
                                    ) & " " & ThisItem.Color
                                Width: =24*1
                                X: =5
                                Y: =4*1
                                ZIndex: =1

                            imgPriorityColorPicker As image:
                                AccessibleLabel: |-
                                    =With(
                                        {
                                            varDefault: "Selected color",
                                            varOOBTextId: "imgPriorityColorPicker__locAccessibleText"
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextID = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            Coalesce(
                                                varLocalizedText,
                                                varDefault
                                            )
                                        )
                                    )
                                Height: =22
                                Image: |
                                    =With(
                                        {
                                            varImageRecord: LookUp(
                                                staticIcons,
                                                staticIconName = "Check"
                                            ),
                                            varColor: If(
                                                Self.DisplayMode = DisplayMode.Disabled,
                                                gblAppStyles.Icons.DisabledColor,
                                                gblAppStyles.Icons.Color
                                            )
                                        },
                                        With(
                                            {
                                                varImageData: Concatenate(
                                                    "data:image/svg+xml;utf8, ",
                                                    EncodeUrl(
                                                        Concatenate(
                                                            "<svg viewBox='",
                                                            varImageRecord.staticIconViewbox,
                                                            "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                            varImageRecord.staticIconPath,
                                                            "' fill='#",
                                                            varColor,
                                                            "'/></svg>"
                                                        )
                                                    )
                                                )
                                            },
                                            varImageData
                                        )
                                    )
                                OnSelect: =Select(Parent)
                                PaddingBottom: =2
                                PaddingLeft: =2
                                PaddingRight: =2
                                PaddingTop: =2
                                Tooltip: =Self.AccessibleLabel
                                Visible: =ThisItem.IsSelected
                                Width: =22
                                X: =btnPriorityColorPickerPreview.X + (btnPriorityColorPickerPreview.Width - Self.Width) / 2
                                Y: =btnPriorityColorPickerPreview.Y + (btnPriorityColorPickerPreview.Width - Self.Height) / 2
                                ZIndex: =2

                        imgPriorityCloseColorPicker As image:
                            AccessibleLabel: |-
                                =With(
                                    {
                                        varDefault: "Click to close color picker",
                                        varOOBTextId: "_translateCommon__CloseColorPicker"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            DisabledFill: |-
                                =With(
                                    {
                                        varImageIsCategory: LookUp(
                                            staticIcons,
                                            staticIconName = "Dismiss"
                                        ).staticIconIsCategory
                                    },
                                    If(
                                        varImageIsCategory,
                                        gblAppStyles.Icons.DisabledFill_Category,
                                        Transparent
                                    )
                                )
                            Fill: |-
                                =With(
                                    {
                                        varImageIsCategory: LookUp(
                                            staticIcons,
                                            staticIconName = "Dismiss"
                                        ).staticIconIsCategory
                                    },
                                    If(
                                        varImageIsCategory,
                                        gblAppStyles.Icons.Fill_Category,
                                        Transparent
                                    )
                                )
                            Height: =32*1
                            Image: |
                                =With(
                                    {
                                        varImageRecord: LookUp(
                                            staticIcons,
                                            staticIconName = "Dismiss"
                                        ),
                                        varColor: If(
                                            Self.DisplayMode = DisplayMode.Disabled,
                                            gblAppStyles.Icons.DisabledColor,
                                            gblAppStyles.Icons.Color
                                        )
                                    },
                                    With(
                                        {
                                            varImageData: Concatenate(
                                                "data:image/svg+xml;utf8, ",
                                                EncodeUrl(
                                                    Concatenate(
                                                        "<svg viewBox='",
                                                        varImageRecord.staticIconViewbox,
                                                        "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                        varImageRecord.staticIconPath,
                                                        "' fill='#",
                                                        varColor,
                                                        "'/></svg>"
                                                    )
                                                )
                                            )
                                        },
                                        varImageData
                                    )
                                )
                            OnSelect: |-
                                =UpdateContext({locPriorityColorPicker: false})
                            PaddingBottom: =4
                            PaddingLeft: =4
                            PaddingRight: =4
                            PaddingTop: =4
                            RadiusBottomLeft: =5
                            RadiusBottomRight: =5
                            RadiusTopLeft: =5
                            RadiusTopRight: =5
                            TabIndex: |-
                                =If(
                                    locDeleteSettings,
                                    -1,
                                    If(
                                        Self.Visible,
                                        0,
                                        -1
                                    )
                                )
                            Tooltip: =Self.AccessibleLabel
                            Visible: =ThisItem.IsSelected && locPriorityColorPicker
                            Width: =32*1
                            X: =btnPriorityColorPreview.X
                            Y: =galPriorityColorPicker.Y
                            ZIndex: =6

                    lblGlobalSettingsStatusHeader As label:
                        BorderColor: =gblAppStyles.Label.BorderColor
                        BorderThickness: =gblAppStyles.Label.BorderThickness
                        Color: =gblAppStyles.Label.Color
                        DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                        DisabledColor: =gblAppStyles.Label.DisabledColor
                        DisabledFill: =gblAppStyles.Label.DisabledFill
                        Fill: =gblAppStyles.Label.Fill
                        FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                        FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                        Font: =Font.'Segoe UI'
                        FontWeight: =FontWeight.Semibold
                        Height: =32*1
                        HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                        HoverColor: =gblAppStyles.Label.HoverColor
                        HoverFill: =gblAppStyles.Label.HoverFill
                        PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                        PressedColor: =gblAppStyles.Label.PressedColor
                        PressedFill: =gblAppStyles.Label.PressedFill
                        Role: =TextRole.Heading2
                        Size: =gblAppStyles.Label.Size.Medium
                        Text: |-
                            =With(
                                {
                                    varDefault: "Status",
                                    varOOBTextId: "lblGlobalSettingsStatusHeader__locText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        Tooltip: =Self.Text
                        Width: =250*1
                        X: =30*1
                        Y: =galPriorities.Y + galPriorities.Height + 5
                        ZIndex: =22

                    galStatuses As gallery.galleryHorizontal:
                        AccessibleLabel: |-
                            =With(
                                {
                                    varDefault: "List of statuses",
                                    varOOBTextId: "galStatuses__locAccessibleText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        BorderColor: =gblAppStyles.ButtonSecondary.FocusedBorderColor
                        Default: |-
                            =If(
                                IsBlank(locGalleryDefaultStatus),
                                {},
                                LookUp(
                                    colStatuses,
                                    Order = locGalleryDefaultStatus.Order
                                )
                            )
                        Fill: =Transparent
                        FocusedBorderThickness: =2
                        Height: =130
                        Items: =colStatuses
                        TabIndex: |-
                            =If(
                                locDeleteSettings,
                                -1,
                                If(
                                    Self.Visible,
                                    0,
                                    -1
                                )
                            )
                        TemplatePadding: =0
                        TemplateSize: =242
                        Width: |-
                            =Min(
                                Self.TemplateWidth * CountRows(Self.AllItems),
                                Parent.Width - 250
                            )
                        X: =lblGlobalSettingsStatusHeader.X
                        Y: =lblGlobalSettingsStatusHeader.Y + lblGlobalSettingsStatusHeader.Height
                        ZIndex: =23

                        lblCompletionStatusHelp As label:
                            BorderColor: =gblAppStyles.Label.BorderColor
                            BorderThickness: =gblAppStyles.Label.BorderThickness
                            Color: =gblAppStyles.Label.Color
                            DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                            DisabledColor: =gblAppStyles.Label.DisabledColor
                            DisabledFill: =gblAppStyles.Label.DisabledFill
                            Fill: =gblAppStyles.Label.Fill
                            FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                            FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                            Font: =Font.'Segoe UI'
                            Height: =42
                            HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                            HoverColor: =gblAppStyles.Label.HoverColor
                            HoverFill: =gblAppStyles.Label.HoverFill
                            PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                            PressedColor: =gblAppStyles.Label.PressedColor
                            PressedFill: =gblAppStyles.Label.PressedFill
                            Size: =gblAppStyles.Label.Size.Medium
                            Text: |-
                                =With(
                                    {
                                        varDefault: "Milestone % completion is calculated using this status.",
                                        varOOBTextId: "lblCompletionStatusHelp__locText"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            Tooltip: =Self.Text
                            Visible: =ThisItem.Order = 1
                            Width: =242
                            X: =0*1
                            Y: =txtStatusName.Y + txtStatusName.Height + 5
                            ZIndex: =1

                        txtStatusName As text:
                            AccessibleLabel: =Self.HintText
                            BorderColor: =gblAppStyles.TextInput.BorderColor
                            BorderThickness: =gblAppStyles.TextInput.BorderThickness
                            Color: =gblAppStyles.TextInput.Color
                            Default: =ThisItem.StatusName
                            DisabledBorderColor: =gblAppStyles.TextInput.DisabledBorderColor
                            DisabledColor: =gblAppStyles.TextInput.DisabledColor
                            DisabledFill: =gblAppStyles.TextInput.DisabledFill
                            Fill: =gblAppStyles.TextInput.Fill
                            FocusedBorderColor: =gblAppStyles.TextInput.FocusedBorderColor
                            FocusedBorderThickness: =gblAppStyles.TextInput.FocusedBorderThickness
                            Font: =Font.'Segoe UI'
                            Height: =32*1
                            HintText: |-
                                =With(
                                    {
                                        varDefault: "Type name here...",
                                        varOOBTextId: "txtStatusName__locHintText"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            HoverBorderColor: =gblAppStyles.TextInput.HoverBorderColor
                            HoverColor: =gblAppStyles.TextInput.HoverColor
                            HoverFill: =gblAppStyles.TextInput.HoverFill
                            MaxLength: =750
                            OnChange: |-
                                =UpdateContext({locSettingsChanged: true, locStatusChanged: true})
                            OnSelect: |-
                                =UpdateContext({locStatusColorPicker: false})
                            PaddingLeft: =15
                            PressedBorderColor: =gblAppStyles.TextInput.PressedBorderColor
                            PressedColor: =gblAppStyles.TextInput.PressedColor
                            PressedFill: =gblAppStyles.TextInput.PressedFill
                            RadiusBottomLeft: =gblAppStyles.TextInput.RadiusBottomLeft
                            RadiusBottomRight: =gblAppStyles.TextInput.RadiusBottomRight
                            RadiusTopLeft: =gblAppStyles.TextInput.RadiusTopLeft
                            RadiusTopRight: =gblAppStyles.TextInput.RadiusTopRight
                            Size: =gblAppStyles.TextInput.Size
                            TabIndex: |-
                                =If(
                                    locDeleteSettings,
                                    -1,
                                    If(
                                        Self.Visible,
                                        0,
                                        -1
                                    )
                                )
                            Tooltip: =Self.HintText
                            Width: =Parent.TemplateWidth - Self.X - 5
                            X: =btnStatusColorPreview.X + btnStatusColorPreview.Width + 10
                            Y: =lblStatusTitle.Y + lblStatusTitle.Height + 5
                            ZIndex: =2

                        btnStatusColorPreview As button:
                            BorderColor: |-
                                =If(
                                    gblThemeDark,
                                    ColorValue("#616161"),
                                    White
                                )
                            BorderThickness: =0
                            Color: =Transparent
                            Fill: |-
                                =Coalesce(
                                    ColorValue(galStatusColorPicker.Selected.Color),
                                    If(
                                        gblThemeDark,
                                        ColorValue(ThisItem.DarkColor),
                                        ColorValue(ThisItem.StatusColor)
                                    ),
                                    ColorValue("#E0E0E0")
                                )
                            FocusedBorderColor: =gblAppStyles.ButtonSecondary.FocusedBorderColor
                            FocusedBorderThickness: =2
                            Font: =Font.'Segoe UI'
                            Height: =32*1
                            HoverBorderColor: =Self.BorderColor
                            HoverColor: =Self.Color
                            HoverFill: =Self.Fill
                            OnSelect: |-
                                =UpdateContext({locStatusColorPicker: true})
                            PressedBorderColor: =Self.BorderColor
                            PressedColor: =Self.Color
                            PressedFill: =Self.Fill
                            RadiusBottomLeft: =5
                            RadiusBottomRight: =5
                            RadiusTopLeft: =5
                            RadiusTopRight: =5
                            TabIndex: |-
                                =If(
                                    locDeleteSettings,
                                    -1,
                                    If(
                                        Self.Visible,
                                        0,
                                        -1
                                    )
                                )
                            Text: |-
                                =With(
                                    {
                                        varDefault: "Status color",
                                        varOOBTextId: "btnStatusColorPreview__locText"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            Tooltip: =Self.Text
                            Visible: =!(ThisItem.IsSelected && locStatusColorPicker)
                            Width: =32*1
                            X: =10
                            Y: =txtStatusName.Y + (txtStatusName.Height - Self.Height) / 2
                            ZIndex: =3

                        imgDeleteStatus As image:
                            AccessibleLabel: |-
                                =With(
                                    {
                                        varDefault: "Click to delete status",
                                        varOOBTextId: "imgDeleteStatus__locAccessibleText"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            DisabledFill: |-
                                =With(
                                    {
                                        varImageIsCategory: LookUp(
                                            staticIcons,
                                            staticIconName = "Delete"
                                        ).staticIconIsCategory
                                    },
                                    If(
                                        varImageIsCategory,
                                        gblAppStyles.Icons.DisabledFill_Category,
                                        Transparent
                                    )
                                )
                            Fill: |-
                                =With(
                                    {
                                        varImageIsCategory: LookUp(
                                            staticIcons,
                                            staticIconName = "Delete"
                                        ).staticIconIsCategory
                                    },
                                    If(
                                        varImageIsCategory,
                                        gblAppStyles.Icons.Fill_Category,
                                        Transparent
                                    )
                                )
                            Height: =22*1
                            Image: |
                                =With(
                                    {
                                        varImageRecord: LookUp(
                                            staticIcons,
                                            staticIconName = "Delete"
                                        ),
                                        varColor: If(
                                            Self.DisplayMode = DisplayMode.Disabled,
                                            gblAppStyles.Icons.DisabledColor,
                                            gblAppStyles.Icons.Color
                                        )
                                    },
                                    With(
                                        {
                                            varImageData: Concatenate(
                                                "data:image/svg+xml;utf8, ",
                                                EncodeUrl(
                                                    Concatenate(
                                                        "<svg viewBox='",
                                                        varImageRecord.staticIconViewbox,
                                                        "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                        varImageRecord.staticIconPath,
                                                        "' fill='#",
                                                        varColor,
                                                        "'/></svg>"
                                                    )
                                                )
                                            )
                                        },
                                        varImageData
                                    )
                                )
                            OnSelect: |-
                                =Reset(chkConfirmDelete_Settings);
                                If(
                                    !IsBlank(ThisItem.ID),
                                    Collect(
                                        colRemovedStatuses,
                                        ThisItem
                                    )
                                );
                                UpdateContext(
                                    {
                                        locDeleteSettings: true,
                                        locSettingType: "status"
                                    }
                                );
                                //set focus start
                                    UpdateContext({locSetFocusTimerStart: false});
                                    UpdateContext({locSetFocusControlTarget: "imgCloseWarning_Settings"});
                                    UpdateContext({locSetFocusTimerStart: true});
                                //set focus end  
                                //screen reader start
                                UpdateContext(
                                    {
                                        locScreenReaderAnnouncedText: With(
                                            {
                                                varAnnouncedText: With(
                                                    {
                                                        varDefault: "Opening a dialog to confirm deletion of the status",
                                                        varOOBTextId: "imgDeleteStatus_Announcement"
                                                    },
                                                    With(
                                                        {
                                                            varLocalizedText: LookUp(
                                                                colLocalization,
                                                                OOBTextID = varOOBTextId,
                                                                LocalizedText
                                                            )
                                                        },
                                                        Coalesce(
                                                            varLocalizedText,
                                                            varDefault
                                                        )
                                                    )
                                                )
                                            },
                                            If(
                                                locScreenReaderAnnouncedText = varAnnouncedText,
                                                Concatenate(
                                                    varAnnouncedText,
                                                    " "
                                                ),
                                                varAnnouncedText
                                            )
                                        )
                                    }
                                );
                                //screen reader end
                            PaddingRight: =0.00
                            PaddingTop: =0.00
                            RadiusBottomLeft: =5
                            RadiusBottomRight: =5
                            RadiusTopLeft: =5
                            RadiusTopRight: =5
                            TabIndex: |-
                                =If(
                                    locDeleteSettings,
                                    -1,
                                    If(
                                        Self.Visible,
                                        0,
                                        -1
                                    )
                                )
                            Tooltip: =Self.AccessibleLabel
                            Visible: =ThisItem.IsSelected && ThisItem.Order <> 1
                            Width: =22*1
                            X: =txtStatusName.X + txtStatusName.Width - Self.Width - 10
                            Y: =txtStatusName.Y + (txtStatusName.Height - Self.Height) / 2
                            ZIndex: =4

                        lblStatusTitle As label:
                            BorderColor: =gblAppStyles.Label.BorderColor
                            BorderThickness: =gblAppStyles.Label.BorderThickness
                            Color: =gblAppStyles.Label.Color
                            DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                            DisabledColor: =gblAppStyles.Label.DisabledColor
                            DisabledFill: =gblAppStyles.Label.DisabledFill
                            Fill: =gblAppStyles.Label.Fill
                            FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                            FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                            Font: =Font.'Segoe UI'
                            Height: =21
                            HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                            HoverColor: =gblAppStyles.Label.HoverColor
                            HoverFill: =gblAppStyles.Label.HoverFill
                            PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                            PressedColor: =gblAppStyles.Label.PressedColor
                            PressedFill: =gblAppStyles.Label.PressedFill
                            Size: =gblAppStyles.Label.Size.Medium
                            Text: |-
                                =If(
                                    ThisItem.Order = 1,
                                    With(
                                        {
                                            varDefault: "Completion status",
                                            varOOBTextId: "_translateCommon__CompletionStatus"
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextID = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            Coalesce(
                                                varLocalizedText,
                                                varDefault
                                            )
                                        )
                                    ),
                                    With(
                                        {
                                            varDefault: "Optional status " & ThisItem.Order - 1,
                                            varOOBTextId: "lblStatusTitle__locText",
                                            varParam0: ThisItem.Order - 1
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextID = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            If(
                                                IsBlankOrError(varParam0),
                                                Coalesce(
                                                    varLocalizedText,
                                                    varDefault
                                                ),
                                                Coalesce(
                                                    Substitute(
                                                        varLocalizedText,
                                                        "{0}",
                                                        Text(varParam0)
                                                    ),
                                                    varDefault
                                                )
                                            )
                                        )
                                    )
                                )
                            Tooltip: =Self.Text
                            Width: =242
                            X: =0*1
                            Y: =0*1
                            ZIndex: =5

                        galStatusColorPicker As gallery.galleryHorizontal:
                            AccessibleLabel: |-
                                =With(
                                    {
                                        varDefault: "List of colors",
                                        varOOBTextId: "galStatusColorPicker__locAccessibleText"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            BorderColor: =gblAppStyles.ButtonPrimary.Fill
                            BorderThickness: =1
                            Default: |-
                                =If(
                                    gblThemeDark,
                                    LookUp(
                                        colProjectCoverColors,
                                        Color = ThisItem.DarkColor
                                    ),
                                    LookUp(
                                        colProjectCoverColors,
                                        Color = ThisItem.StatusColor
                                    )
                                )
                            Fill: =gblAppStyles.ButtonSecondary.Fill
                            FocusedBorderThickness: =2
                            Height: =48*1
                            Items: |-
                                =Filter(
                                    colProjectCoverColors,
                                    Theme = If(
                                        gblThemeDark,
                                        "dark",
                                        "default"
                                    )
                                )
                            OnSelect: |
                                =UpdateContext(
                                    {
                                        locStatusColorPicker: false,
                                        locSettingsChanged: true,
                                        locStatusChanged: true
                                    }
                                );
                            TabIndex: |-
                                =If(
                                    locDeleteSettings,
                                    -1,
                                    If(
                                        Self.Visible,
                                        0,
                                        -1
                                    )
                                )
                            TemplatePadding: =0
                            TemplateSize: =38
                            Visible: =ThisItem.IsSelected && locStatusColorPicker
                            Width: =txtStatusName.Width
                            X: =imgStatusCloseColorPicker.X + imgStatusCloseColorPicker.Width + 5
                            Y: =txtStatusName.Y
                            ZIndex: =6

                            btnStatusColorPickerPreview As button:
                                BorderColor: |-
                                    =If(
                                        gblThemeDark,
                                        ColorValue("#616161"),
                                        White
                                    )
                                Color: =Transparent
                                Fill: =ColorValue(ThisItem.Color)
                                FocusedBorderColor: =gblAppStyles.ButtonSecondary.FocusedBorderColor
                                FocusedBorderThickness: =2
                                Font: =Font.'Segoe UI'
                                Height: =24*1
                                HoverBorderColor: =Self.BorderColor
                                HoverColor: =Self.Color
                                HoverFill: =Self.Fill
                                OnSelect: =Select(Parent)
                                PressedBorderColor: =Self.BorderColor
                                PressedColor: =Self.Color
                                PressedFill: =Self.Fill
                                RadiusBottomLeft: =5
                                RadiusBottomRight: =5
                                RadiusTopLeft: =5
                                RadiusTopRight: =5
                                TabIndex: |-
                                    =If(
                                        locDeleteSettings,
                                        -1,
                                        If(
                                            Self.Visible,
                                            0,
                                            -1
                                        )
                                    )
                                Text: |-
                                    =With(
                                        {
                                            varDefault: "Click to select the color",
                                            varOOBTextId: "btnProjectColorForeground__locText"
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextID = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            Coalesce(
                                                varLocalizedText,
                                                varDefault
                                            )
                                        )
                                    ) & " " & ThisItem.Color
                                Tooltip: =Self.Text
                                Width: =24*1
                                X: =5
                                Y: =4*1
                                ZIndex: =1

                            imgStatusColorPicker As image:
                                AccessibleLabel: |-
                                    =With(
                                        {
                                            varDefault: "Selected color",
                                            varOOBTextId: "imgStatusColorPicker__locAccessibleText"
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextID = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            Coalesce(
                                                varLocalizedText,
                                                varDefault
                                            )
                                        )
                                    )
                                Height: =22
                                Image: |
                                    =With(
                                        {
                                            varImageRecord: LookUp(
                                                staticIcons,
                                                staticIconName = "Check"
                                            ),
                                            varColor: If(
                                                Self.DisplayMode = DisplayMode.Disabled,
                                                gblAppStyles.Icons.DisabledColor,
                                                gblAppStyles.Icons.Color
                                            )
                                        },
                                        With(
                                            {
                                                varImageData: Concatenate(
                                                    "data:image/svg+xml;utf8, ",
                                                    EncodeUrl(
                                                        Concatenate(
                                                            "<svg viewBox='",
                                                            varImageRecord.staticIconViewbox,
                                                            "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                            varImageRecord.staticIconPath,
                                                            "' fill='#",
                                                            varColor,
                                                            "'/></svg>"
                                                        )
                                                    )
                                                )
                                            },
                                            varImageData
                                        )
                                    )
                                OnSelect: =Select(Parent)
                                PaddingBottom: =2
                                PaddingLeft: =2
                                PaddingRight: =2
                                PaddingTop: =2
                                Tooltip: =Self.AccessibleLabel
                                Visible: =ThisItem.IsSelected
                                Width: =22
                                X: =btnStatusColorPickerPreview.X + (btnStatusColorPickerPreview.Width - Self.Width) / 2
                                Y: =btnStatusColorPickerPreview.Y + (btnStatusColorPickerPreview.Width - Self.Height) / 2
                                ZIndex: =2

                        imgStatusCloseColorPicker As image:
                            AccessibleLabel: |-
                                =With(
                                    {
                                        varDefault: "Click to close color picker",
                                        varOOBTextId: "_translateCommon__CloseColorPicker"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            DisabledFill: |-
                                =With(
                                    {
                                        varImageIsCategory: LookUp(
                                            staticIcons,
                                            staticIconName = "Dismiss"
                                        ).staticIconIsCategory
                                    },
                                    If(
                                        varImageIsCategory,
                                        gblAppStyles.Icons.DisabledFill_Category,
                                        Transparent
                                    )
                                )
                            Fill: |-
                                =With(
                                    {
                                        varImageIsCategory: LookUp(
                                            staticIcons,
                                            staticIconName = "Dismiss"
                                        ).staticIconIsCategory
                                    },
                                    If(
                                        varImageIsCategory,
                                        gblAppStyles.Icons.Fill_Category,
                                        Transparent
                                    )
                                )
                            Height: =32*1
                            Image: |
                                =With(
                                    {
                                        varImageRecord: LookUp(
                                            staticIcons,
                                            staticIconName = "Dismiss"
                                        ),
                                        varColor: If(
                                            Self.DisplayMode = DisplayMode.Disabled,
                                            gblAppStyles.Icons.DisabledColor,
                                            gblAppStyles.Icons.Color
                                        )
                                    },
                                    With(
                                        {
                                            varImageData: Concatenate(
                                                "data:image/svg+xml;utf8, ",
                                                EncodeUrl(
                                                    Concatenate(
                                                        "<svg viewBox='",
                                                        varImageRecord.staticIconViewbox,
                                                        "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                        varImageRecord.staticIconPath,
                                                        "' fill='#",
                                                        varColor,
                                                        "'/></svg>"
                                                    )
                                                )
                                            )
                                        },
                                        varImageData
                                    )
                                )
                            OnSelect: |-
                                =UpdateContext({locStatusColorPicker: false})
                            PaddingBottom: =4
                            PaddingLeft: =4
                            PaddingRight: =4
                            PaddingTop: =4
                            RadiusBottomLeft: =5
                            RadiusBottomRight: =5
                            RadiusTopLeft: =5
                            RadiusTopRight: =5
                            TabIndex: |-
                                =If(
                                    locDeleteSettings,
                                    -1,
                                    If(
                                        Self.Visible,
                                        0,
                                        -1
                                    )
                                )
                            Tooltip: =Self.AccessibleLabel
                            Visible: =ThisItem.IsSelected && locStatusColorPicker
                            Width: =32*1
                            X: =btnStatusColorPreview.X
                            Y: =galStatusColorPicker.Y
                            ZIndex: =7

                    grpAddCategory As group:
                        Height: =5
                        Width: =5
                        X: =60
                        Y: =60
                        ZIndex: =31

                        imgAddCategory As image:
                            AccessibleLabel: |-
                                =With(
                                    {
                                        varDefault: "Click to add a category",
                                        varOOBTextId: "imgAddCategory__locAccessibleText"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            DisabledFill: |-
                                =With(
                                    {
                                        varImageIsCategory: LookUp(
                                            staticIcons,
                                            staticIconName = "Add"
                                        ).staticIconIsCategory
                                    },
                                    If(
                                        varImageIsCategory,
                                        gblAppStyles.Icons.DisabledFill_Category,
                                        Transparent
                                    )
                                )
                            Fill: |-
                                =With(
                                    {
                                        varImageIsCategory: LookUp(
                                            staticIcons,
                                            staticIconName = "Add"
                                        ).staticIconIsCategory
                                    },
                                    If(
                                        varImageIsCategory,
                                        gblAppStyles.Icons.Fill_Category,
                                        Transparent
                                    )
                                )
                            Height: =22*1
                            Image: |
                                =With(
                                    {
                                        varImageRecord: LookUp(
                                            staticIcons,
                                            staticIconName = "Add"
                                        ),
                                        varColor: If(
                                            Self.DisplayMode = DisplayMode.Disabled,
                                            gblAppStyles.Icons.DisabledColor,
                                            gblAppStyles.Icons.Color
                                        )
                                    },
                                    With(
                                        {
                                            varImageData: Concatenate(
                                                "data:image/svg+xml;utf8, ",
                                                EncodeUrl(
                                                    Concatenate(
                                                        "<svg viewBox='",
                                                        varImageRecord.staticIconViewbox,
                                                        "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                        varImageRecord.staticIconPath,
                                                        "' fill='#",
                                                        varColor,
                                                        "'/></svg>"
                                                    )
                                                )
                                            )
                                        },
                                        varImageData
                                    )
                                )
                            OnSelect: |-
                                =Collect(
                                    colCategories,
                                    {
                                        CategoryName: Blank(),
                                        CategoryColor: Blank(),
                                        DarkColor: Blank(),
                                        ID: Blank(),
                                        Order: CountRows(colCategories) + 1
                                    }
                                );
                                UpdateContext({locSettingsChanged: true, locGlobalSetting: "category", locGalleryDefaultCategory: Last(colCategories)});
                                Reset(galCategories);
                                //screen reader start
                                UpdateContext(
                                    {
                                        locScreenReaderAnnouncedText: With(
                                            {
                                                varAnnouncedText: With(
                                                    {
                                                        varDefault: "New category added",
                                                        varOOBTextId: "btnAddCategory_Announcement"
                                                    },
                                                    With(
                                                        {
                                                            varLocalizedText: LookUp(
                                                                colLocalization,
                                                                OOBTextID = varOOBTextId,
                                                                LocalizedText
                                                            )
                                                        },
                                                        Coalesce(
                                                            varLocalizedText,
                                                            varDefault
                                                        )
                                                    )
                                                )
                                            },
                                            If(
                                                locScreenReaderAnnouncedText = varAnnouncedText,
                                                Concatenate(
                                                    varAnnouncedText,
                                                    " "
                                                ),
                                                varAnnouncedText
                                            )
                                        )
                                    }
                                );
                                //screen reader end
                            PaddingRight: =0.00
                            PaddingTop: =0.00
                            RadiusBottomLeft: =5
                            RadiusBottomRight: =5
                            RadiusTopLeft: =5
                            RadiusTopRight: =5
                            TabIndex: |-
                                =If(
                                    true,
                                    -1,
                                    0
                                )
                            Tooltip: =Self.AccessibleLabel
                            Width: =22*1
                            X: =galCategories.X + galCategories.Width + 5
                            Y: =btnAddCategory.Y + (btnAddCategory.Height - Self.Height) / 2
                            ZIndex: =24

                        btnAddCategory As button:
                            Align: =Align.Left
                            BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
                            BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
                            Color: =gblAppStyles.ButtonTransparent.Color
                            DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                            DisabledColor: =gblAppStyles.ButtonTransparent.DisabledColor
                            DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
                            Fill: =gblAppStyles.ButtonTransparent.Fill
                            FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
                            FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Normal
                            Height: =26*1
                            HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
                            HoverColor: =gblAppStyles.ButtonTransparent.HoverColor
                            HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
                            OnSelect: |-
                                =Collect(
                                    colCategories,
                                    {
                                        CategoryName: Blank(),
                                        CategoryColor: Blank(),
                                        DarkColor: Blank(),
                                        ID: Blank(),
                                        Order: CountRows(colCategories) + 1
                                    }
                                );
                                UpdateContext(
                                    {
                                        locSettingsChanged: true,
                                        locCategoryChanged: true,
                                        locGlobalSetting: "category",
                                        locGalleryDefaultCategory: Last(colCategories)
                                    }
                                );
                                Reset(galCategories);
                                //screen reader start
                                UpdateContext(
                                    {
                                        locScreenReaderAnnouncedText: With(
                                            {
                                                varAnnouncedText: With(
                                                    {
                                                        varDefault: "New category added",
                                                        varOOBTextId: "btnAddCategory_Announcement"
                                                    },
                                                    With(
                                                        {
                                                            varLocalizedText: LookUp(
                                                                colLocalization,
                                                                OOBTextID = varOOBTextId,
                                                                LocalizedText
                                                            )
                                                        },
                                                        Coalesce(
                                                            varLocalizedText,
                                                            varDefault
                                                        )
                                                    )
                                                )
                                            },
                                            If(
                                                locScreenReaderAnnouncedText = varAnnouncedText,
                                                Concatenate(
                                                    varAnnouncedText,
                                                    " "
                                                ),
                                                varAnnouncedText
                                            )
                                        )
                                    }
                                );
                                //screen reader end
                            PaddingBottom: =0
                            PaddingLeft: =32
                            PaddingRight: =0.00
                            PaddingTop: =0.00
                            PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
                            PressedColor: =gblAppStyles.ButtonTransparent.PressedColor
                            PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
                            RadiusBottomLeft: =gblAppStyles.ButtonTransparent.RadiusBottomLeft
                            RadiusBottomRight: =gblAppStyles.ButtonTransparent.RadiusBottomRight
                            RadiusTopLeft: =gblAppStyles.ButtonTransparent.RadiusTopLeft
                            RadiusTopRight: =gblAppStyles.ButtonTransparent.RadiusTopRight
                            Size: =gblAppStyles.ButtonTransparent.Size
                            TabIndex: |-
                                =If(
                                    locDeleteSettings,
                                    -1,
                                    If(
                                        Self.Visible,
                                        0,
                                        -1
                                    )
                                )
                            Text: |-
                                =With(
                                    {
                                        varDefault: "Add",
                                        varOOBTextId: "btnAddCategory__locText"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            Tooltip: |-
                                =With(
                                    {
                                        varDefault: "Click to add a category",
                                        varOOBTextId: "btnAddCategory__locTooltip"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            Width: =150
                            X: =galCategories.X + galCategories.Width + 5
                            Y: =galCategories.Y+ 26 + 3
                            ZIndex: =25

                    grpAddPriority As group:
                        Height: =5
                        Width: =5
                        X: =60
                        Y: =60
                        ZIndex: =33

                        imgAddPriority As image:
                            AccessibleLabel: |-
                                =With(
                                    {
                                        varDefault: "Click to add a priority",
                                        varOOBTextId: "imgAddPriority__locAccessibleText"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            DisabledFill: |-
                                =With(
                                    {
                                        varImageIsCategory: LookUp(
                                            staticIcons,
                                            staticIconName = "Add"
                                        ).staticIconIsCategory
                                    },
                                    If(
                                        varImageIsCategory,
                                        gblAppStyles.Icons.DisabledFill_Category,
                                        Transparent
                                    )
                                )
                            Fill: |-
                                =With(
                                    {
                                        varImageIsCategory: LookUp(
                                            staticIcons,
                                            staticIconName = "Add"
                                        ).staticIconIsCategory
                                    },
                                    If(
                                        varImageIsCategory,
                                        gblAppStyles.Icons.Fill_Category,
                                        Transparent
                                    )
                                )
                            Height: =22*1
                            Image: |
                                =With(
                                    {
                                        varImageRecord: LookUp(
                                            staticIcons,
                                            staticIconName = "Add"
                                        ),
                                        varColor: If(
                                            Self.DisplayMode = DisplayMode.Disabled,
                                            gblAppStyles.Icons.DisabledColor,
                                            gblAppStyles.Icons.Color
                                        )
                                    },
                                    With(
                                        {
                                            varImageData: Concatenate(
                                                "data:image/svg+xml;utf8, ",
                                                EncodeUrl(
                                                    Concatenate(
                                                        "<svg viewBox='",
                                                        varImageRecord.staticIconViewbox,
                                                        "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                        varImageRecord.staticIconPath,
                                                        "' fill='#",
                                                        varColor,
                                                        "'/></svg>"
                                                    )
                                                )
                                            )
                                        },
                                        varImageData
                                    )
                                )
                            OnSelect: |-
                                =Collect(
                                    colPriorities,
                                    {
                                        PriorityName: Blank(),
                                        PriorityColor: Blank(),
                                        DarkColor: Blank(),
                                        ID: Blank(),
                                        Order: CountRows(colPriorities) + 1
                                    }
                                );
                                UpdateContext({locSettingsChanged: true, locGlobalSetting: "priority", locGalleryDefaultPriority: Last(colPriorities)});
                                Reset(galPriorities);
                                //screen reader start
                                UpdateContext(
                                    {
                                        locScreenReaderAnnouncedText: With(
                                            {
                                                varAnnouncedText: With(
                                                    {
                                                        varDefault: "New priority added",
                                                        varOOBTextId: "btnAddPriority_Announcement"
                                                    },
                                                    With(
                                                        {
                                                            varLocalizedText: LookUp(
                                                                colLocalization,
                                                                OOBTextID = varOOBTextId,
                                                                LocalizedText
                                                            )
                                                        },
                                                        Coalesce(
                                                            varLocalizedText,
                                                            varDefault
                                                        )
                                                    )
                                                )
                                            },
                                            If(
                                                locScreenReaderAnnouncedText = varAnnouncedText,
                                                Concatenate(
                                                    varAnnouncedText,
                                                    " "
                                                ),
                                                varAnnouncedText
                                            )
                                        )
                                    }
                                );
                                //screen reader end
                            PaddingRight: =0.00
                            PaddingTop: =0.00
                            RadiusBottomLeft: =5
                            RadiusBottomRight: =5
                            RadiusTopLeft: =5
                            RadiusTopRight: =5
                            TabIndex: |-
                                =If(
                                    true,
                                    -1,
                                    0
                                )
                            Tooltip: =Self.AccessibleLabel
                            Width: =22*1
                            X: =galPriorities.X + galPriorities.Width + 5
                            Y: =btnAddPriority.Y + (btnAddPriority.Height - Self.Height) / 2
                            ZIndex: =26

                        btnAddPriority As button:
                            Align: =Align.Left
                            BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
                            BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
                            Color: =gblAppStyles.ButtonTransparent.Color
                            DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                            DisabledColor: =gblAppStyles.ButtonTransparent.DisabledColor
                            DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
                            Fill: =gblAppStyles.ButtonTransparent.Fill
                            FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
                            FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Normal
                            Height: =26*1
                            HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
                            HoverColor: =gblAppStyles.ButtonTransparent.HoverColor
                            HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
                            OnSelect: |-
                                =Collect(
                                    colPriorities,
                                    {
                                        PriorityName: Blank(),
                                        PriorityColor: Blank(),
                                        DarkColor: Blank(),
                                        ID: Blank(),
                                        Order: CountRows(colPriorities) + 1
                                    }
                                );
                                UpdateContext(
                                    {
                                        locSettingsChanged: true,
                                        locPriorityChanged: true,
                                        locGlobalSetting: "priority",
                                        locGalleryDefaultPriority: Last(colPriorities)
                                    }
                                );
                                Reset(galPriorities);
                                //screen reader start
                                UpdateContext(
                                    {
                                        locScreenReaderAnnouncedText: With(
                                            {
                                                varAnnouncedText: With(
                                                    {
                                                        varDefault: "New priority added",
                                                        varOOBTextId: "btnAddPriority_Announcement"
                                                    },
                                                    With(
                                                        {
                                                            varLocalizedText: LookUp(
                                                                colLocalization,
                                                                OOBTextID = varOOBTextId,
                                                                LocalizedText
                                                            )
                                                        },
                                                        Coalesce(
                                                            varLocalizedText,
                                                            varDefault
                                                        )
                                                    )
                                                )
                                            },
                                            If(
                                                locScreenReaderAnnouncedText = varAnnouncedText,
                                                Concatenate(
                                                    varAnnouncedText,
                                                    " "
                                                ),
                                                varAnnouncedText
                                            )
                                        )
                                    }
                                );
                                //screen reader end
                            PaddingBottom: =0
                            PaddingLeft: =32
                            PaddingRight: =0.00
                            PaddingTop: =0.00
                            PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
                            PressedColor: =gblAppStyles.ButtonTransparent.PressedColor
                            PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
                            RadiusBottomLeft: =gblAppStyles.ButtonTransparent.RadiusBottomLeft
                            RadiusBottomRight: =gblAppStyles.ButtonTransparent.RadiusBottomRight
                            RadiusTopLeft: =gblAppStyles.ButtonTransparent.RadiusTopLeft
                            RadiusTopRight: =gblAppStyles.ButtonTransparent.RadiusTopRight
                            Size: =gblAppStyles.ButtonTransparent.Size
                            TabIndex: |-
                                =If(
                                    locDeleteSettings,
                                    -1,
                                    If(
                                        Self.Visible,
                                        0,
                                        -1
                                    )
                                )
                            Text: |-
                                =With(
                                    {
                                        varDefault: "Add",
                                        varOOBTextId: "btnAddPriority__locText"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            Tooltip: |-
                                =With(
                                    {
                                        varDefault: "Click to add a priority",
                                        varOOBTextId: "btnAddPriority__locTooltip"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            Width: =150
                            X: =galPriorities.X + galPriorities.Width + 5
                            Y: =galPriorities.Y+ 26 + 3
                            ZIndex: =27

                    grpAddStatus As group:
                        Height: =5
                        Width: =5
                        X: =60
                        Y: =60
                        ZIndex: =35

                        imgAddStatus As image:
                            AccessibleLabel: |-
                                =With(
                                    {
                                        varDefault: "Click to add a status",
                                        varOOBTextId: "imgAddStatus__locAccessibleText"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            DisabledFill: |-
                                =With(
                                    {
                                        varImageIsCategory: LookUp(
                                            staticIcons,
                                            staticIconName = "Add"
                                        ).staticIconIsCategory
                                    },
                                    If(
                                        varImageIsCategory,
                                        gblAppStyles.Icons.DisabledFill_Category,
                                        Transparent
                                    )
                                )
                            Fill: |-
                                =With(
                                    {
                                        varImageIsCategory: LookUp(
                                            staticIcons,
                                            staticIconName = "Add"
                                        ).staticIconIsCategory
                                    },
                                    If(
                                        varImageIsCategory,
                                        gblAppStyles.Icons.Fill_Category,
                                        Transparent
                                    )
                                )
                            Height: =22*1
                            Image: |
                                =With(
                                    {
                                        varImageRecord: LookUp(
                                            staticIcons,
                                            staticIconName = "Add"
                                        ),
                                        varColor: If(
                                            Self.DisplayMode = DisplayMode.Disabled,
                                            gblAppStyles.Icons.DisabledColor,
                                            gblAppStyles.Icons.Color
                                        )
                                    },
                                    With(
                                        {
                                            varImageData: Concatenate(
                                                "data:image/svg+xml;utf8, ",
                                                EncodeUrl(
                                                    Concatenate(
                                                        "<svg viewBox='",
                                                        varImageRecord.staticIconViewbox,
                                                        "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                        varImageRecord.staticIconPath,
                                                        "' fill='#",
                                                        varColor,
                                                        "'/></svg>"
                                                    )
                                                )
                                            )
                                        },
                                        varImageData
                                    )
                                )
                            OnSelect: |-
                                =Collect(
                                    colStatuses,
                                    {
                                        StatusName: Blank(),
                                        StatusColor: Blank(),
                                        ID: Blank(),
                                        Order: CountRows(colStatuses) + 1
                                    }
                                );
                                UpdateContext(
                                    {
                                        locSettingsChanged: true,
                                        locGlobalSetting: "status",
                                        locGalleryDefaultStatus: Last(colStatuses)
                                    }
                                );
                                Reset(galStatuses);
                                //screen reader start
                                UpdateContext(
                                    {
                                        locScreenReaderAnnouncedText: With(
                                            {
                                                varAnnouncedText: With(
                                                    {
                                                        varDefault: "New status added",
                                                        varOOBTextId: "btnAddStatus_Announcement"
                                                    },
                                                    With(
                                                        {
                                                            varLocalizedText: LookUp(
                                                                colLocalization,
                                                                OOBTextID = varOOBTextId,
                                                                LocalizedText
                                                            )
                                                        },
                                                        Coalesce(
                                                            varLocalizedText,
                                                            varDefault
                                                        )
                                                    )
                                                )
                                            },
                                            If(
                                                locScreenReaderAnnouncedText = varAnnouncedText,
                                                Concatenate(
                                                    varAnnouncedText,
                                                    " "
                                                ),
                                                varAnnouncedText
                                            )
                                        )
                                    }
                                );
                                //screen reader end
                            PaddingRight: =0.00
                            PaddingTop: =0.00
                            RadiusBottomLeft: =5
                            RadiusBottomRight: =5
                            RadiusTopLeft: =5
                            RadiusTopRight: =5
                            TabIndex: |-
                                =If(
                                    true,
                                    -1,
                                    0
                                )
                            Tooltip: =Self.AccessibleLabel
                            Width: =22*1
                            X: =galStatuses.X + galStatuses.Width + 5
                            Y: =btnAddStatus.Y + (btnAddStatus.Height - Self.Height) / 2
                            ZIndex: =28

                        btnAddStatus As button:
                            Align: =Align.Left
                            BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
                            BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
                            Color: =gblAppStyles.ButtonTransparent.Color
                            DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                            DisabledColor: =gblAppStyles.ButtonTransparent.DisabledColor
                            DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
                            Fill: =gblAppStyles.ButtonTransparent.Fill
                            FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
                            FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Normal
                            Height: =26*1
                            HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
                            HoverColor: =gblAppStyles.ButtonTransparent.HoverColor
                            HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
                            OnSelect: |-
                                =Collect(
                                    colStatuses,
                                    {
                                        StatusName: Blank(),
                                        StatusColor: Blank(),
                                        ID: Blank(),
                                        Order: CountRows(colStatuses) + 1
                                    }
                                );
                                UpdateContext(
                                    {
                                        locSettingsChanged: true,
                                        locStatusChanged: true,
                                        locGlobalSetting: "status",
                                        locGalleryDefaultStatus: Last(colStatuses)
                                    }
                                );
                                Reset(galStatuses);
                                //screen reader start
                                UpdateContext(
                                    {
                                        locScreenReaderAnnouncedText: With(
                                            {
                                                varAnnouncedText: With(
                                                    {
                                                        varDefault: "New status added",
                                                        varOOBTextId: "btnAddStatus_Announcement"
                                                    },
                                                    With(
                                                        {
                                                            varLocalizedText: LookUp(
                                                                colLocalization,
                                                                OOBTextID = varOOBTextId,
                                                                LocalizedText
                                                            )
                                                        },
                                                        Coalesce(
                                                            varLocalizedText,
                                                            varDefault
                                                        )
                                                    )
                                                )
                                            },
                                            If(
                                                locScreenReaderAnnouncedText = varAnnouncedText,
                                                Concatenate(
                                                    varAnnouncedText,
                                                    " "
                                                ),
                                                varAnnouncedText
                                            )
                                        )
                                    }
                                );
                                //screen reader end
                            PaddingBottom: =0
                            PaddingLeft: =32
                            PaddingRight: =0.00
                            PaddingTop: =0.00
                            PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
                            PressedColor: =gblAppStyles.ButtonTransparent.PressedColor
                            PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
                            RadiusBottomLeft: =gblAppStyles.ButtonTransparent.RadiusBottomLeft
                            RadiusBottomRight: =gblAppStyles.ButtonTransparent.RadiusBottomRight
                            RadiusTopLeft: =gblAppStyles.ButtonTransparent.RadiusTopLeft
                            RadiusTopRight: =gblAppStyles.ButtonTransparent.RadiusTopRight
                            Size: =gblAppStyles.ButtonTransparent.Size
                            TabIndex: |-
                                =If(
                                    locDeleteSettings,
                                    -1,
                                    If(
                                        Self.Visible,
                                        0,
                                        -1
                                    )
                                )
                            Text: |-
                                =With(
                                    {
                                        varDefault: "Add",
                                        varOOBTextId: "btnAddStatus__locText"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            Tooltip: |-
                                =With(
                                    {
                                        varDefault: "Click to add a status",
                                        varOOBTextId: "btnAddStatus__locTooltip"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            Width: =150
                            X: =galStatuses.X + galStatuses.Width + 5
                            Y: =galStatuses.Y+ 26 + 3 
                            ZIndex: =29

    conWarning_GlobalSettings As groupContainer:
        Height: =Parent.Height-Self.Y
        Visible: =locDeleteSettings
        Width: =Parent.Width 
        ZIndex: =6

        lblWarningBackground_GlobalSettings As label:
            BorderColor: =Transparent
            Color: =Transparent
            DisabledColor: =Transparent
            Fill: |-
                =If(
                    gblThemeDark Or gblThemeHiCo,
                    gblAppColors.OverlayLight,
                    gblAppColors.OverlayDark
                )
            FocusedBorderThickness: =1
            Font: =Font.'Segoe UI'
            Height: =Parent.Height
            OnSelect: |-
                =UpdateContext({locDeleteSettings: false});
                Switch(
                    locSettingType,    
                 "category", 
                //set focus start
                    UpdateContext({locSetFocusTimerStart: false});
                    UpdateContext({locSetFocusControlTarget: "btnAddCategory"});
                    UpdateContext({locSetFocusTimerStart: true});
                //set focus end 
                , "priority", 
                //set focus start
                    UpdateContext({locSetFocusTimerStart: false});
                    UpdateContext({locSetFocusControlTarget: "btnAddPriority"});
                    UpdateContext({locSetFocusTimerStart: true});
                //set focus end 
                , "status", 
                //set focus start
                    UpdateContext({locSetFocusTimerStart: false});
                    UpdateContext({locSetFocusControlTarget: "btnAddStatus"});
                    UpdateContext({locSetFocusTimerStart: true});
                //set focus end 
                );
                //screen reader start
                UpdateContext(
                    {
                        locScreenReaderAnnouncedText: With(
                            {
                                varAnnouncedText: With(
                                    {
                                        varDefault: "Cancelling the deletion and closing the dialog",
                                        varOOBTextId: "imgCloseWarning_Announcement"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            },
                            If(
                                locScreenReaderAnnouncedText = varAnnouncedText,
                                Concatenate(
                                    varAnnouncedText,
                                    " "
                                ),
                                varAnnouncedText
                            )
                        )
                    }
                );
                //screen reader end
            Size: =gblAppStyles.Label.Size.Medium
            TabIndex: |-
                =If(
                    true,
                    -1,
                    0
                )
            Text: |-
                =With(
                    {
                        varDefault: "Overlay for warning dialog",
                        varOOBTextId: "lblWarningBackground_Settings__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Tooltip: =Self.Text
            Visible: =locDeleteSettings
            Width: =Parent.Width
            ZIndex: =1

        lblWarningContainer_GlobalSettings As label:
            BorderColor: =gblAppStyles.TextInput.Color
            BorderThickness: =If(gblThemeHiCo, 1, 0)
            Color: =Transparent
            DisabledColor: =Transparent
            Fill: =gblAppStyles.TextInput.Fill
            Font: =Font.'Segoe UI'
            Height: =250
            Size: =gblAppStyles.Label.Size.Medium
            Text: |-
                =With(
                    {
                        varDefault: "Container for warning dialog",
                        varOOBTextId: "lblWarningContainer_Settings__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Visible: =locDeleteSettings
            Width: =450
            X: =(Parent.Width - Self.Width) / 2
            Y: =(Parent.Height - Self.Height) / 2
            ZIndex: =2

        lblWarningHeader_GlobalSettings As label:
            BorderColor: =gblAppStyles.Label.BorderColor
            BorderThickness: =gblAppStyles.Label.BorderThickness
            Color: =gblAppStyles.Label.Color
            DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
            DisabledColor: =gblAppStyles.Label.DisabledColor
            DisabledFill: =gblAppStyles.Label.DisabledFill
            Fill: =gblAppStyles.Label.Fill
            FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Bold
            Height: =56
            HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
            HoverColor: =gblAppStyles.Label.HoverColor
            HoverFill: =gblAppStyles.Label.HoverFill
            PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
            PressedColor: =gblAppStyles.Label.PressedColor
            PressedFill: =gblAppStyles.Label.PressedFill
            Role: =TextRole.Heading1
            Size: =gblAppStyles.Label.Size.Large
            Text: |-
                =With(
                    {
                        varDefault: "Are you sure you want to delete this " & locSettingType & " ?",
                        varOOBTextId: "lblWarningHeader_Settings__locText",
                        varParam0: locSettingType
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        If(
                            IsBlankOrError(varParam0),
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            ),
                            Coalesce(
                                Substitute(
                                    varLocalizedText,
                                    "{0}",
                                    Text(varParam0)
                                ),
                                varDefault
                            )
                        )
                    )
                )
            Tooltip: =Self.Text
            Visible: =locDeleteSettings
            Width: =lblWarningContainer_GlobalSettings.Width - 40
            X: =(Parent.Width - Self.Width) / 2
            Y: =lblWarningContainer_GlobalSettings.Y + 20
            ZIndex: =3

        lblWarningMessage_GlobalSettings As label:
            BorderColor: =gblAppStyles.Label.BorderColor
            BorderThickness: =gblAppStyles.Label.BorderThickness
            Color: =gblAppStyles.Label.Color
            DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
            DisabledColor: =gblAppStyles.Label.DisabledColor
            DisabledFill: =gblAppStyles.Label.DisabledFill
            Fill: =gblAppStyles.Label.Fill
            FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            Height: =63
            HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
            HoverColor: =gblAppStyles.Label.HoverColor
            HoverFill: =gblAppStyles.Label.HoverFill
            PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
            PressedColor: =gblAppStyles.Label.PressedColor
            PressedFill: =gblAppStyles.Label.PressedFill
            Size: =gblAppStyles.Label.Size.Medium
            Text: |-
                =With(
                    {
                        varDefault: "All existing work items using this " & locSettingType & " will be reassigned the " & locSettingType & " “None.”",
                        varOOBTextId: "lblWarningMessage_Settings__locText",
                        varParam0: locSettingType
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        If(
                            IsBlankOrError(varParam0),
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            ),
                            Coalesce(
                                Substitute(
                                    varLocalizedText,
                                    "{0}",
                                    Text(varParam0)
                                ),
                                varDefault
                            )
                        )
                    )
                )
            Tooltip: =Self.Text
            VerticalAlign: =VerticalAlign.Top
            Visible: =locDeleteSettings
            Width: =lblWarningContainer_GlobalSettings.Width - 40
            X: =lblWarningHeader_GlobalSettings.X
            Y: =lblWarningHeader_GlobalSettings.Y + lblWarningHeader_GlobalSettings.Height
            ZIndex: =4

        btnCancelDelete_GlobalSettings As button:
            BorderColor: =gblAppStyles.ButtonSecondary.BorderColor
            BorderThickness: =gblAppStyles.ButtonSecondary.BorderThickness
            Color: =gblAppStyles.ButtonSecondary.Color
            DisabledBorderColor: =gblAppStyles.ButtonSecondary.DisabledBorderColor
            DisabledColor: =gblAppStyles.ButtonSecondary.DisabledColor
            DisabledFill: =gblAppStyles.ButtonSecondary.DisabledFill
            Fill: =gblAppStyles.ButtonSecondary.Fill
            FocusedBorderColor: =gblAppStyles.ButtonSecondary.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.ButtonSecondary.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            Height: =32
            HoverBorderColor: =gblAppStyles.ButtonSecondary.HoverBorderColor
            HoverColor: =gblAppStyles.ButtonSecondary.HoverColor
            HoverFill: =gblAppStyles.ButtonSecondary.HoverFill
            OnSelect: |-
                =UpdateContext({locDeleteSettings: false});
                Reset(chkConfirmDelete_GlobalSettings);
                Switch(
                    locSettingType, "milestone",
                //set focus start
                    UpdateContext({locSetFocusTimerStart: false});
                    UpdateContext({locSetFocusControlTarget: "txtEditProjectName"});
                    UpdateContext({locSetFocusTimerStart: true});
                //set focus end    
                , "category", 
                //set focus start
                    UpdateContext({locSetFocusTimerStart: false});
                    UpdateContext({locSetFocusControlTarget: "btnAddCategory"});
                    UpdateContext({locSetFocusTimerStart: true});
                //set focus end 
                , "priority", 
                //set focus start
                    UpdateContext({locSetFocusTimerStart: false});
                    UpdateContext({locSetFocusControlTarget: "btnAddPriority"});
                    UpdateContext({locSetFocusTimerStart: true});
                //set focus end 
                , "status", 
                //set focus start
                    UpdateContext({locSetFocusTimerStart: false});
                    UpdateContext({locSetFocusControlTarget: "btnAddStatus"});
                    UpdateContext({locSetFocusTimerStart: true});
                //set focus end 
                );
                //screen reader start
                UpdateContext(
                    {
                        locScreenReaderAnnouncedText: With(
                            {
                                varAnnouncedText: With(
                                    {
                                        varDefault: "Cancelling the deletion and closing the dialog",
                                        varOOBTextId: "imgCloseWarning_Announcement"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            },
                            If(
                                locScreenReaderAnnouncedText = varAnnouncedText,
                                Concatenate(
                                    varAnnouncedText,
                                    " "
                                ),
                                varAnnouncedText
                            )
                        )
                    }
                );
                //screen reader end
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            PressedBorderColor: =gblAppStyles.ButtonSecondary.PressedBorderColor
            PressedColor: =gblAppStyles.ButtonSecondary.PressedColor
            PressedFill: =gblAppStyles.ButtonSecondary.PressedFill
            RadiusBottomLeft: =gblAppStyles.ButtonSecondary.RadiusBottomLeft
            RadiusBottomRight: =gblAppStyles.ButtonSecondary.RadiusBottomRight
            RadiusTopLeft: =gblAppStyles.ButtonSecondary.RadiusTopLeft
            RadiusTopRight: =gblAppStyles.ButtonSecondary.RadiusTopRight
            Size: =gblAppStyles.ButtonSecondary.Size
            TabIndex: |-
                =If(
                    locDeleteSettings,
                    0,
                    -1
                )
            Text: |-
                =With(
                    {
                        varDefault: "Cancel",
                        varOOBTextId: "btnCancelDelete_Settings__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Tooltip: |-
                =With(
                    {
                        varDefault: "Click to cancel deletion",
                        varOOBTextId: "btnCancelDelete_Settings__locTooltip"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Visible: =locDeleteSettings
            Width: =97.90
            X: =lblWarningContainer_GlobalSettings.X + lblWarningContainer_GlobalSettings.Width - Self.Width - Self.Width - 50
            Y: =lblWarningContainer_GlobalSettings.Y + lblWarningContainer_GlobalSettings.Height - Self.Height - 30
            ZIndex: =6

        chkConfirmDelete_GlobalSettings As checkbox:
            BorderColor: =gblAppStyles.Checkbox.BorderColor
            BorderThickness: =gblAppStyles.Checkbox.BorderThickness
            CheckboxBackgroundFill: =gblAppStyles.Checkbox.CheckboxBackgroundFill
            CheckboxBorderColor: =gblAppStyles.Checkbox.CheckboxBorderColor
            CheckboxSize: =25
            CheckmarkFill: =gblAppStyles.Checkbox.CheckmarkFill
            Color: =gblAppStyles.Checkbox.Color
            FocusedBorderColor: =gblAppStyles.Checkbox.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.Checkbox.BorderThickness
            Font: =Font.'Segoe UI'
            HoverBorderColor: =gblAppStyles.Checkbox.HoverBorderColor
            HoverColor: =gblAppStyles.Checkbox.HoverColor
            HoverFill: =gblAppStyles.Checkbox.HoverFill
            PaddingRight: =0.00
            PaddingTop: =0.00
            PressedBorderColor: =gblAppStyles.Checkbox.PressedBorderColor
            PressedColor: =gblAppStyles.Checkbox.PressedColor
            PressedFill: =gblAppStyles.Checkbox.PressedFill
            Size: =gblAppStyles.Checkbox.Size
            TabIndex: |-
                =If(
                    locDeleteSettings,
                    0,
                    -1
                )
            Text: |-
                =With(
                    {
                        varDefault: "I understand.",
                        varOOBTextId: "chkConfirmDelete_Settings__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Tooltip: |-
                =With(
                    {
                        varDefault: "Check to indicate you understand the warning message",
                        varOOBTextId: "chkConfirmDelete_Settings__locTooltip"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Visible: =locDeleteSettings
            Width: =174.83
            X: =lblWarningMessage_GlobalSettings.X 
            Y: =lblWarningMessage_GlobalSettings.Y + lblWarningMessage_GlobalSettings.Height
            ZIndex: =7

        btnConfirmDelete_GlobalSettings As button:
            BorderColor: =gblAppStyles.ButtonPrimary.BorderColor
            BorderThickness: =gblAppStyles.ButtonPrimary.BorderThickness
            Color: =gblAppStyles.ButtonPrimary.Color
            DisabledBorderColor: =gblAppStyles.ButtonPrimary.DisabledBorderColor
            DisabledColor: =gblAppStyles.ButtonPrimary.DisabledColor
            DisabledFill: =gblAppStyles.ButtonPrimary.DisabledFill
            DisplayMode: |-
                =If(
                    chkConfirmDelete_GlobalSettings.Value,
                    DisplayMode.Edit,
                    DisplayMode.Disabled
                )
            Fill: =gblAppStyles.ButtonPrimary.Fill
            FocusedBorderColor: =gblAppStyles.ButtonPrimary.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.ButtonPrimary.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            Height: =32
            HoverBorderColor: =gblAppStyles.ButtonPrimary.HoverBorderColor
            HoverColor: =gblAppStyles.ButtonPrimary.HoverColor
            HoverFill: =gblAppStyles.ButtonPrimary.HoverFill
            OnSelect: |-
                =Switch(
                    locSettingType,
                    "category",
                    Remove(
                        colCategories,
                        LookUp(
                            colCategories,
                            Order = galCategories.Selected.Order
                        )
                    );
                    If(
                        !IsBlank(galCategories.Selected.ID),
                        Remove(
                            'Project Work Item Categories',
                            LookUp(
                                'Project Work Item Categories',
                                'Project Work Item Category' = galCategories.Selected.ID
                            )
                        );
                        Clear(colCategories);
                        ForAll(
                            Filter(
                                'Project Work Item Categories',
                                'Project Work Item Categories (Views)'.'Active Project Work Item Categories'
                            ),
                            Collect(
                                colCategories,
                                {
                                    CategoryName: Name,
                                    CategoryColor: Color,
                                    DarkColor: 'Color Dark',
                                    ID: 'Project Work Item Category',
                                    Order: CountRows(colCategories) + 1
                                }
                            )
                        )
                    ),
                    "priority",
                    Remove(
                        colPriorities,
                        LookUp(
                            colPriorities,
                            Order = galPriorities.Selected.Order
                        )
                    );
                    If(
                        !IsBlank(galPriorities.Selected.ID),
                        Remove(
                            'Project Work Item Priorities',
                            LookUp(
                                'Project Work Item Priorities',
                                'Project Work Item Priority' = galPriorities.Selected.ID
                            )
                        );
                        Clear(colPriorities);
                        ForAll(
                            Filter(
                                'Project Work Item Priorities',
                                'Project Work Item Priorities (Views)'.'Active Project Work Item Priorities'
                            ),
                            Collect(
                                colPriorities,
                                {
                                    PriorityName: Name,
                                    PriorityColor: Color,
                                    DarkColor: 'Color Dark',
                                    ID: 'Project Work Item Priority',
                                    Order: CountRows(colPriorities) + 1
                                }
                            )
                        )
                    ),
                    "status",
                    Remove(
                        colStatuses,
                        LookUp(
                            colStatuses,
                            Order = galStatuses.Selected.Order
                        )
                    );
                    If(
                        !IsBlank(galStatuses.Selected.ID),
                        Remove(
                            'Project Work Item Statuses',
                            LookUp(
                                'Project Work Item Statuses',
                                'Project Work Item Status' = galStatuses.Selected.ID
                            )
                        );
                        Clear(colStatuses);
                        ForAll(
                            Filter(
                                'Project Work Item Statuses',
                                'Project Work Item Statuses (Views)'.'Active Project Work Item Statuses'
                            ),
                            Collect(
                                colStatuses,
                                {
                                    StatusName: Name,
                                    StatusColor: Color,
                                    DarkColor: 'Color Dark',
                                    ID: 'Project Work Item Status',
                                    Order: CountRows(colStatuses) + 1
                                }
                            )
                        )
                    )
                    
                );
                UpdateContext({locDeleteSettings: false});
                Reset(chkConfirmDelete_GlobalSettings);
                //screen reader start
                Switch(
                    locSettingType,
                    "category",
                    UpdateContext(
                        {
                            locScreenReaderAnnouncedText: With(
                                {
                                    varAnnouncedText: With(
                                        {
                                            varDefault: "The category has been deleted",
                                            varOOBTextId: "btnConfirmCategoryDelete_Announcement"
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextID = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            Coalesce(
                                                varLocalizedText,
                                                varDefault
                                            )
                                        )
                                    )
                                },
                                If(
                                    locScreenReaderAnnouncedText = varAnnouncedText,
                                    Concatenate(
                                        varAnnouncedText,
                                        " "
                                    ),
                                    varAnnouncedText
                                )
                            )
                        }
                    ),
                    "priority",
                    UpdateContext(
                        {
                            locScreenReaderAnnouncedText: With(
                                {
                                    varAnnouncedText: With(
                                        {
                                            varDefault: "The priority has been deleted",
                                            varOOBTextId: "btnConfirmPriorityDelete_Announcement"
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextID = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            Coalesce(
                                                varLocalizedText,
                                                varDefault
                                            )
                                        )
                                    )
                                },
                                If(
                                    locScreenReaderAnnouncedText = varAnnouncedText,
                                    Concatenate(
                                        varAnnouncedText,
                                        " "
                                    ),
                                    varAnnouncedText
                                )
                            )
                        }
                    ),
                    "status",
                    UpdateContext(
                        {
                            locScreenReaderAnnouncedText: With(
                                {
                                    varAnnouncedText: With(
                                        {
                                            varDefault: "The status has been deleted",
                                            varOOBTextId: "btnConfirmStatusDelete_Announcement"
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextID = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            Coalesce(
                                                varLocalizedText,
                                                varDefault
                                            )
                                        )
                                    )
                                },
                                If(
                                    locScreenReaderAnnouncedText = varAnnouncedText,
                                    Concatenate(
                                        varAnnouncedText,
                                        " "
                                    ),
                                    varAnnouncedText
                                )
                            )
                        }
                    ),
                    "milestone",
                    UpdateContext(
                        {
                            locScreenReaderAnnouncedText: With(
                                {
                                    varAnnouncedText: With(
                                        {
                                            varDefault: "The milestone has been deleted",
                                            varOOBTextId: "btnConfirmMilestoneDelete_Announcement"
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextID = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            Coalesce(
                                                varLocalizedText,
                                                varDefault
                                            )
                                        )
                                    )
                                },
                                If(
                                    locScreenReaderAnnouncedText = varAnnouncedText,
                                    Concatenate(
                                        varAnnouncedText,
                                        " "
                                    ),
                                    varAnnouncedText
                                )
                            )
                        }
                    )
                )
                //screen reader end
            PaddingBottom: =6
            PaddingLeft: =0
            PaddingRight: =0.00
            PaddingTop: =6.99
            PressedBorderColor: =gblAppStyles.ButtonPrimary.PressedBorderColor
            PressedColor: =gblAppStyles.ButtonPrimary.PressedColor
            PressedFill: =gblAppStyles.ButtonPrimary.PressedFill
            RadiusBottomLeft: =gblAppStyles.ButtonPrimary.RadiusBottomLeft
            RadiusBottomRight: =gblAppStyles.ButtonPrimary.RadiusBottomRight
            RadiusTopLeft: =gblAppStyles.ButtonPrimary.RadiusTopLeft
            RadiusTopRight: =gblAppStyles.ButtonPrimary.RadiusTopRight
            Size: =gblAppStyles.ButtonSecondary.Size
            TabIndex: |-
                =If(
                    locDeleteSettings,
                    0,
                    -1
                )
            Text: |-
                =With(
                    {
                        varDefault: "Delete",
                        varOOBTextId: "btnConfirmDelete_Settings__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Tooltip: |-
                =With(
                    {
                        varDefault: "Click to delete " & locSettingType,
                        varOOBTextId: "btnConfirmDelete_Settings__locTooltip",
                        varParam0: locSettingType
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        If(
                            IsBlankOrError(varParam0),
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            ),
                            Coalesce(
                                Substitute(
                                    varLocalizedText,
                                    "{0}",
                                    Text(varParam0)
                                ),
                                varDefault
                            )
                        )
                    )
                )
            Visible: =locDeleteSettings
            Width: =97.90
            X: =lblWarningContainer_GlobalSettings.X + lblWarningContainer_GlobalSettings.Width - Self.Width - 40
            Y: =lblWarningContainer_GlobalSettings.Y + lblWarningContainer_GlobalSettings.Height - Self.Height - 30
            ZIndex: =8

        imgCloseWarning_GlobalSettings As image:
            AccessibleLabel: |-
                =With(
                    {
                        varDefault: "Click to close the warning",
                        varOOBTextId: "btnOkWarning__locTooltip"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Height: =22*1
            Image: |
                =With(
                    {
                        varImageRecord: LookUp(
                            staticIcons,
                            staticIconName = "Dismiss"
                        ),
                        varColor: If(
                            Self.DisplayMode = DisplayMode.Disabled,
                            gblAppStyles.Icons.DisabledColor,
                            gblAppStyles.Icons.Color
                        )
                    },
                    With(
                        {
                            varImageData: Concatenate(
                                "data:image/svg+xml;utf8, ",
                                EncodeUrl(
                                    Concatenate(
                                        "<svg viewBox='",
                                        varImageRecord.staticIconViewbox,
                                        "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                        varImageRecord.staticIconPath,
                                        "' fill='#",
                                        varColor,
                                        "'/></svg>"
                                    )
                                )
                            )
                        },
                        varImageData
                    )
                )
            OnSelect: |-
                =UpdateContext({locDeleteSettings: false});
                Reset(chkConfirmDelete_GlobalSettings);
                Switch(
                    locSettingType, "milestone",
                //set focus start
                    UpdateContext({locSetFocusTimerStart: false});
                    UpdateContext({locSetFocusControlTarget: "txtEditProjectName"});
                    UpdateContext({locSetFocusTimerStart: true});
                //set focus end    
                , "category", 
                //set focus start
                    UpdateContext({locSetFocusTimerStart: false});
                    UpdateContext({locSetFocusControlTarget: "btnAddCategory"});
                    UpdateContext({locSetFocusTimerStart: true});
                //set focus end 
                , "priority", 
                //set focus start
                    UpdateContext({locSetFocusTimerStart: false});
                    UpdateContext({locSetFocusControlTarget: "btnAddPriority"});
                    UpdateContext({locSetFocusTimerStart: true});
                //set focus end 
                , "status", 
                //set focus start
                    UpdateContext({locSetFocusTimerStart: false});
                    UpdateContext({locSetFocusControlTarget: "btnAddStatus"});
                    UpdateContext({locSetFocusTimerStart: true});
                //set focus end 
                );
                //screen reader start
                UpdateContext(
                    {
                        locScreenReaderAnnouncedText: With(
                            {
                                varAnnouncedText: With(
                                    {
                                        varDefault: "Cancelling the deletion and closing the dialog",
                                        varOOBTextId: "imgCloseWarning_Announcement"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            },
                            If(
                                locScreenReaderAnnouncedText = varAnnouncedText,
                                Concatenate(
                                    varAnnouncedText,
                                    " "
                                ),
                                varAnnouncedText
                            )
                        )
                    }
                );
                //screen reader end
            PaddingBottom: =2
            PaddingLeft: =2
            PaddingRight: =2
            PaddingTop: =2
            TabIndex: |-
                =If(
                    locDeleteSettings,
                    0,
                    -1
                )
            Tooltip: =Self.AccessibleLabel
            Visible: =locDeleteSettings
            Width: =22*1
            X: =lblWarningContainer_GlobalSettings.X + lblWarningContainer_GlobalSettings.Width - Self.Width - 20
            Y: =lblWarningContainer_GlobalSettings.Y + Self.Height
            ZIndex: =9

