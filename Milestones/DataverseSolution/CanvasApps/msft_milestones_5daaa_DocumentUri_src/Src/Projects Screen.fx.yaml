"'Projects Screen' As screen":
    Fill: =gblAppStyles.Background.Fill
    LoadingSpinner: =LoadingSpinner.Data
    LoadingSpinnerColor: |-
        =If(
            gblThemeHiCo,
            gblAppColors.HighContrastHyperlinks,
            gblThemeDark,
            gblAppColors.TeamsDarkPrimary,
            gblAppColors.TeamsDefaultPrimary
        )
    OnVisible: |-
        =If(
            !locBackNavigation,
            UpdateContext(
                {
                    locProjectSortOrder: true,
                    locExpandProjectList: true,
                    locAddProject: false,
                    locSortWorkItemBy: "eta",
                    locShowSearchWorkItem: false,
                    locAddWorkItem: false,
                    locProjectStatusSelection: "Milestone status",
                    locWorkItemSortOrder: true
                }
            );
            Set(
                gblProject,
                First(
                    SortByColumns(
                        Search(
                            Projects,
                            txtFindProjects.Text,
                            "msft_name"
                        ),
                        "msft_name",
                        If(
                            locProjectSortOrder,
                            Ascending,
                            Descending
                        )
                    )
                )
            );
            ClearCollect(
                colWorkItems,
                Filter(
                    'Project Work Items',
                    Project.Project = gblProject.Project
                )
            ),
            Set(
                gblProject,
                LookUp(
                    Projects,
                    Project = gblProject.Project
                )
            );
            
        );
        UpdateContext({locShowProjectStatusOptions: false});
        UpdateContext(
            {
                locCompletionStatus: First(
                    Sort(
                        'Project Work Item Statuses',
                        Sequence,
                        Ascending
                    )
                )
            }
        );
        Clear(colWorkItemStatuses);
        ForAll(
            Sort(
                Filter(
                    'Project Work Item Statuses',
                    'Project Work Item Status' <> locCompletionStatus.'Project Work Item Status'
                ),
                Sequence,
                Ascending
            ),
            Collect(
                colWorkItemStatuses,
                {
                    Name: ThisRecord.Name,
                    Color: ThisRecord.Color,
                    'Color Dark': ThisRecord.'Color Dark',
                    'Project Work Item Status': ThisRecord.'Project Work Item Status',
                    Sequence: ThisRecord.Sequence
                }
            )
        );
        Collect(
            colWorkItemStatuses,
            {
                Name: locCompletionStatus.Name,
                Color: locCompletionStatus.Color,
                'Color Dark': locCompletionStatus.'Color Dark',
                'Project Work Item Status': locCompletionStatus.'Project Work Item Status',
                Sequence: locCompletionStatus.Sequence
            }
        )

    tmrSetFocus_Projects As timer:
        AutoStart: =locSetFocusTimerStart
        Color: =RGBA(0, 0, 0, 0)
        Duration: =100
        Fill: =RGBA(0, 0, 0, 0)
        Height: =0
        HoverFill: =Transparent
        OnTimerEnd: |
            =Switch(
                locSetFocusControlTarget,
                "txtFindWorkItems",
                SetFocus(txtFindWorkItems),
                "imgCloseFilter",
                SetFocus(imgCloseFilter),
                "imgFilterWorkItems",
                SetFocus(imgFilterWorkItems),
                "imgSearchWorkItems",
                SetFocus(imgSearchWorkItems),
                "btnTitleSort",
                SetFocus(btnTitleSort),
                "imgCloseWarning",
                SetFocus(imgCloseWarning),
                "imgDeleteWorkItems",
                SetFocus(imgDeleteWorkItems),
                "btnNewProject",
                SetFocus(btnNewProject),
                "imgCloseCoverSelection",
                SetFocus(imgCloseCoverSelection),
                "btnNewWorkItem",
                SetFocus(btnNewWorkItem)
            );
        OnTimerStart: =
        Size: =0
        TabIndex: =-1
        Width: =0
        X: =Parent.Width - Self.Width
        Y: =Parent.Height - Self.Height
        ZIndex: =1

    lblAnnounce_Projects As label:
        Font: =Font.'Segoe UI'
        Height: =0*0
        Live: =Live.Assertive
        PaddingBottom: =0
        PaddingLeft: =0
        PaddingRight: =0
        PaddingTop: =0
        Text: =locScreenReaderAnnouncedText //this text is announced by screen readers, when the variable is updated
        Width: =0*0
        X: =Parent.Width - Self.Width
        Y: =Parent.Height - Self.Height
        ZIndex: =2

    conProjectList As groupContainer:
        Fill: |-
            =If(
                gblThemeDark,
                ColorValue("#141414"),
                gblThemeHiCo,
                Black,
                White
            )
        Height: =Parent.Height
        Width: |-
            =If(
                locExpandProjectList,
                If(
                    Parent.Width > 900,
                    250,
                    Parent.Width > 750,
                    250,
                    Parent.Width > 500,
                    200,
                    100
                ),
                imgProjectsMenu.X * 2 + imgProjectsMenu.Width
            )
        X: =0*0
        Y: =0*0
        ZIndex: =3

        "galProjects As gallery.'BrowseLayout_Vertical_OneTextVariant_ver4.0'":
            AccessibleLabel: |-
                =With(
                    {
                        varDefault: "List of projects",
                        varOOBTextId: "galProjects__locAccessibleText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            BorderColor: =Transparent
            Default: ={}
            DisplayMode: |-
                =If(
                    locAddProject,
                    DisplayMode.Disabled,
                    DisplayMode.Edit
                )
            Fill: =Transparent
            Height: =Parent.Height - Self.Y - lblCustomize_Projects.Height - 20
            ItemAccessibleLabel: |-
                =If(
                    ThisItem.IsSelected,
                    With(
                        {
                            varDefault: "Selected",
                            varOOBTextId: "galSelected_Announcement"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    ),
                    With(
                        {
                            varDefault: "Not selected",
                            varOOBTextId: "galNotSelected_Announcement"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                )
            Items: |-
                =SortByColumns(
                    Search(
                        Projects,
                        txtFindProjects.Text,
                        "msft_name"
                    ),
                    "msft_name",
                    If(
                        locProjectSortOrder,
                        Ascending,
                        Descending
                    )
                )
            Layout: =Layout.Vertical
            LoadingSpinner: =App.ActiveScreen.LoadingSpinner
            OnSelect: |-
                =Set(
                    gblProject,
                    ThisItem
                );
                ClearCollect(
                    colWorkItems,
                    Filter(
                        'Project Work Items',
                        Project.Project = gblProject.Project
                    )
                );
                UpdateContext({locResetWorkItemCheckbox: true})
            TabIndex: |-
                =If(
                    (locAddProject || locAddWorkItem || locFilterWorkItems || locEditWorkItem || locShowProjectStatusOptions || locVisibleCoverSelection || locShowFirstRun || locShowPowerAppsPrompt),
                    -1,
                    If(
                        Self.Visible,
                        0,
                        -1
                    )
                )
            TemplateFill: =Transparent
            TemplatePadding: =0
            TemplateSize: =55
            Visible: =locExpandProjectList
            Width: =Parent.Width 
            X: =0*0
            Y: =btnNewProject.Y + btnNewProject.Height + 20
            ZIndex: =4

            btnProjects_Background As button:
                BorderColor: =Transparent
                BorderThickness: =0
                Color: =Transparent
                DisabledColor: =RGBA(0, 0, 0, 0)
                DisabledFill: |-
                    =If(
                        ThisItem.Project = gblProject.Project,
                        gblAppStyles.Gallery.SelectedItemDisabled,
                        RGBA(
                            0,
                            0,
                            0,
                            0
                        )
                    )
                DisplayMode: =Parent.DisplayMode
                Fill: |-
                    =If(
                        ThisItem.Project = gblProject.Project,
                        gblAppStyles.Gallery.SelectedItem,
                        RGBA(
                            0,
                            0,
                            0,
                            0
                        )
                    )
                FocusedBorderThickness: =1
                Font: =Font.'Segoe UI'
                Height: =55*1
                HoverColor: =RGBA(0, 0, 0, 0)
                HoverFill: =Self.Fill
                OnSelect: =Select(Parent)
                PaddingRight: =5.83
                PaddingTop: =5.83
                PressedColor: =Transparent
                PressedFill: =Self.Fill
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =gblAppStyles.ButtonTransparent.Size
                TabIndex: |-
                    =If(
                        true,
                        -1,
                        0
                    )
                Text: |-
                    =With(
                        {
                            varDefault: "Background button for projects",
                            varOOBTextId: "btnProjects_Background__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Width: =Parent.Width
                X: =0*0
                Y: =0*0
                ZIndex: =1

            "galProjectWorkItems As gallery.'BrowseLayout_Vertical_OneTextVariant_ver4.0'":
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Hidden work items list",
                            varOOBTextId: "galProjectWorkItems__locAccessibleText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                BorderColor: =Transparent
                Height: =55*1
                Items: |-
                    =/*Filter(
                        'Project Work Items',
                        Project.Project = ThisItem.Project
                    )*/
                    
                    ThisItem.'Project Work Items'
                Layout: =Layout.Vertical
                TabIndex: |-
                    =If(
                        true,
                        -1,
                        0
                    )
                TemplatePadding: =0
                TemplateSize: =Min(96, Self.Height - 60)
                Visible: =false
                Width: =Parent.Width
                X: =0*0
                Y: =0*0
                ZIndex: =2

                lblWorkItemName As label:
                    Height: =1*1
                    OnSelect: =Select(Parent)
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Text: =ThisItem.'Work Item Status'.Name
                    Tooltip: =Self.Text
                    VerticalAlign: =VerticalAlign.Top
                    Width: =Parent.TemplateWidth - 104
                    X: =32*1
                    Y: =0*0
                    ZIndex: =1

            lblProjects_ProjectName As label:
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                DisabledColor: |
                    =If(gblThemeHiCo, gblAppStyles.Label.Color, gblAppStyles.Label.DisabledColor)
                DisabledFill: =gblAppStyles.Label.DisabledFill
                DisplayMode: =Parent.DisplayMode
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: |-
                    =If(
                        ThisItem.Project = gblProject.Project,
                        FontWeight.Semibold,
                        FontWeight.Normal
                    )
                Height: =25*1
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                OnSelect: =Select(Parent)
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0.00
                PaddingTop: =0.00
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Size: =gblAppStyles.Label.Size.Medium
                Text: =ThisItem.Name
                Tooltip: =Self.Text
                Width: =Parent.Width - Self.X - btnProjects_BlockedWorkItemCount.Width - 40
                Wrap: =false
                X: =20*1
                Y: =6*1
                ZIndex: =3

            lblProjcets_WorkItemCount As label:
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                DisabledColor: |-
                    =If(
                        gblThemeHiCo,
                        gblAppStyles.Label.Color,
                        gblAppStyles.Label.DisabledColor
                    )
                DisabledFill: =gblAppStyles.Label.DisabledFill
                DisplayMode: =Parent.DisplayMode
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Normal
                Height: =16*1
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                OnSelect: =Select(Parent)
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0.00
                PaddingTop: =0.00
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Size: =gblAppStyles.Label.Size.Small
                Text: |-
                    =With(
                        {
                            varDefault: CountRows(galProjectWorkItems.AllItems) & " work items",
                            varOOBTextId: "lblProjcets_WorkItemCount__locText",
                            varParam0: CountRows(galProjectWorkItems.AllItems)
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            If(
                                IsBlankOrError(varParam0),
                                Coalesce(
                                    varLocalizedText,
                                    varDefault
                                ),
                                Coalesce(
                                    Substitute(
                                        varLocalizedText,
                                        "{0}",
                                        Text(varParam0)
                                    ),
                                    varDefault
                                )
                            )
                        )
                    )
                Tooltip: =Self.Text
                Width: =Parent.Width - Self.X - btnProjects_BlockedWorkItemCount.Width - 40
                Wrap: =false
                X: =20*1
                Y: =31*1
                ZIndex: =4

            btnProjects_BlockedWorkItemCount As button:
                BorderColor: =gblAppStyles.Label.Color
                BorderThickness: =0
                Color: =gblAppStyles.Label.Color
                DisabledColor: =gblAppStyles.ButtonPrimary.DisabledColor
                DisabledFill: =gblAppStyles.ButtonPrimary.DisabledFill
                DisplayMode: |-
                    =If(
                        locAddProject,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                Fill: |-
                    =Coalesce(
                        If(
                            gblThemeDark,
                            ColorValue(
                                LookUp(
                                    'Project Work Item Statuses',
                                    Name = "Blocked",
                                    'Color Dark'
                                )
                            ),
                            ColorValue(
                                LookUp(
                                    'Project Work Item Statuses',
                                    Name = "Blocked",
                                    Color
                                )
                            )
                        ),
                        ColorValue("#E0E0E0")
                    )
                Font: =Font.'Segoe UI'
                Height: =30*1
                OnSelect: =Select(Parent)
                RadiusBottomLeft: =30
                RadiusBottomRight: =30
                RadiusTopLeft: =30
                RadiusTopRight: =30
                Size: =gblAppStyles.Label.Size.Medium
                TabIndex: |-
                    =If(
                        true,
                        -1,
                        0
                    )
                Text: |-
                    =CountRows(
                        Filter(
                            galProjectWorkItems.AllItems,
                            'Work Item Status'.Name = "Blocked"
                        )
                    )
                Tooltip: |-
                    =With(
                        {
                            varDefault: ThisItem.Name & " has " & CountRows(
                                Filter(
                                    galProjectWorkItems.AllItems,
                                    'Work Item Status'.Name = "Blocked"
                                )
                            ) & "  blocked work items",
                            varOOBTextId: "btnProjects_BlockedWorkItemCount__locTooltip",
                            varParam0: ThisItem.Name,
                            varParam1: CountRows(
                                Filter(
                                    galProjectWorkItems.AllItems,
                                    'Work Item Status'.Name = "Blocked"
                                )
                            ),
                            varParam2: Blank()
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            If(
                                IsBlankOrError(varParam0),
                                Coalesce(
                                    varLocalizedText,
                                    varDefault
                                ),
                                Coalesce(
                                    Substitute(
                                        Substitute(
                                            Substitute(
                                                varLocalizedText,
                                                "{0}",
                                                Text(varParam0)
                                            ),
                                            "{1}",
                                            Text(varParam1)
                                        ),
                                        "{2}",
                                        Text(varParam2)
                                    ),
                                    varDefault
                                )
                            )
                        )
                    )
                Visible: |-
                    =If(
                        Value(Self.Text) = 0,
                        false,
                        false
                    )
                Width: =35*1
                X: =shpProjectsListDivider.X - 60
                Y: =12.5*1
                ZIndex: =5

            btnProjects_Foreground As button:
                BorderThickness: =0
                Color: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(0, 0, 0, 0)
                DisabledFill: =Self.Fill
                Fill: =gblAppStyles.ButtonTransparent.Fill
                FocusedBorderColor: =gblAppStyles.ButtonSecondary.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.ButtonSecondary.FocusedBorderThickness
                Height: =55*1-1
                HoverColor: =RGBA(0, 0, 0, 0)
                HoverFill: =gblAppStyles.Gallery.HoverFill
                OnSelect: =Select(Parent)
                PaddingRight: =5.83
                PaddingTop: =5.83
                PressedColor: =Transparent
                PressedFill: =gblAppStyles.Gallery.PressedFill
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =17.48
                TabIndex: |-
                    =If(
                        (locAddProject || locAddWorkItem || locFilterWorkItems || locEditWorkItem || locShowProjectStatusOptions || locVisibleCoverSelection || locShowFirstRun || locShowPowerAppsPrompt),
                        -1,
                        If(
                            Self.Visible,
                            0,
                            -1
                        )
                    )
                Text: |-
                    =With(
                        {
                            varDefault: "Click to select the project",
                            varOOBTextId: "btnProjects_Foreground__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Tooltip: |-
                    =With(
                        {
                            varDefault: ThisItem.Name & " has " & CountRows(
                                Filter(
                                    galProjectWorkItems.AllItems,
                                    'Work Item Status'.Name = "Blocked"
                                )
                            ) & "  blocked work items",
                            varOOBTextId: "btnProjects_BlockedWorkItemCount__locTooltip",
                            varParam0: ThisItem.Name,
                            varParam1: CountRows(
                                Filter(
                                    galProjectWorkItems.AllItems,
                                    'Work Item Status'.Name = "Blocked"
                                )
                            ),
                            varParam2: Blank()
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            If(
                                IsBlankOrError(varParam0),
                                Coalesce(
                                    varLocalizedText,
                                    varDefault
                                ),
                                Coalesce(
                                    Substitute(
                                        Substitute(
                                            Substitute(
                                                varLocalizedText,
                                                "{0}",
                                                Text(varParam0)
                                            ),
                                            "{1}",
                                            Text(varParam1)
                                        ),
                                        "{2}",
                                        Text(varParam2)
                                    ),
                                    varDefault
                                )
                            )
                        )
                    )
                Width: =Parent.Width-2
                X: =0*0+1
                Y: =0*0+1
                ZIndex: =6

            imgProjects_Edit As image:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Click to customize",
                            varOOBTextId: "imgCustomize_Projects__locAccessibleText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                DisabledFill: |-
                    =With(
                        {
                            varImageIsCategory: LookUp(
                                staticIcons,
                                staticIconName = "Edit"
                            ).staticIconIsCategory
                        },
                        If(
                            varImageIsCategory,
                            gblAppStyles.Icons.DisabledFill_Category,
                            Transparent
                        )
                    )
                DisplayMode: |-
                    =If(
                        locAddProject,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                Fill: |-
                    =With(
                        {
                            varImageIsCategory: LookUp(
                                staticIcons,
                                staticIconName = "Edit"
                            ).staticIconIsCategory
                        },
                        If(
                            varImageIsCategory,
                            gblAppStyles.Icons.Fill_Category,
                            Transparent
                        )
                    )
                Height: =22*1
                Image: |
                    =With(
                        {
                            varImageRecord: LookUp(
                                staticIcons,
                                staticIconName = "Edit"
                            ),
                            varColor: If(
                                Self.DisplayMode = DisplayMode.Disabled,
                                gblAppStyles.Icons.DisabledColor,
                                gblAppStyles.Icons.Color
                            )
                        },
                        With(
                            {
                                varImageData: Concatenate(
                                    "data:image/svg+xml;utf8, ",
                                    EncodeUrl(
                                        Concatenate(
                                            "<svg viewBox='",
                                            varImageRecord.staticIconViewbox,
                                            "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                            varImageRecord.staticIconPath,
                                            "' fill='#",
                                            varColor,
                                            "'/></svg>"
                                        )
                                    )
                                )
                            },
                            varImageData
                        )
                    )
                OnSelect: |-
                    =Navigate(
                        'Project Settings Screen',
                        ScreenTransition.Fade,
                        {
                            locAddProject: false,
                            locExpandProjectList: locExpandProjectList,
                            locProjectSortOrder: locProjectSortOrder,
                            locSortWorkItemBy: locSortWorkItemBy,
                            locShowSearchWorkItem: locShowSearchWorkItem,
                            locAddWorkItem: locAddWorkItem,
                            locProjectStatusSelection: locProjectStatusSelection,
                            locWorkItemSortOrder: locWorkItemSortOrder
                        }
                    )
                RadiusBottomLeft: =5
                RadiusBottomRight: =5
                RadiusTopLeft: =5
                RadiusTopRight: =5
                TabIndex: |-
                    =If(
                        (locAddProject || locAddWorkItem || locFilterWorkItems || locEditWorkItem || locShowProjectStatusOptions || locVisibleCoverSelection || locShowFirstRun || locShowPowerAppsPrompt),
                        -1,
                        If(
                            Self.Visible,
                            0,
                            -1
                        )
                    )
                Tooltip: =Self.AccessibleLabel
                Visible: =ThisItem.Project = gblProject.Project
                Width: =22
                X: =Parent.Width - Self.Width - 20
                Y: =btnProjects_Background.Y + (btnProjects_Background.Height - Self.Height) / 2
                ZIndex: =7

        imgSortProjects As image:
            AccessibleLabel: |-
                =With(
                    {
                        varDefault: "Click to sort projects",
                        varOOBTextId: "imgSortProjects__locAccessibleText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            DisabledFill: |-
                =With(
                    {
                        varImageIsCategory: LookUp(
                            staticIcons,
                            staticIconName = "Sort"
                        ).staticIconIsCategory
                    },
                    If(
                        varImageIsCategory,
                        gblAppStyles.Icons.DisabledFill_Category,
                        Transparent
                    )
                )
            DisplayMode: |-
                =If(
                    locAddProject,
                    DisplayMode.Disabled,
                    DisplayMode.Edit
                )
            Fill: |-
                =With(
                    {
                        varImageIsCategory: LookUp(
                            staticIcons,
                            staticIconName = "Sort"
                        ).staticIconIsCategory
                    },
                    If(
                        varImageIsCategory,
                        gblAppStyles.Icons.Fill_Category,
                        Transparent
                    )
                )
            Height: =22*1
            Image: |-
                =With(
                    {
                        varImageRecord: LookUp(
                            staticIcons,
                            staticIconName = "Sort"
                        ),
                        varColor: If(
                            Self.DisplayMode = DisplayMode.Disabled,
                            gblAppStyles.Icons.DisabledColor,
                            gblAppStyles.Icons.Color
                        )
                    },
                    With(
                        {
                            varImageData: Concatenate(
                                "data:image/svg+xml;utf8, ",
                                EncodeUrl(
                                    Concatenate(
                                        "<svg viewBox='",
                                        varImageRecord.staticIconViewbox,
                                        "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                        varImageRecord.staticIconPath,
                                        "' fill='#",
                                        varColor,
                                        "'/></svg>"
                                    )
                                )
                            )
                        },
                        varImageData
                    )
                )
            OnSelect: |-
                =UpdateContext({locProjectSortOrder: !locProjectSortOrder});
                //screen reader start
                If(locProjectSortOrder,
                UpdateContext(
                    {
                        locScreenReaderAnnouncedText: With(
                            {
                                varAnnouncedText: With(
                                    {
                                        varDefault: "Projects list sorted by name in ascending order",
                                        varOOBTextId: "imgSortProjectsAscending_Announcement"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            },
                            If(
                                locScreenReaderAnnouncedText = varAnnouncedText,
                                Concatenate(
                                    varAnnouncedText,
                                    " "
                                ),
                                varAnnouncedText
                            )
                        )
                    }
                ),
                UpdateContext(
                    {
                        locScreenReaderAnnouncedText: With(
                            {
                                varAnnouncedText: With(
                                    {
                                        varDefault: "Projects list sorted by name in descending order",
                                        varOOBTextId: "imgSortProjectsDescending_Announcement"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            },
                            If(
                                locScreenReaderAnnouncedText = varAnnouncedText,
                                Concatenate(
                                    varAnnouncedText,
                                    " "
                                ),
                                varAnnouncedText
                            )
                        )
                    }
                )
                )
                //screen reader end
            PaddingRight: =0.00
            PaddingTop: =0.00
            RadiusBottomLeft: =5
            RadiusBottomRight: =5
            RadiusTopLeft: =5
            RadiusTopRight: =5
            TabIndex: |-
                =If(
                    (locAddProject || locAddWorkItem || locFilterWorkItems || locEditWorkItem || locShowProjectStatusOptions || locVisibleCoverSelection || locShowFirstRun || locShowPowerAppsPrompt),
                    -1,
                    If(
                        Self.Visible,
                        0,
                        -1
                    )
                )
            Tooltip: =Self.AccessibleLabel
            Visible: =locExpandProjectList
            Width: =22*1
            X: =Parent.Width - Self.Width - 18 
            Y: =imgNewProject.Y
            ZIndex: =9

        imgCustomize_Projects As image:
            AccessibleLabel: |-
                =With(
                    {
                        varDefault: "Click to customize",
                        varOOBTextId: "imgCustomize_Projects__locAccessibleText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            DisabledFill: |-
                =With(
                    {
                        varImageIsCategory: LookUp(
                            staticIcons,
                            staticIconName = "Info"
                        ).staticIconIsCategory
                    },
                    If(
                        varImageIsCategory,
                        gblAppStyles.Icons.DisabledFill_Category,
                        Transparent
                    )
                )
            DisplayMode: |-
                =If(
                    locAddProject,
                    DisplayMode.Disabled,
                    DisplayMode.Edit
                )
            Fill: |-
                =With(
                    {
                        varImageIsCategory: LookUp(
                            staticIcons,
                            staticIconName = "Info"
                        ).staticIconIsCategory
                    },
                    If(
                        varImageIsCategory,
                        gblAppStyles.Icons.Fill_Category,
                        Transparent
                    )
                )
            Height: =22*1
            Image: |
                =With(
                    {
                        varImageRecord: LookUp(
                            staticIcons,
                            staticIconName = "Info"
                        ),
                        varColor: If(
                            Self.DisplayMode = DisplayMode.Disabled,
                            gblAppStyles.Icons.DisabledColor,
                            gblAppStyles.Icons.Color
                        )
                    },
                    With(
                        {
                            varImageData: Concatenate(
                                "data:image/svg+xml;utf8, ",
                                EncodeUrl(
                                    Concatenate(
                                        "<svg viewBox='",
                                        varImageRecord.staticIconViewbox,
                                        "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                        varImageRecord.staticIconPath,
                                        "' fill='#",
                                        varColor,
                                        "'/></svg>"
                                    )
                                )
                            )
                        },
                        varImageData
                    )
                )
            OnSelect: |-
                =Navigate(
                    'About Screen',
                    ScreenTransition.Fade,
                    {
                        locAddProject: false,
                        locExpandProjectList: locExpandProjectList,
                        locProjectSortOrder: locProjectSortOrder,
                        locSortWorkItemBy: locSortWorkItemBy,
                        locShowSearchWorkItem: locShowSearchWorkItem,
                        locAddWorkItem: locAddWorkItem,
                        locProjectStatusSelection: locProjectStatusSelection,
                        locWorkItemSortOrder: locWorkItemSortOrder
                    }
                );
                //screen reader start
                UpdateContext(
                    {
                        locScreenReaderAnnouncedText: With(
                            {
                                varAnnouncedText: With(
                                    {
                                        varDefault: "Navigating to the about screen to customize",
                                        varOOBTextId: "lblCustomize_Announcement"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            },
                            If(
                                locScreenReaderAnnouncedText = varAnnouncedText,
                                Concatenate(
                                    varAnnouncedText,
                                    " "
                                ),
                                varAnnouncedText
                            )
                        )
                    }
                );
                //screen reader end
            RadiusBottomLeft: =5
            RadiusBottomRight: =5
            RadiusTopLeft: =5
            RadiusTopRight: =5
            TabIndex: |-
                =If(
                    (locAddProject || locAddWorkItem || locFilterWorkItems || locEditWorkItem || locShowProjectStatusOptions || locVisibleCoverSelection || locShowFirstRun || locShowPowerAppsPrompt),
                    -1,
                    If(
                        Self.Visible,
                        0,
                        -1
                    )
                )
            Tooltip: =Self.AccessibleLabel
            Visible: =locExpandProjectList
            Width: =22
            X: =20*1
            Y: =lblCustomize_Projects.Y + (lblCustomize_Projects.Height - Self.Height) / 2
            ZIndex: =10

        grpAllProjectsHeader As group:
            Height: =5
            Width: =5
            X: =40
            Y: =40
            ZIndex: =10

            imgProjectsMenu As image:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Hide projects list",
                            varOOBTextId: "imgProjectsMenu__locAccessibleText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
                BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
                DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                DisabledFill: |-
                    =With(
                        {
                            varImageIsCategory: LookUp(
                                staticIcons,
                                staticIconName = "Menu"
                            ).staticIconIsCategory
                        },
                        If(
                            varImageIsCategory,
                            gblAppStyles.Icons.DisabledFill_Category,
                            Transparent
                        )
                    )
                Fill: |-
                    =With(
                        {
                            varImageIsCategory: LookUp(
                                staticIcons,
                                staticIconName = "Menu"
                            ).staticIconIsCategory
                        },
                        If(
                            varImageIsCategory,
                            gblAppStyles.Icons.Fill_Category,
                            Transparent
                        )
                    )
                FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
                FocusedBorderThickness: =1
                Height: =22*1
                HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
                Image: |
                    =With(
                        {
                            varImageRecord: LookUp(
                                staticIcons,
                                staticIconName = "Menu"
                            ),
                            varColor: If(
                                Self.DisplayMode = DisplayMode.Disabled,
                                gblAppStyles.Icons.DisabledColor,
                                gblAppStyles.Icons.Color
                            )
                        },
                        With(
                            {
                                varImageData: Concatenate(
                                    "data:image/svg+xml;utf8, ",
                                    EncodeUrl(
                                        Concatenate(
                                            "<svg viewBox='",
                                            varImageRecord.staticIconViewbox,
                                            "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                            varImageRecord.staticIconPath,
                                            "' fill='#",
                                            varColor,
                                            "'/></svg>"
                                        )
                                    )
                                )
                            },
                            varImageData
                        )
                    )
                OnSelect: |-
                    =UpdateContext({locExpandProjectList: !locExpandProjectList});
                    //screen reader start
                    If(locExpandProjectList, 
                    UpdateContext(
                        {
                            locScreenReaderAnnouncedText: With(
                                {
                                    varAnnouncedText: With(
                                        {
                                            varDefault: "Projects list expanded",
                                            varOOBTextId: "imgProjectsMenuExpand_Announcement"
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextID = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            Coalesce(
                                                varLocalizedText,
                                                varDefault
                                            )
                                        )
                                    )
                                },
                                If(
                                    locScreenReaderAnnouncedText = varAnnouncedText,
                                    Concatenate(
                                        varAnnouncedText,
                                        " "
                                    ),
                                    varAnnouncedText
                                )
                            )
                        }
                    ),
                    UpdateContext(
                        {
                            locScreenReaderAnnouncedText: With(
                                {
                                    varAnnouncedText: With(
                                        {
                                            varDefault: "Projects list collapsed",
                                            varOOBTextId: "imgProjectsMenuCollapse_Announcement"
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextID = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            Coalesce(
                                                varLocalizedText,
                                                varDefault
                                            )
                                        )
                                    )
                                },
                                If(
                                    locScreenReaderAnnouncedText = varAnnouncedText,
                                    Concatenate(
                                        varAnnouncedText,
                                        " "
                                    ),
                                    varAnnouncedText
                                )
                            )
                        }
                    )
                    )
                    //screen reader end
                TabIndex: |-
                    =If(
                        (locAddProject || locAddWorkItem || locFilterWorkItems || locEditWorkItem || locShowProjectStatusOptions || locVisibleCoverSelection || locShowFirstRun || locShowPowerAppsPrompt),
                        -1,
                        If(
                            Self.Visible,
                            0,
                            -1
                        )
                    )
                Tooltip: =Self.AccessibleLabel
                Width: =22*1
                X: =20*1
                Y: =30*1
                ZIndex: =7

            lblAllProjects As label:
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                DisabledColor: =gblAppStyles.Label.DisabledColor
                DisabledFill: =gblAppStyles.Label.DisabledFill
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Bold
                Height: =40*1
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                PaddingBottom: =0
                PaddingTop: =0
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Role: =TextRole.Heading1
                Size: =gblAppStyles.Label.Size.Large
                Text: |-
                    =With(
                        {
                            varDefault: "All projects",
                            varOOBTextId: "lblAllProjects__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Tooltip: =Self.Text
                Visible: =locExpandProjectList
                Width: =Parent.Width - Self.X - imgProjectsGlobalSettings.Width - 20
                X: =imgProjectsMenu.X + imgProjectsMenu.Width + 10
                Y: =20*1
                ZIndex: =8

        grpNewProject As group:
            Height: =5
            Width: =5
            X: =40
            Y: =40
            ZIndex: =10

            imgNewProject As image:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Click to create a new project",
                            varOOBTextId: "imgNewProject__locAccessibleText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                DisabledFill: |-
                    =With(
                        {
                            varImageIsCategory: LookUp(
                                staticIcons,
                                staticIconName = "Add"
                            ).staticIconIsCategory
                        },
                        If(
                            varImageIsCategory,
                            gblAppStyles.Icons.DisabledFill_Category,
                            Transparent
                        )
                    )
                DisplayMode: |-
                    =If(
                        locAddProject,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                Fill: |-
                    =With(
                        {
                            varImageIsCategory: LookUp(
                                staticIcons,
                                staticIconName = "Add"
                            ).staticIconIsCategory
                        },
                        If(
                            varImageIsCategory,
                            gblAppStyles.Icons.Fill_Category,
                            Transparent
                        )
                    )
                Height: =22*1
                Image: |
                    =With(
                        {
                            varImageRecord: LookUp(
                                staticIcons,
                                staticIconName = "Add"
                            ),
                            varColor: If(
                                Self.DisplayMode = DisplayMode.Disabled,
                                gblAppStyles.Icons.DisabledColor,
                                gblAppStyles.Icons.Color
                            )
                        },
                        With(
                            {
                                varImageData: Concatenate(
                                    "data:image/svg+xml;utf8, ",
                                    EncodeUrl(
                                        Concatenate(
                                            "<svg viewBox='",
                                            varImageRecord.staticIconViewbox,
                                            "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                            varImageRecord.staticIconPath,
                                            "' fill='#",
                                            varColor,
                                            "'/></svg>"
                                        )
                                    )
                                )
                            },
                            varImageData
                        )
                    )
                OnSelect: |-
                    =UpdateContext(
                        {
                            locAddProject: true
                        }
                    );
                    Reset(txtNewProjectName);
                    ClearCollect(
                        colNewProjectMilestones,
                        {
                            Name: With(
                                {
                                    varDefault: "Milestone1",
                                    varOOBTextId: "_translateCommon__MilestoneNumber1"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            ),
                            Color: "#5AC6CC",
                            DarkColor: "002F31",
                            ETA: Today(),
                            Order: 1
                        },
                        {
                            Name: With(
                                {
                                    varDefault: "Milestone2",
                                    varOOBTextId: "_translateCommon__MilestoneNumber2"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            ),
                            Color: "#C5E9EA",
                            DarkColor: "#025C5F",
                            ETA: Today(),
                            Order: 2
                        },
                        {
                            Name: With(
                                {
                                    varDefault: "Milestone3",
                                    varOOBTextId: "_translateCommon__MilestoneNumber3"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            ),
                            Color: "#F0F9FA",
                            DarkColor: "#03787C",
                            ETA: Today(),
                            Order: 3
                        }
                    );
                    Clear(colNewProjectTeamMembers);
                    Collect(
                        colNewProjectTeamMembers,
                        {
                            appEmailAddress: User().Email,
                            appDisplayName: Office365Users.UserProfileV2(User().Email).displayName
                        }
                    );
                    Reset(txtAssignmentSearchUser);
                    Reset(galAddMilestones);
                    //set focus start
                    UpdateContext({locSetFocusTimerStart: false});
                    UpdateContext({locSetFocusControlTarget: "imgCloseNewProject"});
                    UpdateContext({locSetFocusTimerStart: true});
                    //set focus end
                    
                    //screen reader start
                    UpdateContext(
                        {
                            locScreenReaderAnnouncedText: With(
                                {
                                    varAnnouncedText: With(
                                        {
                                            varDefault: "Navigating to add a new bulletin",
                                            varOOBTextId: "btnBulletins_NewBulletin__Announced"
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextID = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            Coalesce(
                                                varLocalizedText,
                                                varDefault
                                            )
                                        )
                                    )
                                },
                                If(
                                    locScreenReaderAnnouncedText = varAnnouncedText,
                                    Concatenate(
                                        varAnnouncedText,
                                        " "
                                    ),
                                    varAnnouncedText
                                )
                            )
                        }
                    );
                    //screen reader end
                PaddingBottom: =2
                PaddingLeft: =2
                PaddingRight: =2
                PaddingTop: =2
                RadiusBottomLeft: =5
                RadiusBottomRight: =5
                RadiusTopLeft: =5
                RadiusTopRight: =5
                TabIndex: |-
                    =If(
                        true,
                        -1,
                        0
                    )
                Tooltip: =Self.AccessibleLabel
                Visible: =locExpandProjectList
                Width: =22*1
                X: =20*1
                Y: =btnNewProject.Y + (btnNewProject.Height - Self.Height) / 2
                ZIndex: =1

            btnNewProject As button:
                Align: =Align.Left
                BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
                BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
                Color: =gblAppStyles.ButtonTransparent.Color
                DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                DisabledColor: =gblAppStyles.ButtonTransparent.DisabledColor
                DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
                DisplayMode: |-
                    =If(
                        locAddProject,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                Fill: =gblAppStyles.ButtonTransparent.Fill
                FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Normal
                Height: =26*1
                HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
                HoverColor: =gblAppStyles.ButtonTransparent.HoverColor
                HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
                OnSelect: |-
                    =//screen reader start
                    UpdateContext(
                        {
                            locScreenReaderAnnouncedText: With(
                                {
                                    varAnnouncedText: With(
                                        {
                                            varDefault: "Opening a dialog to add a new project",
                                            varOOBTextId: "btnNewProject_Announcement"
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextID = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            Coalesce(
                                                varLocalizedText,
                                                varDefault
                                            )
                                        )
                                    )
                                },
                                If(
                                    locScreenReaderAnnouncedText = varAnnouncedText,
                                    Concatenate(
                                        varAnnouncedText,
                                        " "
                                    ),
                                    varAnnouncedText
                                )
                            )
                        }
                    );
                    //screen reader end
                    Navigate(
                        'Add Project Screen',
                        ScreenTransition.Fade, 
                        {
                                locAddProject: false,
                                locExpandProjectList: locExpandProjectList,
                                locProjectSortOrder: locProjectSortOrder,
                                locSortWorkItemBy: locSortWorkItemBy,
                                locShowSearchWorkItem: locShowSearchWorkItem,
                                locAddWorkItem: locAddWorkItem,
                                locProjectStatusSelection: locProjectStatusSelection,
                                locWorkItemSortOrder: locWorkItemSortOrder
                            }
                    )
                PaddingBottom: =0
                PaddingLeft: =32
                PaddingRight: =0.00
                PaddingTop: =0.00
                PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
                PressedColor: =gblAppStyles.ButtonTransparent.PressedColor
                PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
                RadiusBottomLeft: =gblAppStyles.ButtonTransparent.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.ButtonTransparent.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.ButtonTransparent.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.ButtonTransparent.RadiusTopRight
                Size: =gblAppStyles.ButtonTransparent.Size
                TabIndex: |-
                    =If(
                        (locAddProject || locAddWorkItem || locFilterWorkItems || locEditWorkItem || locShowProjectStatusOptions || locVisibleCoverSelection || locShowFirstRun || locShowPowerAppsPrompt),
                        -1,
                        If(
                            Self.Visible,
                            0,
                            -1
                        )
                    )
                Text: |-
                    =With(
                        {
                            varDefault: "New project",
                            varOOBTextId: "btnNewProject__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Tooltip: |-
                    =With(
                        {
                            varDefault: "Click to create a new project",
                            varOOBTextId: "btnNewProject__locTooltip"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Visible: =locExpandProjectList
                Width: =Parent.Width - Self.X - imgSortProjects.Width - 20
                X: =20
                Y: =txtFindProjects.Y + txtFindProjects.Height + 20
                ZIndex: =6

        lblCustomize_Projects As label:
            BorderColor: =gblAppStyles.Label.BorderColor
            BorderThickness: =gblAppStyles.Label.BorderThickness
            Color: =gblAppStyles.Label.Color
            DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
            DisabledColor: =gblAppStyles.Label.DisabledColor
            DisabledFill: =gblAppStyles.Label.DisabledFill
            Fill: =gblAppStyles.Label.Fill
            FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            Height: =32*1
            HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
            HoverColor: =gblAppStyles.Label.HoverColor
            HoverFill: =gblAppStyles.Label.HoverFill
            OnSelect: |-
                =Navigate(
                    'About Screen',
                    ScreenTransition.Fade,
                    {
                        locAddProject: false,
                        locExpandProjectList: locExpandProjectList,
                        locProjectSortOrder: locProjectSortOrder,
                        locSortWorkItemBy: locSortWorkItemBy,
                        locShowSearchWorkItem: locShowSearchWorkItem,
                        locAddWorkItem: locAddWorkItem,
                        locProjectStatusSelection: locProjectStatusSelection,
                        locWorkItemSortOrder: locWorkItemSortOrder
                    }
                );
                //screen reader start
                UpdateContext(
                    {
                        locScreenReaderAnnouncedText: With(
                            {
                                varAnnouncedText: With(
                                    {
                                        varDefault: "Navigating to the about screen to customize",
                                        varOOBTextId: "lblCustomize_Announcement"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            },
                            If(
                                locScreenReaderAnnouncedText = varAnnouncedText,
                                Concatenate(
                                    varAnnouncedText,
                                    " "
                                ),
                                varAnnouncedText
                            )
                        )
                    }
                );
                //screen reader end
            PaddingBottom: =0
            PaddingTop: =0
            PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
            PressedColor: =gblAppStyles.Label.PressedColor
            PressedFill: =gblAppStyles.Label.PressedFill
            Size: =gblAppStyles.Label.Size.Medium
            TabIndex: |-
                =If(
                    true,
                    -1,
                    0
                )
            Text: |-
                =With(
                    {
                        varDefault: "Customize",
                        varOOBTextId: "lblCustomize_Projects__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Tooltip: =Self.Text
            Visible: =locExpandProjectList
            Width: =Parent.Width - Self.X - 10
            X: =imgCustomize_Projects.X + imgCustomize_Projects.Width
            Y: =Parent.Height - Self.Height - 10
            ZIndex: =11

        imgAbout_Projects As image:
            AccessibleLabel: |-
                =With(
                    {
                        varDefault: "Click to navigate to the About screen",
                        varOOBTextId: "imgAbout_Projects__locAccessibleText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            DisabledFill: |-
                =With(
                    {
                        varImageIsCategory: LookUp(
                            staticIcons,
                            staticIconName = "Info"
                        ).staticIconIsCategory
                    },
                    If(
                        varImageIsCategory,
                        gblAppStyles.Icons.DisabledFill_Category,
                        Transparent
                    )
                )
            DisplayMode: |-
                =If(
                    locAddProject,
                    DisplayMode.Disabled,
                    DisplayMode.Edit
                )
            Fill: |-
                =With(
                    {
                        varImageIsCategory: LookUp(
                            staticIcons,
                            staticIconName = "Info"
                        ).staticIconIsCategory
                    },
                    If(
                        varImageIsCategory,
                        gblAppStyles.Icons.Fill_Category,
                        Transparent
                    )
                )
            Height: =22*1
            Image: |
                =With(
                    {
                        varImageRecord: LookUp(
                            staticIcons,
                            staticIconName = "Info"
                        ),
                        varColor: If(
                            Self.DisplayMode = DisplayMode.Disabled,
                            gblAppStyles.Icons.DisabledColor,
                            gblAppStyles.Icons.Color
                        )
                    },
                    With(
                        {
                            varImageData: Concatenate(
                                "data:image/svg+xml;utf8, ",
                                EncodeUrl(
                                    Concatenate(
                                        "<svg viewBox='",
                                        varImageRecord.staticIconViewbox,
                                        "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                        varImageRecord.staticIconPath,
                                        "' fill='#",
                                        varColor,
                                        "'/></svg>"
                                    )
                                )
                            )
                        },
                        varImageData
                    )
                )
            OnSelect: |-
                =Navigate(
                    'About Screen',
                    ScreenTransition.Fade
                )
            RadiusBottomLeft: =5
            RadiusBottomRight: =5
            RadiusTopLeft: =5
            RadiusTopRight: =5
            TabIndex: |-
                =If(
                    true,
                    -1,
                    0
                )
            Tooltip: =Self.AccessibleLabel
            Visible: =false
            Width: =22*1
            X: =lblCustomize_Projects.X + lblCustomize_Projects.Width
            Y: =lblCustomize_Projects.Y + (lblCustomize_Projects.Height - Self.Height) / 2
            ZIndex: =12

        shpProjectsListDivider As rectangle:
            AccessibleLabel: |-
                =With(
                    {
                        varDefault: "Divider to separate projects list from project details",
                        varOOBTextId: "shpProjectsListDivider__locAccessibleText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Fill: =gblAppStyles.Dividers.Elements
            Height: =Parent.Height - Self.Y
            Tooltip: =Self.AccessibleLabel
            Width: =1*1
            X: =conProjectList.Width - 1
            Y: =0*0
            ZIndex: =13

        imgProjectsNoSearchResults As image:
            AccessibleLabel: |-
                =With(
                    {
                        varDefault: "No projects found",
                        varOOBTextId: "imgProjectsZeroState__locAccessibleText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Height: =Parent.Width * 40 / 100
            Image: =Image_ZeroState_Projects
            PaddingBottom: =8
            PaddingLeft: =8
            PaddingRight: =8
            PaddingTop: =8
            Tooltip: =Self.AccessibleLabel
            Visible: =CountRows(galProjects.AllItems) = 0 && locExpandProjectList && CountRows(Projects) > 0 
            Width: =Parent.Width * 40 / 100
            X: =(galProjects.Width - Self.Width) / 2
            Y: =galProjects.Y
            ZIndex: =16

        lblProjectsNoSearchResultsLine1 As label:
            Align: =Align.Center
            BorderColor: =gblAppStyles.Label.BorderColor
            BorderThickness: =gblAppStyles.Label.BorderThickness
            Color: =gblAppStyles.Label.Color
            DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
            DisabledColor: =gblAppStyles.Label.DisabledColor
            DisabledFill: =gblAppStyles.Label.DisabledFill
            Fill: =gblAppStyles.Label.Fill
            FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Semibold
            HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
            HoverColor: =gblAppStyles.Label.HoverColor
            HoverFill: =gblAppStyles.Label.HoverFill
            PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
            PressedColor: =gblAppStyles.Label.PressedColor
            PressedFill: =gblAppStyles.Label.PressedFill
            Size: =gblAppStyles.Label.Size.Medium
            Text: |-
                =With(
                    {
                        varDefault: "No results",
                        varOOBTextId: "lblSearchTeamMemberNoResultsLine1__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Tooltip: =Self.Text
            Visible: =CountRows(galProjects.AllItems) = 0 && locExpandProjectList && CountRows(Projects) > 0
            Width: =Parent.Width
            Y: =imgProjectsNoSearchResults.Y + imgProjectsNoSearchResults.Height
            ZIndex: =17

        lblProjectsNoSearchResultsLine2 As label:
            Align: =Align.Center
            BorderColor: =gblAppStyles.Label.BorderColor
            BorderThickness: =gblAppStyles.Label.BorderThickness
            Color: =gblAppStyles.Label.Color
            DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
            DisabledColor: =gblAppStyles.Label.DisabledColor
            DisabledFill: =gblAppStyles.Label.DisabledFill
            Fill: =gblAppStyles.Label.Fill
            FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
            HoverColor: =gblAppStyles.Label.HoverColor
            HoverFill: =gblAppStyles.Label.HoverFill
            PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
            PressedColor: =gblAppStyles.Label.PressedColor
            PressedFill: =gblAppStyles.Label.PressedFill
            Size: =gblAppStyles.Label.Size.Medium
            Text: |-
                =With(
                    {
                        varDefault: "Try a different search.",
                        varOOBTextId: "lblSearchMobileWorkItemNoResultsLine2__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Tooltip: =Self.Text
            Visible: =CountRows(galProjects.AllItems) = 0 && locExpandProjectList && CountRows(Projects) > 0
            Width: =Parent.Width
            Y: =lblProjectsNoSearchResultsLine1.Y + lblProjectsNoSearchResultsLine1.Height
            ZIndex: =18

        imgProjectsGlobalSettings As image:
            AccessibleLabel: |-
                =With(
                    {
                        varDefault: "Click to navigate to settings screen",
                        varOOBTextId: "_translateCommon__SettingsScreenNav__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            DisabledFill: |-
                =With(
                    {
                        varImageIsCategory: LookUp(
                            staticIcons,
                            staticIconName = "Info"
                        ).staticIconIsCategory
                    },
                    If(
                        varImageIsCategory,
                        gblAppStyles.Icons.DisabledFill_Category,
                        Transparent
                    )
                )
            DisplayMode: |-
                =If(
                    locAddProject,
                    DisplayMode.Disabled,
                    DisplayMode.Edit
                )
            Fill: |-
                =With(
                    {
                        varImageIsCategory: LookUp(
                            staticIcons,
                            staticIconName = "Info"
                        ).staticIconIsCategory
                    },
                    If(
                        varImageIsCategory,
                        gblAppStyles.Icons.Fill_Category,
                        Transparent
                    )
                )
            Height: =22*1
            Image: |
                =With(
                    {
                        varImageRecord: LookUp(
                            staticIcons,
                            staticIconName = "Settings"
                        ),
                        varColor: If(
                            Self.DisplayMode = DisplayMode.Disabled,
                            gblAppStyles.Icons.DisabledColor,
                            gblAppStyles.Icons.Color
                        )
                    },
                    With(
                        {
                            varImageData: Concatenate(
                                "data:image/svg+xml;utf8, ",
                                EncodeUrl(
                                    Concatenate(
                                        "<svg viewBox='",
                                        varImageRecord.staticIconViewbox,
                                        "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                        varImageRecord.staticIconPath,
                                        "' fill='#",
                                        varColor,
                                        "'/></svg>"
                                    )
                                )
                            )
                        },
                        varImageData
                    )
                )
            OnSelect: |-
                =Navigate(
                    'Global Settings Screen',
                    ScreenTransition.Fade,
                    {
                        locAddProject: false,
                        locExpandProjectList: locExpandProjectList,
                        locProjectSortOrder: locProjectSortOrder,
                        locSortWorkItemBy: locSortWorkItemBy,
                        locShowSearchWorkItem: locShowSearchWorkItem,
                        locAddWorkItem: locAddWorkItem,
                        locProjectStatusSelection: locProjectStatusSelection,
                        locWorkItemSortOrder: locWorkItemSortOrder
                    }
                )
            RadiusBottomLeft: =5
            RadiusBottomRight: =5
            RadiusTopLeft: =5
            RadiusTopRight: =5
            TabIndex: |-
                =If(
                    (locAddProject || locAddWorkItem || locFilterWorkItems || locEditWorkItem || locShowProjectStatusOptions || locVisibleCoverSelection || locShowFirstRun || locShowPowerAppsPrompt),
                    -1,
                    If(
                        Self.Visible,
                        0,
                        -1
                    )
                )
            Tooltip: =Self.AccessibleLabel
            Visible: =locExpandProjectList
            Width: =22
            X: =Parent.Width - Self.Width - 20
            Y: =lblAllProjects.Y + (lblAllProjects.Height - Self.Height) / 2
            ZIndex: =19

        grpFindProjects As group:
            Height: =5
            Width: =5
            X: =40
            Y: =40
            ZIndex: =20

            txtFindProjects As text:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Enter text here to find projects",
                            varOOBTextId: "txtFindProjects__locTooltip"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                BorderColor: =gblAppStyles.TextInput.BorderColor
                BorderThickness: =gblAppStyles.TextInput.BorderThickness
                Color: =gblAppStyles.TextInput.Color
                Default: =""
                DisabledBorderColor: =gblAppStyles.TextInput.DisabledBorderColor
                DisabledColor: =gblAppStyles.TextInput.DisabledColor
                DisabledFill: =gblAppStyles.TextInput.DisabledFill
                DisplayMode: |-
                    =If(
                        locAddProject,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                Fill: =gblAppStyles.Background.Fill
                FocusedBorderColor: =gblAppStyles.TextInput.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.TextInput.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                Height: =32*1
                HintText: |-
                    =With(
                        {
                            varDefault: "Find projects",
                            varOOBTextId: "txtFindProjects__locHintText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                HoverBorderColor: =gblAppStyles.TextInput.HoverBorderColor
                HoverColor: =gblAppStyles.TextInput.HoverColor
                HoverFill: =gblAppStyles.TextInput.HoverFill
                PaddingTop: =5.00
                PressedBorderColor: =gblAppStyles.TextInput.PressedBorderColor
                PressedColor: =gblAppStyles.TextInput.PressedColor
                PressedFill: =gblAppStyles.TextInput.PressedFill
                RadiusBottomLeft: =gblAppStyles.TextInput.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.TextInput.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.TextInput.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.TextInput.RadiusTopRight
                Size: =gblAppStyles.TextInput.Size
                TabIndex: |-
                    =If(
                        (locAddProject || locAddWorkItem || locFilterWorkItems || locEditWorkItem || locShowProjectStatusOptions || locVisibleCoverSelection || locShowFirstRun || locShowPowerAppsPrompt),
                        -1,
                        If(
                            Self.Visible,
                            0,
                            -1
                        )
                    )
                Tooltip: =Self.AccessibleLabel
                Visible: =locExpandProjectList
                Width: =Parent.Width - Self.X - 20 
                X: =20*1
                Y: =lblAllProjects.Y + lblAllProjects.Height + 20
                ZIndex: =2

            imgFindProjects As image:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Click to find projects",
                            varOOBTextId: "imgFindProjects__locAccessibleText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                DisabledFill: |-
                    =With(
                        {
                            varImageIsCategory: LookUp(
                                staticIcons,
                                staticIconName = "Search"
                            ).staticIconIsCategory
                        },
                        If(
                            varImageIsCategory,
                            gblAppStyles.Icons.DisabledFill_Category,
                            Transparent
                        )
                    )
                DisplayMode: |-
                    =If(
                        locAddProject,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                Fill: |-
                    =With(
                        {
                            varImageIsCategory: LookUp(
                                staticIcons,
                                staticIconName = "Search"
                            ).staticIconIsCategory
                        },
                        If(
                            varImageIsCategory,
                            gblAppStyles.Icons.Fill_Category,
                            Transparent
                        )
                    )
                Height: =22*1
                Image: |-
                    =With(
                        {
                            varImageRecord: LookUp(
                                staticIcons,
                                staticIconName = "Search"
                            ),
                            varColor: If(
                                Self.DisplayMode = DisplayMode.Disabled,
                                gblAppStyles.Icons.DisabledColor,
                                gblAppStyles.Icons.Color
                            )
                        },
                        With(
                            {
                                varImageData: Concatenate(
                                    "data:image/svg+xml;utf8, ",
                                    EncodeUrl(
                                        Concatenate(
                                            "<svg viewBox='",
                                            varImageRecord.staticIconViewbox,
                                            "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                            varImageRecord.staticIconPath,
                                            "' fill='#",
                                            varColor,
                                            "'/></svg>"
                                        )
                                    )
                                )
                            },
                            varImageData
                        )
                    )
                PaddingBottom: =2
                PaddingLeft: =2
                PaddingRight: =2
                PaddingTop: =2
                RadiusBottomLeft: =5
                RadiusBottomRight: =5
                RadiusTopLeft: =5
                RadiusTopRight: =5
                Tooltip: =Self.AccessibleLabel
                Visible: =locExpandProjectList && IsBlank(txtFindProjects.Text)
                Width: =22*1
                X: =txtFindProjects.X + txtFindProjects.Width - Self.Width - 8
                Y: =txtFindProjects.Y + (txtFindProjects.Height - Self.Height) / 2
                ZIndex: =3

            imgCloseFindProjects As image:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Click to close the search",
                            varOOBTextId: "imgCloseSearchWorkItem__locAccessibleText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                DisabledFill: |-
                    =With(
                        {
                            varImageIsCategory: LookUp(
                                staticIcons,
                                staticIconName = "Dismiss"
                            ).staticIconIsCategory
                        },
                        If(
                            varImageIsCategory,
                            gblAppStyles.Icons.DisabledFill_Category,
                            Transparent
                        )
                    )
                DisplayMode: |-
                    =If(
                        locAddProject,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                Fill: |-
                    =With(
                        {
                            varImageIsCategory: LookUp(
                                staticIcons,
                                staticIconName = "Dismiss"
                            ).staticIconIsCategory
                        },
                        If(
                            varImageIsCategory,
                            gblAppStyles.Icons.Fill_Category,
                            Transparent
                        )
                    )
                Height: =22*1
                Image: |
                    =With(
                        {
                            varImageRecord: LookUp(
                                staticIcons,
                                staticIconName = "Dismiss"
                            ),
                            varColor: If(
                                Self.DisplayMode = DisplayMode.Disabled,
                                gblAppStyles.Icons.DisabledColor,
                                gblAppStyles.Icons.Color
                            )
                        },
                        With(
                            {
                                varImageData: Concatenate(
                                    "data:image/svg+xml;utf8, ",
                                    EncodeUrl(
                                        Concatenate(
                                            "<svg viewBox='",
                                            varImageRecord.staticIconViewbox,
                                            "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                            varImageRecord.staticIconPath,
                                            "' fill='#",
                                            varColor,
                                            "'/></svg>"
                                        )
                                    )
                                )
                            },
                            varImageData
                        )
                    )
                ImageRotation: =
                OnSelect: |-
                    =Reset(txtFindProjects);
                    //screen reader start
                    UpdateContext(
                        {
                            locScreenReaderAnnouncedText: With(
                                {
                                    varAnnouncedText: With(
                                        {
                                            varDefault: "Project search box cleared",
                                            varOOBTextId: "imgCloseFindProjects_Announcement"
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextID = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            Coalesce(
                                                varLocalizedText,
                                                varDefault
                                            )
                                        )
                                    )
                                },
                                If(
                                    locScreenReaderAnnouncedText = varAnnouncedText,
                                    Concatenate(
                                        varAnnouncedText,
                                        " "
                                    ),
                                    varAnnouncedText
                                )
                            )
                        }
                    );
                    //screen reader end
                PaddingBottom: =2
                PaddingLeft: =2
                PaddingRight: =2
                PaddingTop: =2
                RadiusBottomLeft: =5
                RadiusBottomRight: =5
                RadiusTopLeft: =5
                RadiusTopRight: =5
                TabIndex: |-
                    =If(
                        (locAddProject || locAddWorkItem || locFilterWorkItems || locEditWorkItem || locShowProjectStatusOptions || locVisibleCoverSelection || locShowFirstRun || locShowPowerAppsPrompt),
                        -1,
                        If(
                            Self.Visible,
                            0,
                            -1
                        )
                    )
                Tooltip: =Self.AccessibleLabel
                Visible: =locExpandProjectList && !IsBlank(txtFindProjects.Text)
                Width: =22*1
                X: =txtFindProjects.X + txtFindProjects.Width - Self.Width - 8
                Y: =txtFindProjects.Y + (txtFindProjects.Height - Self.Height) / 2
                ZIndex: =5

    conProjectHeader As groupContainer:
        Height: =112*1
        Width: =Parent.Width-Self.X
        X: =conProjectList.X+conProjectList.Width
        Y: =0*0
        ZIndex: =4

        grpProjectHeader As group:
            Height: =5
            Width: =5
            X: =40
            Y: =40
            ZIndex: =9

            shpProjectColor As rectangle:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Project cover color",
                            varOOBTextId: "shpProjectColor__locAccessibleText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                DisplayMode: =DisplayMode.View
                Fill: |-
                    =Coalesce(
                        If(
                            gblThemeDark,
                            ColorValue(
                                LookUp(
                                    Projects,
                                    Project = gblProject.Project
                                ).'Cover Color Dark'
                            ),
                            ColorValue(
                                LookUp(
                                    Projects,
                                    Project = gblProject.Project
                                ).'Cover Color'
                            )
                        ),
                        ColorValue("#E0E0E0")
                    )
                Height: =112*1
                Visible: =!imgProjectImage.Visible
                Width: =Parent.Width - Self.X
                X: =0*0
                Y: =0*0
                ZIndex: =1

            imgProjectImage As image:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Image for " & gblProject.Name,
                            varOOBTextId: "imgProjectImage__locAccessibleText",
                            varParam0: gblProject.Name
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            If(
                                IsBlankOrError(varParam0),
                                Coalesce(
                                    varLocalizedText,
                                    varDefault
                                ),
                                Coalesce(
                                    Substitute(
                                        varLocalizedText,
                                        "{0}",
                                        Text(varParam0)
                                    ),
                                    varDefault
                                )
                            )
                        )
                    )
                Height: =112*1
                Image: |-
                    =If(
                        !IsBlank(
                            LookUp(
                                Projects,
                                Project = gblProject.Project
                            ).'Cover Icon'
                        ),
                        LookUp(
                            Projects,
                            Project = gblProject.Project
                        ).'Cover Icon',
                        !IsBlank(
                            LookUp(
                                Projects,
                                Project = gblProject.Project
                            ).'Cover Photo'
                        ),
                        LookUp(
                            Projects,
                            Project = gblProject.Project
                        ).'Cover Photo'.Full
                    )
                ImagePosition: =ImagePosition.Fill
                Tooltip: =Self.AccessibleLabel
                Visible: |-
                    =!(IsBlank(
                        LookUp(
                            Projects,
                            Project = gblProject.Project
                        ).'Cover Icon'
                    ) && IsBlank(
                        LookUp(
                            Projects,
                            Project = gblProject.Project
                        ).'Cover Photo'
                    ))
                Width: =Parent.Width - Self.X
                X: =0*0
                Y: =0 * 0
                ZIndex: =2

            lblProjectName As label:
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                DisabledColor: =gblAppStyles.Label.DisabledColor
                DisabledFill: =gblAppStyles.Label.DisabledFill
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Bold
                Height: =40*1
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Role: =TextRole.Heading2
                Size: =gblAppStyles.Label.Size.Large
                Text: =gblProject.Name 
                Tooltip: =Self.Text
                Width: =Parent.Width - Self.X - 30
                X: =20*1
                Y: =20*1
                ZIndex: =3

            btnLink_Background_CoverSelector As button:
                BorderColor: |-
                    =If(
                        gblThemeDark,
                        ColorValue("#616161"),
                        White
                    )
                Color: =Transparent
                DisabledColor: =RGBA(0, 0, 0, 0)
                DisabledFill: =Self.Fill
                DisplayMode: =Parent.DisplayMode
                Fill: =gblAppStyles.Background.Fill
                FocusedBorderThickness: =1
                Font: =Font.'Segoe UI'
                Height: =36*1
                HoverColor: =RGBA(0, 0, 0, 0)
                HoverFill: =Self.Fill
                PressedColor: =Transparent
                PressedFill: =Self.Fill
                RadiusBottomLeft: =4
                RadiusBottomRight: =4
                RadiusTopLeft: =4
                RadiusTopRight: =4
                Size: =17.48
                TabIndex: |-
                    =If(
                        true,
                        -1,
                        0
                    )
                Text: |-
                    =With(
                        {
                            varDefault: "Background button for links",
                            varOOBTextId: "btnLink_Background__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Tooltip: =Self.Text
                Width: =36*1
                X: =Parent.Width - Self.Width - 20
                Y: =56*1
                ZIndex: =6

            imgLink_CoverSelector As image:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Click to select the link",
                            varOOBTextId: "btnLink_Foreground__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                DisabledFill: =Transparent
                Fill: =Transparent
                Height: =22*1
                Image: |-
                    =With(
                                {
                                    varImageRecord: LookUp(
                                        staticIcons,
                                        staticIconName = "Photo"
                                    ),
                                    varColor: If(
                                        Self.DisplayMode = DisplayMode.Disabled,
                                        gblAppStyles.Icons.DisabledColor,
                                        gblAppStyles.Icons.Color
                                    )
                                },
                                With(
                                    {
                                        varImageData: Concatenate(
                                            "data:image/svg+xml;utf8, ",
                                            EncodeUrl(
                                                Concatenate(
                                                    "<svg viewBox='",
                                                    varImageRecord.staticIconViewbox,
                                                    "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                    varImageRecord.staticIconPath,
                                                    "' fill='#",
                                                    varColor,
                                                    "'/></svg>"
                                                )
                                            )
                                        )
                                    },
                                    varImageData
                                )
                            )
                PaddingRight: =2
                TabIndex: |-
                    =If(
                        true,
                        -1,
                        0
                    )
                Tooltip: =Self.AccessibleLabel
                Width: =22*1
                X: =btnLink_Background_CoverSelector.X + (btnLink_Background_CoverSelector.Width - Self.Width)/2
                Y: =btnLink_Background_CoverSelector.Y + (btnLink_Background_CoverSelector.Height - Self.Height) / 2
                ZIndex: =7

            btnLink_Foreground_CoverSelector As button:
                BorderThickness: =0
                Color: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(0, 0, 0, 0)
                DisabledFill: =Self.Fill
                Fill: =Transparent
                FocusedBorderColor: =gblAppStyles.ButtonSecondary.FocusedBorderColor
                FocusedBorderThickness: =2
                Font: =Font.'Segoe UI'
                Height: =36*1
                HoverColor: =RGBA(0, 0, 0, 0)
                HoverFill: =Transparent
                OnSelect: |-
                    =UpdateContext({locVisibleCoverSelection: true});
                    Reset(galProjectColors);
                    Reset(addProjectCoverImage);
                    UpdateContext({locResetAddProjectCoverImage: false});
                    UpdateContext({locResetAddProjectCoverImage: true});
                    //set focus start
                    UpdateContext({locSetFocusTimerStart: false});
                    UpdateContext({locSetFocusControlTarget: "imgCloseCoverSelection"});
                    UpdateContext({locSetFocusTimerStart: true});
                    //set focus end
                PressedColor: =Transparent
                PressedFill: =Transparent
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =17.48
                TabIndex: |-
                    =If(
                        locAddProject || locAddWorkItem || locFilterWorkItems || locEditWorkItem || locShowProjectStatusOptions || locVisibleCoverSelection || locShowFirstRun || locShowPowerAppsPrompt,
                        -1,
                        0
                    )
                Text: |-
                    =With(
                        {
                            varDefault: "Click to open cover selector",
                            varOOBTextId: "_translateCommon__OpenCoverSelector__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Tooltip: =Self.Text
                Width: =btnLink_Background_CoverSelector.Width
                X: =btnLink_Background_CoverSelector.X
                Y: =btnLink_Background_CoverSelector.Y
                ZIndex: =8

    conProjectDetails As groupContainer:
        Height: =Parent.Height-Self.Y
        Width: =Parent.Width-Self.X
        X: =conProjectList.X+conProjectList.Width
        Y: =conProjectHeader.Y+conProjectHeader.Height
        ZIndex: =5

        canProjectDetails As fluidGrid.fluidGridWithBlankCard:
            BorderThickness: =0
            Height: =Parent.Height - Self.Y
            Width: =Parent.Width
            X: =0*1
            Y: =0*0
            ZIndex: =39

            dtcProjectDetails As dataCard:
                BorderColor: =RGBA(0, 0, 0, 1)
                BorderStyle: =BorderStyle.Solid
                BorderThickness: =0
                DisplayMode: =DisplayMode.Edit
                Fill: =RGBA(0, 0, 0, 0)
                Height: =Max(Parent.Height-Self.Y, 'Projects Screen'.Height - Self.Y - conProjectDetails.Y)
                Width: =Parent.Width
                X: =0
                Y: =0
                ZIndex: =1

                galWorkItems As gallery.galleryVertical:
                    AccessibleLabel: |-
                        =With(
                            {
                                varDefault: "List of work items for " & gblProject.Name,
                                varOOBTextId: "galWorkItems__locAccessibleText",
                                varParam0: gblProject.Name
                            },
                            With(
                                {
                                    varLocalizedText: LookUp(
                                        colLocalization,
                                        OOBTextID = varOOBTextId,
                                        LocalizedText
                                    )
                                },
                                If(
                                    IsBlankOrError(varParam0),
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    ),
                                    Coalesce(
                                        Substitute(
                                            varLocalizedText,
                                            "{0}",
                                            Text(varParam0)
                                        ),
                                        varDefault
                                    )
                                )
                            )
                        )
                    BorderColor: =Transparent
                    Default: =LookUp(colWorkItems, 'Project Work item' = First(colWorkItems).'Project Work item')
                    Height: =Parent.Height - Self.Y
                    ItemAccessibleLabel: |-
                        =If(
                            ThisItem.IsSelected,
                            With(
                                {
                                    varDefault: "Selected",
                                    varOOBTextId: "galSelected_Announcement"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            ),
                            With(
                                {
                                    varDefault: "Not selected",
                                    varOOBTextId: "galNotSelected_Announcement"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        )
                    Items: |-
                        =Search(
                            Switch(
                                locSortWorkItemBy,
                                "title",
                                SortByColumns(
                                    Filter(
                                        colWorkItems,
                                        (IsBlank(cmbMilestones.Selected) || !locApplyFilter) || (locApplyFilter && Milestone.Name in cmbMilestones.SelectedItems.Name),
                                        (IsBlank(cmbCategories.Selected) || !locApplyFilter) || (locApplyFilter && Category.Name in cmbCategories.SelectedItems.Name),
                                        (IsBlank(cmbPriorities.Selected) || !locApplyFilter) || (locApplyFilter && Priority.Name in cmbPriorities.SelectedItems.Name),
                                        (IsBlank(cmbTeamMembers.Selected) || !locApplyFilter) || (locApplyFilter && 'Team Member'.'User ID' in cmbTeamMembers.SelectedItems.'User ID'),
                                        (IsBlank(cmbStatuses.Selected) || !locApplyFilter) || (locApplyFilter && 'Work Item Status'.Name in cmbStatuses.SelectedItems.Name)
                                    ),
                                    "msft_name",
                                    If(
                                        locWorkItemSortOrder,
                                        Ascending,
                                        Descending
                                    )
                                ),
                                "milestone",
                                Sort(
                                    Filter(
                                        colWorkItems,
                                        (IsBlank(cmbMilestones.Selected) || !locApplyFilter) || (locApplyFilter && Milestone.Name in cmbMilestones.SelectedItems.Name),
                                        (IsBlank(cmbCategories.Selected) || !locApplyFilter) || (locApplyFilter && Category.Name in cmbCategories.SelectedItems.Name),
                                        (IsBlank(cmbPriorities.Selected) || !locApplyFilter) || (locApplyFilter && Priority.Name in cmbPriorities.SelectedItems.Name),
                                        (IsBlank(cmbTeamMembers.Selected) || !locApplyFilter) || (locApplyFilter && 'Team Member'.'User ID' in cmbTeamMembers.SelectedItems.'User ID'),
                                        (IsBlank(cmbStatuses.Selected) || !locApplyFilter) || (locApplyFilter && 'Work Item Status'.Name in cmbStatuses.SelectedItems.Name)
                                    ),
                                    Milestone.Name,
                                    If(
                                        locWorkItemSortOrder,
                                        Ascending,
                                        Descending
                                    )
                                ),
                                "category",
                                Sort(
                                    Filter(
                                        colWorkItems,
                                        (IsBlank(cmbMilestones.Selected) || !locApplyFilter) || (locApplyFilter && Milestone.Name in cmbMilestones.SelectedItems.Name),
                                        (IsBlank(cmbCategories.Selected) || !locApplyFilter) || (locApplyFilter && Category.Name in cmbCategories.SelectedItems.Name),
                                        (IsBlank(cmbPriorities.Selected) || !locApplyFilter) || (locApplyFilter && Priority.Name in cmbPriorities.SelectedItems.Name),
                                        (IsBlank(cmbTeamMembers.Selected) || !locApplyFilter) || (locApplyFilter && 'Team Member'.'User ID' in cmbTeamMembers.SelectedItems.'User ID'),
                                        (IsBlank(cmbStatuses.Selected) || !locApplyFilter) || (locApplyFilter && 'Work Item Status'.Name in cmbStatuses.SelectedItems.Name)
                                    ),
                                    Category.Name,
                                    If(
                                        locWorkItemSortOrder,
                                        Ascending,
                                        Descending
                                    )
                                ),
                                "priority",
                                Sort(
                                    Filter(
                                        colWorkItems,
                                        (IsBlank(cmbMilestones.Selected) || !locApplyFilter) || (locApplyFilter && Milestone.Name in cmbMilestones.SelectedItems.Name),
                                        (IsBlank(cmbCategories.Selected) || !locApplyFilter) || (locApplyFilter && Category.Name in cmbCategories.SelectedItems.Name),
                                        (IsBlank(cmbPriorities.Selected) || !locApplyFilter) || (locApplyFilter && Priority.Name in cmbPriorities.SelectedItems.Name),
                                        (IsBlank(cmbTeamMembers.Selected) || !locApplyFilter) || (locApplyFilter && 'Team Member'.'User ID' in cmbTeamMembers.SelectedItems.'User ID'),
                                        (IsBlank(cmbStatuses.Selected) || !locApplyFilter) || (locApplyFilter && 'Work Item Status'.Name in cmbStatuses.SelectedItems.Name)
                                    ),
                                    Priority.Name,
                                    If(
                                        locWorkItemSortOrder,
                                        Ascending,
                                        Descending
                                    )
                                ),
                                "assignedto",
                                Sort(
                                    Filter(
                                        colWorkItems,
                                        (IsBlank(cmbMilestones.Selected) || !locApplyFilter) || (locApplyFilter && Milestone.Name in cmbMilestones.SelectedItems.Name),
                                        (IsBlank(cmbCategories.Selected) || !locApplyFilter) || (locApplyFilter && Category.Name in cmbCategories.SelectedItems.Name),
                                        (IsBlank(cmbPriorities.Selected) || !locApplyFilter) || (locApplyFilter && Priority.Name in cmbPriorities.SelectedItems.Name),
                                        (IsBlank(cmbTeamMembers.Selected) || !locApplyFilter) || (locApplyFilter && 'Team Member'.'User ID' in cmbTeamMembers.SelectedItems.'User ID'),
                                        (IsBlank(cmbStatuses.Selected) || !locApplyFilter) || (locApplyFilter && 'Work Item Status'.Name in cmbStatuses.SelectedItems.Name)
                                    ),
                                    'Team Member'.Name,
                                    If(
                                        locWorkItemSortOrder,
                                        Ascending,
                                        Descending
                                    )
                                ),
                                "eta",
                                Sort(
                                    Filter(
                                        colWorkItems,
                                        (IsBlank(cmbMilestones.Selected) || !locApplyFilter) || (locApplyFilter && Milestone.Name in cmbMilestones.SelectedItems.Name),
                                        (IsBlank(cmbCategories.Selected) || !locApplyFilter) || (locApplyFilter && Category.Name in cmbCategories.SelectedItems.Name),
                                        (IsBlank(cmbPriorities.Selected) || !locApplyFilter) || (locApplyFilter && Priority.Name in cmbPriorities.SelectedItems.Name),
                                        (IsBlank(cmbTeamMembers.Selected) || !locApplyFilter) || (locApplyFilter && 'Team Member'.'User ID' in cmbTeamMembers.SelectedItems.'User ID'),
                                        (IsBlank(cmbStatuses.Selected) || !locApplyFilter) || (locApplyFilter && 'Work Item Status'.Name in cmbStatuses.SelectedItems.Name)
                                    ),
                                    ETA,
                                    If(
                                        locWorkItemSortOrder,
                                        Ascending,
                                        Descending
                                    )
                                ),
                                "status",
                                Sort(
                                    Filter(
                                        colWorkItems,
                                        (IsBlank(cmbMilestones.Selected) || !locApplyFilter) || (locApplyFilter && Milestone.Name in cmbMilestones.SelectedItems.Name),
                                        (IsBlank(cmbCategories.Selected) || !locApplyFilter) || (locApplyFilter && Category.Name in cmbCategories.SelectedItems.Name),
                                        (IsBlank(cmbPriorities.Selected) || !locApplyFilter) || (locApplyFilter && Priority.Name in cmbPriorities.SelectedItems.Name),
                                        (IsBlank(cmbTeamMembers.Selected) || !locApplyFilter) || (locApplyFilter && 'Team Member'.'User ID' in cmbTeamMembers.SelectedItems.'User ID'),
                                        (IsBlank(cmbStatuses.Selected) || !locApplyFilter) || (locApplyFilter && 'Work Item Status'.Name in cmbStatuses.SelectedItems.Name)
                                    ),
                                    'Work Item Status'.Name,
                                    If(
                                        locWorkItemSortOrder,
                                        Ascending,
                                        Descending
                                    )
                                ),
                                SortByColumns(
                                    Filter(
                                        colWorkItems,
                                        (IsBlank(cmbMilestones.Selected) || !locApplyFilter) || (locApplyFilter && Milestone.Name in cmbMilestones.SelectedItems.Name),
                                        (IsBlank(cmbCategories.Selected) || !locApplyFilter) || (locApplyFilter && Category.Name in cmbCategories.SelectedItems.Name),
                                        (IsBlank(cmbPriorities.Selected) || !locApplyFilter) || (locApplyFilter && Priority.Name in cmbPriorities.SelectedItems.Name),
                                        (IsBlank(cmbTeamMembers.Selected) || !locApplyFilter) || (locApplyFilter && 'Team Member'.'User ID' in cmbTeamMembers.SelectedItems.'User ID'),
                                        (IsBlank(cmbStatuses.Selected) || !locApplyFilter) || (locApplyFilter && 'Work Item Status'.Name in cmbStatuses.SelectedItems.Name)
                                    ),
                                    "msft_name",
                                    If(
                                        locWorkItemSortOrder,
                                        Ascending,
                                        Descending
                                    )
                                )
                            ),
                            txtFindWorkItems.Text,
                            "msft_name"
                        )
                    Layout: =Layout.Vertical
                    OnSelect: |-
                        =UpdateContext(
                            {
                                locEditWorkItem: true
                            }
                        );
                        //set focus start
                        UpdateContext({locSetFocusTimerStart: false});
                        UpdateContext({locSetFocusControlTarget: "imgCloseEditWorkItem"});
                        UpdateContext({locSetFocusTimerStart: true});
                        //set focus end
                        //screen reader start
                        UpdateContext(
                            {
                                locScreenReaderAnnouncedText: With(
                                    {
                                        varAnnouncedText: With(
                                            {
                                                varDefault: "Opening a dialog to update work item",
                                                varOOBTextId: "galWorkItems_Announcement"
                                            },
                                            With(
                                                {
                                                    varLocalizedText: LookUp(
                                                        colLocalization,
                                                        OOBTextID = varOOBTextId,
                                                        LocalizedText
                                                    )
                                                },
                                                Coalesce(
                                                    varLocalizedText,
                                                    varDefault
                                                )
                                            )
                                        )
                                    },
                                    If(
                                        locScreenReaderAnnouncedText = varAnnouncedText,
                                        Concatenate(
                                            varAnnouncedText,
                                            " "
                                        ),
                                        varAnnouncedText
                                    )
                                )
                            }
                        );
                        //screen reader end
                        Navigate(
                            'Add/Edit Work Item',
                            ScreenTransition.Fade,
                            {
                                locEditWorkItem: true,
                                locSelectedWorkItem: ThisItem,
                                locAddProject: false,
                                locExpandProjectList: locExpandProjectList,
                                locProjectSortOrder: locProjectSortOrder,
                                locSortWorkItemBy: locSortWorkItemBy,
                                locShowSearchWorkItem: locShowSearchWorkItem,
                                locAddWorkItem: locAddWorkItem,
                                locProjectStatusSelection: locProjectStatusSelection,
                                locWorkItemSortOrder: locWorkItemSortOrder
                            }
                        )
                    TabIndex: |-
                        =If(
                            locAddProject || locAddWorkItem || locFilterWorkItems || locEditWorkItem || locShowProjectStatusOptions || locVisibleCoverSelection || locShowFirstRun || locShowPowerAppsPrompt,
                            -1,
                            0
                        )
                    TemplatePadding: =0
                    TemplateSize: =44*1
                    Width: |-
                        =Max(
                            250,
                            Parent.Width - Self.X - 20
                        )
                    X: =lblProjectWorkItemsHeader.X
                    Y: =btnTitleSort.Y + btnTitleSort.Height + 2
                    ZIndex: =22

                    lblWorkItemTitle As label:
                        BorderColor: =gblAppStyles.Label.BorderColor
                        BorderThickness: =gblAppStyles.Label.BorderThickness
                        Color: =gblAppStyles.Label.Color
                        DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                        DisabledColor: =gblAppStyles.Label.DisabledColor
                        DisabledFill: =gblAppStyles.Label.DisabledFill
                        Fill: =gblAppStyles.Label.Fill
                        FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                        FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                        Font: =Font.'Segoe UI'
                        Height: =32*1
                        HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                        HoverColor: =gblAppStyles.Label.HoverColor
                        HoverFill: =gblAppStyles.Label.HoverFill
                        PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                        PressedColor: =gblAppStyles.Label.PressedColor
                        PressedFill: =gblAppStyles.Label.PressedFill
                        Size: =gblAppStyles.Label.Size.Medium
                        Text: =ThisItem.Name
                        Tooltip: =Self.Text
                        Width: |-
                            =Max(
                                Parent.Width / 6,
                                100
                            )
                        Wrap: =false
                        X: =chkSelectWorkItem.X + chkSelectWorkItem.Width
                        Y: =6*1
                        ZIndex: =1

                    lblWorkItemMilestone As label:
                        BorderColor: =gblAppStyles.Label.BorderColor
                        BorderThickness: =gblAppStyles.Label.BorderThickness
                        Color: =gblAppStyles.Label.Color
                        DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                        DisabledColor: =gblAppStyles.Label.DisabledColor
                        DisabledFill: =gblAppStyles.Label.DisabledFill
                        Fill: |-
                            =Coalesce(
                                If(
                                    gblThemeDark,
                                    ColorValue(ThisItem.Milestone.'Color Dark'),
                                    ColorValue(ThisItem.Milestone.Color)
                                ),
                                ColorValue("#E0E0E0")
                            )
                        FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                        FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                        Font: =Font.'Segoe UI'
                        Height: =32*1
                        HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                        HoverColor: =gblAppStyles.Label.HoverColor
                        HoverFill: =gblAppStyles.Label.HoverFill
                        PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                        PressedColor: =gblAppStyles.Label.PressedColor
                        PressedFill: =gblAppStyles.Label.PressedFill
                        Size: =gblAppStyles.Label.Size.Medium
                        Text: =ThisItem.Milestone.Name
                        Tooltip: =Self.Text
                        Width: |-
                            =If(
                                IsBlank(Self.Text), //set the width to zero if there is no milestone
                                0,
                                Min(
                                    Sum(
                                        AddColumns(
                                            Split(
                                                Self.Text,
                                                ""
                                            ),
                                            "Size",
                                            LookUp(
                                                colCharsWidth,
                                                CharFont = Self.Font && CharWeight = Self.FontWeight && Char = Result
                                            ).Size
                                        ),
                                        Value(Size, "en-US")
                                    ) * Self.Size + Self.PaddingLeft + Self.PaddingRight + 2,
                                    Max(
                                        Parent.Width / 10,
                                        90
                                    )
                                )
                            )
                        Wrap: =false
                        X: =lblWorkItemSeparator1.X + lblWorkItemSeparator1.Width + 10
                        Y: =6*1
                        ZIndex: =2

                    lblWorkItemStatus As label:
                        BorderColor: =gblAppStyles.Label.BorderColor
                        BorderThickness: =gblAppStyles.Label.BorderThickness
                        Color: =gblAppStyles.Label.Color
                        DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                        DisabledColor: =gblAppStyles.Label.DisabledColor
                        DisabledFill: =gblAppStyles.Label.DisabledFill
                        Fill: |-
                            =Coalesce(
                                If(
                                    gblThemeDark,
                                    ColorValue(ThisItem.'Work Item Status'.'Color Dark'),
                                    ColorValue(ThisItem.'Work Item Status'.Color)
                                ),
                                ColorValue("#E0E0E0")
                            )
                        FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                        FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                        Font: =Font.'Segoe UI'
                        Height: =32*1
                        HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                        HoverColor: =gblAppStyles.Label.HoverColor
                        HoverFill: =gblAppStyles.Label.HoverFill
                        PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                        PressedColor: =gblAppStyles.Label.PressedColor
                        PressedFill: =gblAppStyles.Label.PressedFill
                        Size: =gblAppStyles.Label.Size.Medium
                        Text: =ThisItem.'Work Item Status'.Name
                        Tooltip: =Self.Text
                        Visible: =!('Projects Screen'.Size = ScreenSize.Small)
                        Width: |-
                            =If(
                                IsBlank(Self.Text),//set the width to zero if there is no status
                                0,
                                Min(
                                    Sum(
                                        AddColumns(
                                            Split(
                                                Self.Text,
                                                ""
                                            ),
                                            "Size",
                                            LookUp(
                                                colCharsWidth,
                                                CharFont = Self.Font && CharWeight = Self.FontWeight && Char = Result
                                            ).Size
                                        ),
                                        Value(Size, "en-US")
                                    ) * Self.Size + Self.PaddingLeft + Self.PaddingRight + 2,
                                    Max(
                                        Parent.Width / 10,
                                        90
                                    )
                                )
                            )
                        Wrap: =false
                        X: =lblWorkItemSeparator2.X + lblWorkItemSeparator2.Width + 10
                        Y: =6*1
                        ZIndex: =3

                    lblWorkItemPriority As label:
                        BorderColor: =gblAppStyles.Label.BorderColor
                        BorderThickness: =gblAppStyles.Label.BorderThickness
                        Color: =gblAppStyles.Label.Color
                        DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                        DisabledColor: =gblAppStyles.Label.DisabledColor
                        DisabledFill: =gblAppStyles.Label.DisabledFill
                        Fill: |-
                            =Coalesce(
                                If(
                                    gblThemeDark,
                                    ColorValue(ThisItem.Priority.'Color Dark'),
                                    ColorValue(ThisItem.Priority.Color)
                                ),
                                ColorValue("#E0E0E0")
                            )
                        FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                        FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                        Font: =Font.'Segoe UI'
                        Height: =32*1
                        HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                        HoverColor: =gblAppStyles.Label.HoverColor
                        HoverFill: =gblAppStyles.Label.HoverFill
                        PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                        PressedColor: =gblAppStyles.Label.PressedColor
                        PressedFill: =gblAppStyles.Label.PressedFill
                        Size: =gblAppStyles.Label.Size.Medium
                        Text: =ThisItem.Priority.Name
                        Tooltip: =Self.Text
                        Visible: =btnPrioritySort.Visible
                        Width: |-
                            =If(
                                IsBlank(Self.Text),//set the width to zero if there is no priority
                                0,
                                Min(
                                    Sum(
                                        AddColumns(
                                            Split(
                                                Self.Text,
                                                ""
                                            ),
                                            "Size",
                                            LookUp(
                                                colCharsWidth,
                                                CharFont = Self.Font && CharWeight = Self.FontWeight && Char = Result
                                            ).Size
                                        ),
                                        Value(Size, "en-US")
                                    ) * Self.Size + Self.PaddingLeft + Self.PaddingRight + 2,
                                    Max(
                                        Parent.Width / 20,
                                        70
                                    )
                                )
                            )
                        Wrap: =false
                        X: =lblWorkItemSeparator3.X + lblWorkItemSeparator3.Width + 10
                        Y: =6*1
                        ZIndex: =4

                    shpWorkItemAssignedToDefault As circle:
                        Fill: |-
                            =If(
                                gblThemeDark,
                                ColorValue("#141414"),
                                gblThemeHiCo,
                                Black,
                                White
                            )
                        Height: =imgWorkItemAssignedTo.Height
                        OnSelect: =Select(Parent)
                        Visible: =btnAssignedToSort.Visible
                        Width: =imgWorkItemAssignedTo.Width
                        X: =imgWorkItemAssignedTo.X
                        Y: =imgWorkItemAssignedTo.Y
                        ZIndex: =5

                    imgWorkItemAssignedToDefault As image:
                        AccessibleLabel: |-
                            =With(
                                {
                                    varDefault: "Photo of the team member to which this work item is assigned to",
                                    varOOBTextId: "imgWorkItemAssignedTo__locAccessibleText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        BorderColor: =gblAppStyles.ButtonPrimary.BorderColor
                        Height: =20*1
                        Image: |-
                            =With(
                                {
                                    varImageRecord: LookUp(
                                        staticIcons,
                                        staticIconName = "Person"
                                    ),
                                    varColor: If(
                                        Self.DisplayMode = DisplayMode.Disabled,
                                        gblAppStyles.Icons.DisabledColor,
                                        gblAppStyles.Icons.Color
                                    )
                                },
                                With(
                                    {
                                        varImageData: Concatenate(
                                            "data:image/svg+xml;utf8, ",
                                            EncodeUrl(
                                                Concatenate(
                                                    "<svg viewBox='",
                                                    varImageRecord.staticIconViewbox,
                                                    "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                    varImageRecord.staticIconPath,
                                                    "' fill='#",
                                                    varColor,
                                                    "'/></svg>"
                                                )
                                            )
                                        )
                                    },
                                    varImageData
                                )
                            )
                        OnSelect: =Select(Parent)
                        PaddingBottom: =4
                        PaddingLeft: =4
                        PaddingRight: =4
                        PaddingTop: =4
                        RadiusBottomLeft: =30
                        RadiusBottomRight: =30
                        RadiusTopLeft: =30
                        RadiusTopRight: =30
                        Tooltip: =Self.AccessibleLabel
                        Visible: =btnAssignedToSort.Visible
                        Width: =20*1
                        X: =lblWorkItemSeparator4.X + lblWorkItemSeparator4.Width + 10
                        Y: =lblWorkItemAssignedTo.Y + (lblWorkItemAssignedTo.Height - Self.Height) / 2
                        ZIndex: =6

                    imgWorkItemAssignedTo As image:
                        AccessibleLabel: |-
                            =With(
                                {
                                    varDefault: "Photo of the team member to which this work item is assigned to",
                                    varOOBTextId: "imgWorkItemAssignedTo__locAccessibleText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        BorderColor: =gblAppStyles.ButtonPrimary.BorderColor
                        Height: =20*1
                        Image: |-
                            =With(
                                {
                                    varAssignedTo: ThisItem.'Team Member'.'User ID'
                                },
                                If(
                                    !IsBlank(varAssignedTo),
                                    If(
                                        !IsBlank(Office365Users.UserPhotoV2(varAssignedTo)),
                                        Office365Users.UserPhotoV2(varAssignedTo),
                                        With(
                                            {
                                                varImageRecord: LookUp(
                                                    staticIcons,
                                                    staticIconName = "Person"
                                                ),
                                                varColor: If(
                                                    Self.DisplayMode = DisplayMode.Disabled,
                                                    gblAppStyles.Icons.DisabledColor,
                                                    gblAppStyles.Icons.Color
                                                )
                                            },
                                            With(
                                                {
                                                    varImageData: Concatenate(
                                                        "data:image/svg+xml;utf8, ",
                                                        EncodeUrl(
                                                            Concatenate(
                                                                "<svg viewBox='",
                                                                varImageRecord.staticIconViewbox,
                                                                "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                                varImageRecord.staticIconPath,
                                                                "' fill='#",
                                                                varColor,
                                                                "'/></svg>"
                                                            )
                                                        )
                                                    )
                                                },
                                                varImageData
                                            )
                                        )
                                    )
                                )
                            )
                        OnSelect: =Select(Parent)
                        RadiusBottomLeft: =20
                        RadiusBottomRight: =20
                        RadiusTopLeft: =20
                        RadiusTopRight: =20
                        Tooltip: =Self.AccessibleLabel
                        Visible: =btnAssignedToSort.Visible
                        Width: =20*1
                        X: =lblWorkItemSeparator4.X + lblWorkItemSeparator4.Width + 10
                        Y: =lblWorkItemAssignedTo.Y + (lblWorkItemAssignedTo.Height - Self.Height) / 2
                        ZIndex: =7

                    lblWorkItemAssignedTo As label:
                        BorderColor: =gblAppStyles.Label.BorderColor
                        BorderThickness: =gblAppStyles.Label.BorderThickness
                        Color: =gblAppStyles.Label.Color
                        DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                        DisabledColor: =gblAppStyles.Label.DisabledColor
                        DisabledFill: =gblAppStyles.Label.DisabledFill
                        Fill: =gblAppStyles.Label.Fill
                        FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                        FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                        Font: =Font.'Segoe UI'
                        Height: =32*1
                        HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                        HoverColor: =gblAppStyles.Label.HoverColor
                        HoverFill: =gblAppStyles.Label.HoverFill
                        PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                        PressedColor: =gblAppStyles.Label.PressedColor
                        PressedFill: =gblAppStyles.Label.PressedFill
                        Size: =gblAppStyles.Label.Size.Medium
                        Text: =ThisItem.'Team Member'.Name
                        Tooltip: =Self.Text
                        Visible: =btnAssignedToSort.Visible
                        Width: |-
                            =Max(
                                Parent.Width / 7,
                                100
                            )
                        Wrap: =false
                        X: =imgWorkItemAssignedTo.X + imgWorkItemAssignedTo.Width
                        Y: =6*1
                        ZIndex: =8

                    lblWorkItemETA As label:
                        BorderColor: =gblAppStyles.Label.BorderColor
                        BorderThickness: =gblAppStyles.Label.BorderThickness
                        Color: =gblAppStyles.Label.Color
                        DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                        DisabledColor: =gblAppStyles.Label.DisabledColor
                        DisabledFill: =gblAppStyles.Label.DisabledFill
                        Fill: =gblAppStyles.Label.Fill
                        FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                        FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                        Font: =Font.'Segoe UI'
                        Height: =32*1
                        HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                        HoverColor: =gblAppStyles.Label.HoverColor
                        HoverFill: =gblAppStyles.Label.HoverFill
                        PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                        PressedColor: =gblAppStyles.Label.PressedColor
                        PressedFill: =gblAppStyles.Label.PressedFill
                        Size: =gblAppStyles.Label.Size.Medium
                        Text: |-
                            =Text(
                                ThisItem.ETA,
                                "[$-en-US]dd mmm",
                                gblUserLanguage
                            )
                        Tooltip: =Self.Text
                        Visible: =('Projects Screen'.Size = ScreenSize.ExtraLarge || 'Projects Screen'.Size = ScreenSize.Large) && btnTargetSort.Width > 60 
                        Width: =Parent.Width / 10 
                        Wrap: =false
                        X: =lblWorkItemSeparator5.X + lblWorkItemSeparator5.Width + 10
                        Y: =6*1
                        ZIndex: =9

                    lblWorkItemCategory As label:
                        BorderColor: =gblAppStyles.Label.BorderColor
                        BorderThickness: =gblAppStyles.Label.BorderThickness
                        Color: =gblAppStyles.Label.Color
                        DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                        DisabledColor: =gblAppStyles.Label.DisabledColor
                        DisabledFill: =gblAppStyles.Label.DisabledFill
                        Fill: |-
                            =Coalesce(
                                If(
                                    gblThemeDark,
                                    ColorValue(ThisItem.Category.'Color Dark'),
                                    ColorValue(ThisItem.Category.Color)
                                ),
                                ColorValue("#E0E0E0")
                            )
                        FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                        FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                        Font: =Font.'Segoe UI'
                        Height: =32*1
                        HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                        HoverColor: =gblAppStyles.Label.HoverColor
                        HoverFill: =gblAppStyles.Label.HoverFill
                        PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                        PressedColor: =gblAppStyles.Label.PressedColor
                        PressedFill: =gblAppStyles.Label.PressedFill
                        Size: =gblAppStyles.Label.Size.Medium
                        Text: =ThisItem.Category.Name
                        Tooltip: =Self.Text
                        Visible: =('Projects Screen'.Size = ScreenSize.ExtraLarge || 'Projects Screen'.Size = ScreenSize.Large) && btnCategorySort.Width > 75
                        Width: |
                            =If(
                                IsBlank(Self.Text),//set the width to zero if there is no category
                                0,
                                Min(
                                    Sum(
                                        AddColumns(
                                            Split(
                                                Self.Text,
                                                ""
                                            ),
                                            "Size",
                                            LookUp(
                                                colCharsWidth,
                                                CharFont = Self.Font && CharWeight = Self.FontWeight && Char = Result
                                            ).Size
                                        ),
                                        Value(Size, "en-US")
                                    ) * Self.Size + Self.PaddingLeft + Self.PaddingRight + 2,
                                    Parent.Width - Self.X
                                )
                            )
                        Wrap: =false
                        X: =lblWorkItemSeparator6.X + lblWorkItemSeparator6.Width + 10
                        Y: =6*1
                        ZIndex: =10

                    lblWorkItemsSeparator As rectangle:
                        Fill: =gblAppStyles.Dividers.Elements
                        Height: =1
                        OnSelect: =Select(Parent)
                        Tooltip: |-
                            =With(
                                {
                                    varDefault: "Divider to separate work items",
                                    varOOBTextId: "lblWorkItemsSeparator__locTooltip"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        Width: =Parent.Width
                        X: =0*0
                        Y: =Parent.TemplateHeight - 1
                        ZIndex: =11

                    lblWorkItemSeparator1 As label:
                        Color: =RGBA(0, 0, 0, 0)
                        Fill: =gblAppStyles.Dividers.Elements
                        Height: =Parent.TemplateHeight
                        OnSelect: =Select(Parent)
                        PaddingRight: =5.83
                        PaddingTop: =5.83
                        Size: =15.15
                        Text: |-
                            =With(
                                {
                                    varDefault: "Divider to separate work item columns",
                                    varOOBTextId: "_translateCommon_WorkItemSeparator"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        Tooltip: =Self.Text
                        Width: =1
                        X: =lblWorkItemTitle.X + lblWorkItemTitle.Width + 10
                        Y: =0*0
                        ZIndex: =12

                    lblWorkItemSeparator2 As label:
                        Color: =RGBA(0, 0, 0, 0)
                        Fill: =gblAppStyles.Dividers.Elements
                        Font: =Font.'Segoe UI'
                        Height: =Parent.TemplateHeight
                        OnSelect: =Select(Parent)
                        Size: =15.15
                        Text: |-
                            =With(
                                {
                                    varDefault: "Divider to separate work item columns",
                                    varOOBTextId: "_translateCommon_WorkItemSeparator"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        Tooltip: =Self.Text
                        Visible: =lblWorkItemStatus.Visible
                        Width: =1
                        X: |-
                            =lblWorkItemMilestone.X + Max(
                                Parent.Width / 10,
                                90
                            ) + 10
                        Y: =0*0
                        ZIndex: =13

                    lblWorkItemSeparator3 As label:
                        Color: =RGBA(0, 0, 0, 0)
                        Fill: =gblAppStyles.Dividers.Elements
                        Height: =Parent.TemplateHeight
                        OnSelect: =Select(Parent)
                        Size: =15.15
                        Text: |-
                            =With(
                                {
                                    varDefault: "Divider to separate work item columns",
                                    varOOBTextId: "_translateCommon_WorkItemSeparator"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        Tooltip: =Self.Text
                        Visible: =btnPrioritySort.Visible
                        Width: =1
                        X: |-
                            =lblWorkItemStatus.X + Max(
                                Parent.Width / 10,
                                90
                            ) + 10
                        Y: =0*0
                        ZIndex: =14

                    lblWorkItemSeparator4 As label:
                        Color: =RGBA(0, 0, 0, 0)
                        Fill: =gblAppStyles.Dividers.Elements
                        Height: =Parent.TemplateHeight
                        OnSelect: =Select(Parent)
                        Size: =15.15
                        Text: |-
                            =With(
                                {
                                    varDefault: "Divider to separate work item columns",
                                    varOOBTextId: "_translateCommon_WorkItemSeparator"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        Tooltip: =Self.Text
                        Visible: =btnAssignedToSort.Visible
                        Width: =1
                        X: |-
                            =lblWorkItemPriority.X + Max(
                                Parent.Width / 20,
                                65
                            ) + 20
                        Y: =0*0
                        ZIndex: =15

                    lblWorkItemSeparator5 As label:
                        Color: =RGBA(0, 0, 0, 0)
                        Fill: =gblAppStyles.Dividers.Elements
                        Height: =Parent.TemplateHeight
                        OnSelect: =Select(Parent)
                        Size: =15.15
                        Text: |-
                            =With(
                                {
                                    varDefault: "Divider to separate work item columns",
                                    varOOBTextId: "_translateCommon_WorkItemSeparator"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        Tooltip: =Self.Text
                        Visible: =('Projects Screen'.Size = ScreenSize.ExtraLarge || 'Projects Screen'.Size = ScreenSize.Large) && btnTargetSort.Width > 60
                        Width: =1
                        X: =lblWorkItemAssignedTo.X + lblWorkItemAssignedTo.Width + 10
                        Y: =0*0
                        ZIndex: =16

                    lblWorkItemSeparator6 As label:
                        Color: =RGBA(0, 0, 0, 0)
                        Fill: =gblAppStyles.Dividers.Elements
                        Height: =Parent.TemplateHeight
                        OnSelect: =Select(Parent)
                        Size: =15.15
                        Text: |-
                            =With(
                                {
                                    varDefault: "Divider to separate work item columns",
                                    varOOBTextId: "_translateCommon_WorkItemSeparator"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        Tooltip: =Self.Text
                        Visible: =('Projects Screen'.Size = ScreenSize.ExtraLarge || 'Projects Screen'.Size = ScreenSize.Large) && btnCategorySort.Width>75
                        Width: =1
                        X: =lblWorkItemETA.X + lblWorkItemETA.Width
                        Y: =0*0
                        ZIndex: =17

                    btnWorkItemsForeground As button:
                        Color: =RGBA(0, 0, 0, 0)
                        DisabledColor: =RGBA(0, 0, 0, 0)
                        Fill: =RGBA(0, 0, 0, 0)
                        FocusedBorderColor: =gblAppStyles.ButtonSecondary.FocusedBorderColor
                        FocusedBorderThickness: =gblAppStyles.ButtonSecondary.FocusedBorderThickness
                        Font: =Font.'Segoe UI'
                        FontWeight: =FontWeight.Bold
                        Height: =Parent.TemplateHeight - 2
                        HoverColor: =RGBA(0, 0, 0, 0)
                        HoverFill: =gblAppStyles.Gallery.HoverFill
                        OnSelect: =Select(Parent)
                        PressedFill: =gblAppStyles.Gallery.PressedFill
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Size: =17.48
                        TabIndex: |-
                            =If(
                                locAddProject || locAddWorkItem || locFilterWorkItems || locEditWorkItem || locShowProjectStatusOptions || locVisibleCoverSelection || locShowFirstRun || locShowPowerAppsPrompt,
                                -1,
                                0
                            )
                        Text: |-
                            =ThisItem.Name & " - " & With(
                                {
                                    varDefault: "Click to select the work item",
                                    varOOBTextId: "btnWorkItemsForeground__locText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        Tooltip: =Self.Text
                        Width: =Parent.Width - Self.X - 2
                        X: =0*0+1
                        Y: =0*0 + 1
                        ZIndex: =18

                    chkSelectWorkItem As checkbox:
                        BorderColor: =gblAppStyles.Checkbox.BorderColor
                        BorderThickness: =gblAppStyles.Checkbox.BorderThickness
                        CheckboxBackgroundFill: =gblAppStyles.Checkbox.CheckboxBackgroundFill
                        CheckboxBorderColor: =gblAppStyles.Checkbox.CheckboxBorderColor
                        CheckboxSize: =25
                        CheckmarkFill: =gblAppStyles.Checkbox.CheckmarkFill
                        Color: =Transparent
                        Default: =chkSelectAllWorkItems.Value
                        DisabledBorderColor: =gblAppStyles.Checkbox.DisabledBorderColor
                        DisabledColor: =Transparent
                        DisabledFill: =gblAppStyles.Checkbox.DisabledFill
                        Fill: =gblAppStyles.Checkbox.Fill
                        FocusedBorderColor: =gblAppStyles.Checkbox.FocusedBorderColor
                        FocusedBorderThickness: =gblAppStyles.Checkbox.BorderThickness
                        Font: =Font.'Segoe UI'
                        Height: =43
                        HoverBorderColor: =gblAppStyles.Checkbox.HoverBorderColor
                        HoverColor: =Transparent
                        HoverFill: =gblAppStyles.Checkbox.HoverFill
                        PressedBorderColor: =gblAppStyles.Checkbox.PressedBorderColor
                        PressedColor: =Transparent
                        PressedFill: =gblAppStyles.Checkbox.PressedFill
                        Reset: =locResetWorkItemCheckbox
                        Size: =gblAppStyles.Checkbox.Size
                        TabIndex: |-
                            =If(
                                locAddProject || locAddWorkItem || locFilterWorkItems || locEditWorkItem || locShowProjectStatusOptions || locVisibleCoverSelection || locShowFirstRun || locShowPowerAppsPrompt,
                                -1,
                                0
                            )
                        Text: |-
                            =With(
                                {
                                    varDefault: "Select work item",
                                    varOOBTextId: "chkSelectWorkItem__locText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        Tooltip: =Self.Text
                        Width: =25
                        X: =1*1
                        Y: =1*1
                        ZIndex: =19

                lblProjectWorkItemsHeader As label:
                    BorderColor: =gblAppStyles.Label.BorderColor
                    BorderThickness: =gblAppStyles.Label.BorderThickness
                    Color: =gblAppStyles.Label.Color
                    DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                    DisabledColor: =gblAppStyles.Label.DisabledColor
                    DisabledFill: =gblAppStyles.Label.DisabledFill
                    Fill: =gblAppStyles.Label.Fill
                    FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                    FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Semibold
                    Height: =50*1
                    HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                    HoverColor: =gblAppStyles.Label.HoverColor
                    HoverFill: =gblAppStyles.Label.HoverFill
                    PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                    PressedColor: =gblAppStyles.Label.PressedColor
                    PressedFill: =gblAppStyles.Label.PressedFill
                    Role: =TextRole.Heading2
                    Size: =gblAppStyles.Label.Size.Large
                    Text: |-
                        =With(
                            {
                                varDefault: "Tracking",
                                varOOBTextId: "lblProjectWorkItemsHeader__locText"
                            },
                            With(
                                {
                                    varLocalizedText: LookUp(
                                        colLocalization,
                                        OOBTextID = varOOBTextId,
                                        LocalizedText
                                    )
                                },
                                Coalesce(
                                    varLocalizedText,
                                    varDefault
                                )
                            )
                        )
                    Tooltip: =Self.Text
                    Width: |-
                        =Switch(
                            gblUserLanguage,
                            "ja-JP",
                            50 * 1,
                            Min(
                                Sum(
                                    AddColumns(
                                        Split(
                                            Self.Text,
                                            ""
                                        ),
                                        "Size",
                                        LookUp(
                                            colCharsWidth,
                                            CharFont = Self.Font && CharWeight = Self.FontWeight && Char = Result
                                        ).Size
                                    ),
                                    Size
                                ) * Self.Size + Self.PaddingLeft + Self.PaddingRight + 2,
                                100
                            )
                        ) + 17
                    X: =lblProjectName.X
                    Y: |-
                        =If(
                            lblZeroProjectTeamMembers.Visible || lblZeroProjectMilestones.Visible,
                            lblZeroProjectTeamMembers.Y + lblZeroProjectTeamMembers.Height + 20,
                            If(
                                locProjectStatusSelection = "Team status",
                                galTeamMembers.Y + galTeamMembers.Height + 20,
                                galMilestones.Y + galMilestones.Height + 20
                            )
                        )
                    ZIndex: =31

                grpWorkItemsHeader As group:
                    Height: =5
                    Width: =5
                    X: =20
                    Y: =-358
                    ZIndex: =31

                    imgSortWorkItem As image:
                        AccessibleLabel: |-
                            =With(
                                {
                                    varDefault: "Click to change sort order of work items",
                                    varOOBTextId: "imgSortWorkItem__AccessibleLabel"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        DisabledFill: |-
                            =With(
                                {
                                    varImageIsCategory: LookUp(
                                        staticIcons,
                                        staticIconName = "Chevron down"
                                    ).staticIconIsCategory
                                },
                                If(
                                    varImageIsCategory,
                                    gblAppStyles.Icons.DisabledFill_Category,
                                    Transparent
                                )
                            )
                        Fill: |-
                            =With(
                                {
                                    varImageIsCategory: LookUp(
                                        staticIcons,
                                        staticIconName = "Chevron down"
                                    ).staticIconIsCategory
                                },
                                If(
                                    varImageIsCategory,
                                    gblAppStyles.Icons.Fill_Category,
                                    Transparent
                                )
                            )
                        Height: =26
                        Image: |
                            =With(
                                {
                                    varImageRecord: LookUp(
                                        staticIcons,
                                        staticIconName = "Chevron down"
                                    ),
                                    varColor: If(
                                        Self.DisplayMode = DisplayMode.Disabled,
                                        gblAppStyles.Icons.DisabledColor,
                                        gblAppStyles.Icons.Color
                                    )
                                },
                                With(
                                    {
                                        varImageData: Concatenate(
                                            "data:image/svg+xml;utf8, ",
                                            EncodeUrl(
                                                Concatenate(
                                                    "<svg viewBox='",
                                                    varImageRecord.staticIconViewbox,
                                                    "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                    varImageRecord.staticIconPath,
                                                    "' fill='#",
                                                    varColor,
                                                    "'/></svg>"
                                                )
                                            )
                                        )
                                    },
                                    varImageData
                                )
                            )
                        ImageRotation: |-
                            =If(
                                locWorkItemSortOrder,
                                ImageRotation.Rotate180,
                                ImageRotation.None
                            )
                        PaddingBottom: =4
                        PaddingLeft: =4
                        PaddingRight: =4
                        PaddingTop: =4
                        TabIndex: |-
                            =If(
                                locAddProject || locAddWorkItem || locFilterWorkItems || locEditWorkItem || locShowProjectStatusOptions || locVisibleCoverSelection || locShowFirstRun || locShowPowerAppsPrompt,
                                -1,
                                0
                            )
                        Tooltip: =Self.AccessibleLabel
                        Visible: |-
                            =Switch(
                                locSortWorkItemBy,
                                "priority",
                                btnPrioritySort.Visible,
                                "assignedto",
                                btnAssignedToSort.Visible,
                                "target",
                                btnTargetSort.Visible,
                                "status",
                                btnCategorySort.Visible,
                                "category",
                                btnStatusSort.Visible,
                                true
                            )
                        Width: =26
                        X: |-
                            =Switch(
                                locSortWorkItemBy,
                                "title",
                                imgMilestoneSort.X - Self.Width, //btnTitleSort.X + btnTitleSort.Width - Self.Width,
                                "milestone",
                                btnMilestoneSort.X + btnMilestoneSort.Width - Self.Width,
                                "category",
                                btnStatusSort.X + btnStatusSort.Width - Self.Width,
                                "priority",
                                btnPrioritySort.X + btnPrioritySort.Width - Self.Width,
                                "assignedto",
                                btnAssignedToSort.X + btnAssignedToSort.Width - Self.Width,
                                "eta",
                                btnTargetSort.X + btnTargetSort.Width - Self.Width,
                                "status",
                                btnCategorySort.X + btnCategorySort.Width - Self.Width,
                                btnTitleSort.X + btnTitleSort.Width - Self.Width
                            )
                        Y: =lblProjectWorkItemsHeader.Y + lblProjectWorkItemsHeader.Height + 10
                        ZIndex: =5

                    btnTitleSort As button:
                        Align: =Align.Left
                        BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
                        BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
                        Color: =gblAppStyles.ButtonTransparent.Color
                        DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                        DisabledColor: =gblAppStyles.ButtonTransparent.DisabledColor
                        DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
                        Fill: =gblAppStyles.ButtonTransparent.Fill
                        FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
                        FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
                        Font: =Font.'Segoe UI'
                        Height: =32*1
                        HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
                        HoverColor: =gblAppStyles.ButtonTransparent.HoverColor
                        HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
                        OnSelect: |-
                            =UpdateContext(
                                {
                                    locSortWorkItemBy: "title",
                                    locWorkItemSortOrder: !locWorkItemSortOrder
                                }
                            );
                            //screen reader start
                            If(locWorkItemSortOrder,
                            UpdateContext(
                                {
                                    locScreenReaderAnnouncedText: With(
                                        {
                                            varAnnouncedText: With(
                                                {
                                                    varDefault: "Work items list sorted by title in ascending order",
                                                    varOOBTextId: "btnTitleSortAscending_Announcement"
                                                },
                                                With(
                                                    {
                                                        varLocalizedText: LookUp(
                                                            colLocalization,
                                                            OOBTextID = varOOBTextId,
                                                            LocalizedText
                                                        )
                                                    },
                                                    Coalesce(
                                                        varLocalizedText,
                                                        varDefault
                                                    )
                                                )
                                            )
                                        },
                                        If(
                                            locScreenReaderAnnouncedText = varAnnouncedText,
                                            Concatenate(
                                                varAnnouncedText,
                                                " "
                                            ),
                                            varAnnouncedText
                                        )
                                    )
                                }
                            ),
                            UpdateContext(
                                {
                                    locScreenReaderAnnouncedText: With(
                                        {
                                            varAnnouncedText: With(
                                                {
                                                    varDefault: "Work items list sorted by title in descending order",
                                                    varOOBTextId: "btnTitleSortDescending_Announcement"
                                                },
                                                With(
                                                    {
                                                        varLocalizedText: LookUp(
                                                            colLocalization,
                                                            OOBTextID = varOOBTextId,
                                                            LocalizedText
                                                        )
                                                    },
                                                    Coalesce(
                                                        varLocalizedText,
                                                        varDefault
                                                    )
                                                )
                                            )
                                        },
                                        If(
                                            locScreenReaderAnnouncedText = varAnnouncedText,
                                            Concatenate(
                                                varAnnouncedText,
                                                " "
                                            ),
                                            varAnnouncedText
                                        )
                                    )
                                }
                            )
                            );
                            //screen reader end
                        PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
                        PressedColor: =gblAppStyles.ButtonTransparent.PressedColor
                        PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
                        RadiusBottomLeft: =gblAppStyles.ButtonTransparent.RadiusBottomLeft
                        RadiusBottomRight: =gblAppStyles.ButtonTransparent.RadiusBottomRight
                        RadiusTopLeft: =gblAppStyles.ButtonTransparent.RadiusTopLeft
                        RadiusTopRight: =gblAppStyles.ButtonTransparent.RadiusTopRight
                        Size: =gblAppStyles.ButtonTransparent.Size
                        TabIndex: |-
                            =If(
                                locAddProject || locAddWorkItem || locFilterWorkItems || locEditWorkItem || locShowProjectStatusOptions || locVisibleCoverSelection || locShowFirstRun || locShowPowerAppsPrompt,
                                -1,
                                0
                            )
                        Text: |-
                            =With(
                                {
                                    varDefault: "Work item",
                                    varOOBTextId: "btnTitleSort__locText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        Tooltip: |-
                            =With(
                                {
                                    varDefault: "Click to sort work items by title",
                                    varOOBTextId: "btnTitleSort__locTooltip"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        Width: |-
                            =Max(
                                galWorkItems.Width / 5,
                                170
                            ) - imgTitleSort.Width - imgMilestoneSort.Width - 20
                        X: =imgTitleSort.X + imgTitleSort.Width
                        Y: =lblProjectWorkItemsHeader.Y + lblProjectWorkItemsHeader.Height + 10
                        ZIndex: =6

                    btnMilestoneSort As button:
                        Align: =Align.Left
                        BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
                        BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
                        Color: =gblAppStyles.ButtonTransparent.Color
                        DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                        DisabledColor: =gblAppStyles.ButtonTransparent.DisabledColor
                        DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
                        Fill: =gblAppStyles.ButtonTransparent.Fill
                        FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
                        FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
                        Font: =Font.'Segoe UI'
                        Height: =32*1
                        HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
                        HoverColor: =gblAppStyles.ButtonTransparent.HoverColor
                        HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
                        OnSelect: |-
                            =UpdateContext(
                                {
                                    locSortWorkItemBy: "milestone",
                                    locWorkItemSortOrder: !locWorkItemSortOrder
                                }
                            );
                            //screen reader start
                            If(locWorkItemSortOrder,
                            UpdateContext(
                                {
                                    locScreenReaderAnnouncedText: With(
                                        {
                                            varAnnouncedText: With(
                                                {
                                                    varDefault: "Work items list sorted by milestone in ascending order",
                                                    varOOBTextId: "btnMilestoneSortAscending_Announcement"
                                                },
                                                With(
                                                    {
                                                        varLocalizedText: LookUp(
                                                            colLocalization,
                                                            OOBTextID = varOOBTextId,
                                                            LocalizedText
                                                        )
                                                    },
                                                    Coalesce(
                                                        varLocalizedText,
                                                        varDefault
                                                    )
                                                )
                                            )
                                        },
                                        If(
                                            locScreenReaderAnnouncedText = varAnnouncedText,
                                            Concatenate(
                                                varAnnouncedText,
                                                " "
                                            ),
                                            varAnnouncedText
                                        )
                                    )
                                }
                            ),
                            UpdateContext(
                                {
                                    locScreenReaderAnnouncedText: With(
                                        {
                                            varAnnouncedText: With(
                                                {
                                                    varDefault: "Work items list sorted by milestone in descending order",
                                                    varOOBTextId: "btnMilestoneSortDescending_Announcement"
                                                },
                                                With(
                                                    {
                                                        varLocalizedText: LookUp(
                                                            colLocalization,
                                                            OOBTextID = varOOBTextId,
                                                            LocalizedText
                                                        )
                                                    },
                                                    Coalesce(
                                                        varLocalizedText,
                                                        varDefault
                                                    )
                                                )
                                            )
                                        },
                                        If(
                                            locScreenReaderAnnouncedText = varAnnouncedText,
                                            Concatenate(
                                                varAnnouncedText,
                                                " "
                                            ),
                                            varAnnouncedText
                                        )
                                    )
                                }
                            )
                            );
                            //screen reader end
                        PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
                        PressedColor: =gblAppStyles.ButtonTransparent.PressedColor
                        PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
                        RadiusBottomLeft: =gblAppStyles.ButtonTransparent.RadiusBottomLeft
                        RadiusBottomRight: =gblAppStyles.ButtonTransparent.RadiusBottomRight
                        RadiusTopLeft: =gblAppStyles.ButtonTransparent.RadiusTopLeft
                        RadiusTopRight: =gblAppStyles.ButtonTransparent.RadiusTopRight
                        Size: =gblAppStyles.ButtonTransparent.Size
                        TabIndex: |-
                            =If(
                                locAddProject || locAddWorkItem || locFilterWorkItems || locEditWorkItem || locShowProjectStatusOptions || locVisibleCoverSelection || locShowFirstRun || locShowPowerAppsPrompt,
                                -1,
                                0
                            )
                        Text: |-
                            =If(
                                Self.Width > 60,
                            With(
                                {
                                    varDefault: "Milestone",
                                    varOOBTextId: "btnMilestoneSort1__locText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            ),
                            With(
                                {
                                    varDefault: "Mile...",
                                    varOOBTextId: "btnMilestoneSort2__locText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            ))
                        Tooltip: |-
                            =With(
                                {
                                    varDefault: "Click to sort work items by milestone",
                                    varOOBTextId: "btnMilestoneSort__locTooltip"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        Width: |-
                            =Max(
                                galWorkItems.Width / 10,
                                90
                            )
                        X: =imgMilestoneSort.X + imgMilestoneSort.Width
                        Y: =lblProjectWorkItemsHeader.Y + lblProjectWorkItemsHeader.Height + 10
                        ZIndex: =7

                    btnStatusSort As button:
                        Align: =Align.Left
                        BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
                        BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
                        Color: =gblAppStyles.ButtonTransparent.Color
                        DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                        DisabledColor: =gblAppStyles.ButtonTransparent.DisabledColor
                        DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
                        Fill: =gblAppStyles.ButtonTransparent.Fill
                        FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
                        FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
                        Font: =Font.'Segoe UI'
                        Height: =32*1
                        HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
                        HoverColor: =gblAppStyles.ButtonTransparent.HoverColor
                        HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
                        OnSelect: |-
                            =UpdateContext(
                                {
                                    locSortWorkItemBy: "status",
                                    locWorkItemSortOrder: !locWorkItemSortOrder
                                }
                            );
                            //screen reader start
                            If(locWorkItemSortOrder,
                            UpdateContext(
                                {
                                    locScreenReaderAnnouncedText: With(
                                        {
                                            varAnnouncedText: With(
                                                {
                                                    varDefault: "Work items list sorted by status in ascending order",
                                                    varOOBTextId: "btnStatusSortAscending_Announcement"
                                                },
                                                With(
                                                    {
                                                        varLocalizedText: LookUp(
                                                            colLocalization,
                                                            OOBTextID = varOOBTextId,
                                                            LocalizedText
                                                        )
                                                    },
                                                    Coalesce(
                                                        varLocalizedText,
                                                        varDefault
                                                    )
                                                )
                                            )
                                        },
                                        If(
                                            locScreenReaderAnnouncedText = varAnnouncedText,
                                            Concatenate(
                                                varAnnouncedText,
                                                " "
                                            ),
                                            varAnnouncedText
                                        )
                                    )
                                }
                            ),
                            UpdateContext(
                                {
                                    locScreenReaderAnnouncedText: With(
                                        {
                                            varAnnouncedText: With(
                                                {
                                                    varDefault: "Work items list sorted by status in descending order",
                                                    varOOBTextId: "btnStatusSortDescending_Announcement"
                                                },
                                                With(
                                                    {
                                                        varLocalizedText: LookUp(
                                                            colLocalization,
                                                            OOBTextID = varOOBTextId,
                                                            LocalizedText
                                                        )
                                                    },
                                                    Coalesce(
                                                        varLocalizedText,
                                                        varDefault
                                                    )
                                                )
                                            )
                                        },
                                        If(
                                            locScreenReaderAnnouncedText = varAnnouncedText,
                                            Concatenate(
                                                varAnnouncedText,
                                                " "
                                            ),
                                            varAnnouncedText
                                        )
                                    )
                                }
                            )
                            );
                            //screen reader end
                        PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
                        PressedColor: =gblAppStyles.ButtonTransparent.PressedColor
                        PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
                        RadiusBottomLeft: =gblAppStyles.ButtonTransparent.RadiusBottomLeft
                        RadiusBottomRight: =gblAppStyles.ButtonTransparent.RadiusBottomRight
                        RadiusTopLeft: =gblAppStyles.ButtonTransparent.RadiusTopLeft
                        RadiusTopRight: =gblAppStyles.ButtonTransparent.RadiusTopRight
                        Size: =gblAppStyles.ButtonTransparent.Size
                        TabIndex: |-
                            =If(
                                locAddProject || locAddWorkItem || locFilterWorkItems || locEditWorkItem || locShowProjectStatusOptions || locVisibleCoverSelection || locShowFirstRun || locShowPowerAppsPrompt,
                                -1,
                                0
                            )
                        Text: |-
                            =With(
                                {
                                    varDefault: "Status",
                                    varOOBTextId: "btnStatusSort__locText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        Tooltip: |-
                            =With(
                                {
                                    varDefault: "Click to sort work items by category",
                                    varOOBTextId: "btnCategorySort__locTooltip"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        Visible: =conProjectDetails.Width > 550
                        Width: |-
                            =Max(
                                galWorkItems.Width / 10,
                                90
                            ) - 5
                        X: =imgStatusSort.X + imgStatusSort.Width
                        Y: =lblProjectWorkItemsHeader.Y + lblProjectWorkItemsHeader.Height + 10
                        ZIndex: =8

                    btnPrioritySort As button:
                        Align: =Align.Left
                        BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
                        BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
                        Color: =gblAppStyles.ButtonTransparent.Color
                        DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                        DisabledColor: =gblAppStyles.ButtonTransparent.DisabledColor
                        DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
                        Fill: =gblAppStyles.ButtonTransparent.Fill
                        FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
                        FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
                        Font: =Font.'Segoe UI'
                        Height: =32*1
                        HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
                        HoverColor: =gblAppStyles.ButtonTransparent.HoverColor
                        HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
                        OnSelect: |-
                            =UpdateContext(
                                {
                                    locSortWorkItemBy: "priority",
                                    locWorkItemSortOrder: !locWorkItemSortOrder
                                }
                            );
                            //screen reader start
                            If(locWorkItemSortOrder,
                            UpdateContext(
                                {
                                    locScreenReaderAnnouncedText: With(
                                        {
                                            varAnnouncedText: With(
                                                {
                                                    varDefault: "Work items list sorted by priority in ascending order",
                                                    varOOBTextId: "btnPrioritySortAscending_Announcement"
                                                },
                                                With(
                                                    {
                                                        varLocalizedText: LookUp(
                                                            colLocalization,
                                                            OOBTextID = varOOBTextId,
                                                            LocalizedText
                                                        )
                                                    },
                                                    Coalesce(
                                                        varLocalizedText,
                                                        varDefault
                                                    )
                                                )
                                            )
                                        },
                                        If(
                                            locScreenReaderAnnouncedText = varAnnouncedText,
                                            Concatenate(
                                                varAnnouncedText,
                                                " "
                                            ),
                                            varAnnouncedText
                                        )
                                    )
                                }
                            ),
                            UpdateContext(
                                {
                                    locScreenReaderAnnouncedText: With(
                                        {
                                            varAnnouncedText: With(
                                                {
                                                    varDefault: "Work items list sorted by priority in descending order",
                                                    varOOBTextId: "btnPrioritySortDescending_Announcement"
                                                },
                                                With(
                                                    {
                                                        varLocalizedText: LookUp(
                                                            colLocalization,
                                                            OOBTextID = varOOBTextId,
                                                            LocalizedText
                                                        )
                                                    },
                                                    Coalesce(
                                                        varLocalizedText,
                                                        varDefault
                                                    )
                                                )
                                            )
                                        },
                                        If(
                                            locScreenReaderAnnouncedText = varAnnouncedText,
                                            Concatenate(
                                                varAnnouncedText,
                                                " "
                                            ),
                                            varAnnouncedText
                                        )
                                    )
                                }
                            )
                            );
                            //screen reader end
                        PaddingLeft: =0
                        PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
                        PressedColor: =gblAppStyles.ButtonTransparent.PressedColor
                        PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
                        RadiusBottomLeft: =gblAppStyles.ButtonTransparent.RadiusBottomLeft
                        RadiusBottomRight: =gblAppStyles.ButtonTransparent.RadiusBottomRight
                        RadiusTopLeft: =gblAppStyles.ButtonTransparent.RadiusTopLeft
                        RadiusTopRight: =gblAppStyles.ButtonTransparent.RadiusTopRight
                        Size: =gblAppStyles.ButtonTransparent.Size
                        TabIndex: |-
                            =If(
                                locAddProject || locAddWorkItem || locFilterWorkItems || locEditWorkItem || locShowProjectStatusOptions || locVisibleCoverSelection || locShowFirstRun || locShowPowerAppsPrompt,
                                -1,
                                0
                            )
                        Text: |-
                            =If(
                                Self.Width > 60,
                                With(
                                    {
                                        varDefault: "Priority",
                                        varOOBTextId: "btnPrioritySort1__locText"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                ),
                                With(
                                    {
                                        varDefault: "Pri...",
                                        varOOBTextId: "btnPrioritySort2__locText"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            )
                        Tooltip: |-
                            =With(
                                {
                                    varDefault: "Click to sort work items by priority",
                                    varOOBTextId: "btnPrioritySort__locTooltip"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        Visible: =conProjectDetails.Width > 650
                        Width: |-
                            =Max(
                                galWorkItems.Width / 20, 
                                70
                            )
                        X: =imgPrioritySort.X + imgPrioritySort.Width
                        Y: =lblProjectWorkItemsHeader.Y + lblProjectWorkItemsHeader.Height + 10
                        ZIndex: =9

                    btnAssignedToSort As button:
                        Align: =Align.Left
                        BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
                        BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
                        Color: =gblAppStyles.ButtonTransparent.Color
                        DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                        DisabledColor: =gblAppStyles.ButtonTransparent.DisabledColor
                        DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
                        Fill: =gblAppStyles.ButtonTransparent.Fill
                        FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
                        FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
                        Font: =Font.'Segoe UI'
                        Height: =32*1
                        HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
                        HoverColor: =gblAppStyles.ButtonTransparent.HoverColor
                        HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
                        OnSelect: |-
                            =UpdateContext(
                                {
                                    locSortWorkItemBy: "assignedto",
                                    locWorkItemSortOrder: !locWorkItemSortOrder
                                }
                            );
                            //screen reader start
                            If(locWorkItemSortOrder,
                            UpdateContext(
                                {
                                    locScreenReaderAnnouncedText: With(
                                        {
                                            varAnnouncedText: With(
                                                {
                                                    varDefault: "Work items list sorted by assigned to in ascending order",
                                                    varOOBTextId: "btnAssignedToSortAscending_Announcement"
                                                },
                                                With(
                                                    {
                                                        varLocalizedText: LookUp(
                                                            colLocalization,
                                                            OOBTextID = varOOBTextId,
                                                            LocalizedText
                                                        )
                                                    },
                                                    Coalesce(
                                                        varLocalizedText,
                                                        varDefault
                                                    )
                                                )
                                            )
                                        },
                                        If(
                                            locScreenReaderAnnouncedText = varAnnouncedText,
                                            Concatenate(
                                                varAnnouncedText,
                                                " "
                                            ),
                                            varAnnouncedText
                                        )
                                    )
                                }
                            ),
                            UpdateContext(
                                {
                                    locScreenReaderAnnouncedText: With(
                                        {
                                            varAnnouncedText: With(
                                                {
                                                    varDefault: "Work items list sorted by assigned to in descending order",
                                                    varOOBTextId: "btnAssignedToSortDescending_Announcement"
                                                },
                                                With(
                                                    {
                                                        varLocalizedText: LookUp(
                                                            colLocalization,
                                                            OOBTextID = varOOBTextId,
                                                            LocalizedText
                                                        )
                                                    },
                                                    Coalesce(
                                                        varLocalizedText,
                                                        varDefault
                                                    )
                                                )
                                            )
                                        },
                                        If(
                                            locScreenReaderAnnouncedText = varAnnouncedText,
                                            Concatenate(
                                                varAnnouncedText,
                                                " "
                                            ),
                                            varAnnouncedText
                                        )
                                    )
                                }
                            )
                            );
                            //screen reader end
                        PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
                        PressedColor: =gblAppStyles.ButtonTransparent.PressedColor
                        PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
                        RadiusBottomLeft: =gblAppStyles.ButtonTransparent.RadiusBottomLeft
                        RadiusBottomRight: =gblAppStyles.ButtonTransparent.RadiusBottomRight
                        RadiusTopLeft: =gblAppStyles.ButtonTransparent.RadiusTopLeft
                        RadiusTopRight: =gblAppStyles.ButtonTransparent.RadiusTopRight
                        Size: =gblAppStyles.ButtonTransparent.Size
                        TabIndex: |-
                            =If(
                                locAddProject || locAddWorkItem || locFilterWorkItems || locEditWorkItem || locShowProjectStatusOptions || locVisibleCoverSelection || locShowFirstRun || locShowPowerAppsPrompt,
                                -1,
                                0
                            )
                        Text: |-
                            =With(
                                {
                                    varDefault: "Assigned to",
                                    varOOBTextId: "btnAssignedToSort__locText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        Tooltip: |-
                            =With(
                                {
                                    varDefault: "Click to sort work items by assigned to",
                                    varOOBTextId: "btnAssignedToSort__locTooltip"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        Visible: =conProjectDetails.Width>800
                        Width: |-
                            =Max(
                                galWorkItems.Width / 7,
                                100
                            )
                        X: =imgAssignedToSort.X + imgAssignedToSort.Width
                        Y: =lblProjectWorkItemsHeader.Y + lblProjectWorkItemsHeader.Height + 10
                        ZIndex: =10

                    btnTargetSort As button:
                        Align: =Align.Left
                        BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
                        BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
                        Color: =gblAppStyles.ButtonTransparent.Color
                        DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                        DisabledColor: =gblAppStyles.ButtonTransparent.DisabledColor
                        DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
                        Fill: =gblAppStyles.ButtonTransparent.Fill
                        FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
                        FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
                        Font: =Font.'Segoe UI'
                        Height: =32*1
                        HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
                        HoverColor: =gblAppStyles.ButtonTransparent.HoverColor
                        HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
                        OnSelect: |-
                            =UpdateContext(
                                {
                                    locSortWorkItemBy: "eta",
                                    locWorkItemSortOrder: !locWorkItemSortOrder
                                }
                            );
                            //screen reader start
                            If(locWorkItemSortOrder,
                            UpdateContext(
                                {
                                    locScreenReaderAnnouncedText: With(
                                        {
                                            varAnnouncedText: With(
                                                {
                                                    varDefault: "Work items list sorted by target date in ascending order",
                                                    varOOBTextId: "btnTargetSortAscending_Announcement"
                                                },
                                                With(
                                                    {
                                                        varLocalizedText: LookUp(
                                                            colLocalization,
                                                            OOBTextID = varOOBTextId,
                                                            LocalizedText
                                                        )
                                                    },
                                                    Coalesce(
                                                        varLocalizedText,
                                                        varDefault
                                                    )
                                                )
                                            )
                                        },
                                        If(
                                            locScreenReaderAnnouncedText = varAnnouncedText,
                                            Concatenate(
                                                varAnnouncedText,
                                                " "
                                            ),
                                            varAnnouncedText
                                        )
                                    )
                                }
                            ),
                            UpdateContext(
                                {
                                    locScreenReaderAnnouncedText: With(
                                        {
                                            varAnnouncedText: With(
                                                {
                                                    varDefault: "Work items list sorted by target date in descending order",
                                                    varOOBTextId: "btnTargetSortDescending_Announcement"
                                                },
                                                With(
                                                    {
                                                        varLocalizedText: LookUp(
                                                            colLocalization,
                                                            OOBTextID = varOOBTextId,
                                                            LocalizedText
                                                        )
                                                    },
                                                    Coalesce(
                                                        varLocalizedText,
                                                        varDefault
                                                    )
                                                )
                                            )
                                        },
                                        If(
                                            locScreenReaderAnnouncedText = varAnnouncedText,
                                            Concatenate(
                                                varAnnouncedText,
                                                " "
                                            ),
                                            varAnnouncedText
                                        )
                                    )
                                }
                            )
                            );
                            //screen reader end
                        PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
                        PressedColor: =gblAppStyles.ButtonTransparent.PressedColor
                        PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
                        RadiusBottomLeft: =gblAppStyles.ButtonTransparent.RadiusBottomLeft
                        RadiusBottomRight: =gblAppStyles.ButtonTransparent.RadiusBottomRight
                        RadiusTopLeft: =gblAppStyles.ButtonTransparent.RadiusTopLeft
                        RadiusTopRight: =gblAppStyles.ButtonTransparent.RadiusTopRight
                        Size: =gblAppStyles.ButtonTransparent.Size
                        TabIndex: |-
                            =If(
                                locAddProject || locAddWorkItem || locFilterWorkItems || locEditWorkItem || locShowProjectStatusOptions || locVisibleCoverSelection || locShowFirstRun || locShowPowerAppsPrompt,
                                -1,
                                0
                            )
                        Text: |-
                            =With(
                                {
                                    varDefault: "Target",
                                    varOOBTextId: "btnTargetSort__locText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        Tooltip: |-
                            =With(
                                {
                                    varDefault: "Click to sort work items by target date",
                                    varOOBTextId: "btnTargetSort__locTooltip"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        Visible: =('Projects Screen'.Size = ScreenSize.ExtraLarge || 'Projects Screen'.Size = ScreenSize.Large) && Self.Width > 60
                        Width: |-
                            =Max(
                                galWorkItems.Width / 10 - 10,
                                30
                            )
                        X: =imgTargetSort.X + imgTargetSort.Width
                        Y: =lblProjectWorkItemsHeader.Y + lblProjectWorkItemsHeader.Height + 10
                        ZIndex: =11

                    btnCategorySort As button:
                        Align: =Align.Left
                        BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
                        BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
                        Color: =gblAppStyles.ButtonTransparent.Color
                        DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                        DisabledColor: =gblAppStyles.ButtonTransparent.DisabledColor
                        DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
                        Fill: =gblAppStyles.ButtonTransparent.Fill
                        FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
                        FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
                        Font: =Font.'Segoe UI'
                        Height: =32*1
                        HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
                        HoverColor: =gblAppStyles.ButtonTransparent.HoverColor
                        HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
                        OnSelect: |-
                            =UpdateContext(
                                {
                                    locSortWorkItemBy: "category",
                                    locWorkItemSortOrder: !locWorkItemSortOrder
                                }
                            );
                            //screen reader start
                            If(locWorkItemSortOrder,
                            UpdateContext(
                                {
                                    locScreenReaderAnnouncedText: With(
                                        {
                                            varAnnouncedText: With(
                                                {
                                                    varDefault: "Work items list sorted by category in ascending order",
                                                    varOOBTextId: "btnCategorySortAscending_Announcement"
                                                },
                                                With(
                                                    {
                                                        varLocalizedText: LookUp(
                                                            colLocalization,
                                                            OOBTextID = varOOBTextId,
                                                            LocalizedText
                                                        )
                                                    },
                                                    Coalesce(
                                                        varLocalizedText,
                                                        varDefault
                                                    )
                                                )
                                            )
                                        },
                                        If(
                                            locScreenReaderAnnouncedText = varAnnouncedText,
                                            Concatenate(
                                                varAnnouncedText,
                                                " "
                                            ),
                                            varAnnouncedText
                                        )
                                    )
                                }
                            ),
                            UpdateContext(
                                {
                                    locScreenReaderAnnouncedText: With(
                                        {
                                            varAnnouncedText: With(
                                                {
                                                    varDefault: "Work items list sorted by category in descending order",
                                                    varOOBTextId: "btnCategorySortDescending_Announcement"
                                                },
                                                With(
                                                    {
                                                        varLocalizedText: LookUp(
                                                            colLocalization,
                                                            OOBTextID = varOOBTextId,
                                                            LocalizedText
                                                        )
                                                    },
                                                    Coalesce(
                                                        varLocalizedText,
                                                        varDefault
                                                    )
                                                )
                                            )
                                        },
                                        If(
                                            locScreenReaderAnnouncedText = varAnnouncedText,
                                            Concatenate(
                                                varAnnouncedText,
                                                " "
                                            ),
                                            varAnnouncedText
                                        )
                                    )
                                }
                            )
                            );
                            //screen reader end
                        PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
                        PressedColor: =gblAppStyles.ButtonTransparent.PressedColor
                        PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
                        RadiusBottomLeft: =gblAppStyles.ButtonTransparent.RadiusBottomLeft
                        RadiusBottomRight: =gblAppStyles.ButtonTransparent.RadiusBottomRight
                        RadiusTopLeft: =gblAppStyles.ButtonTransparent.RadiusTopLeft
                        RadiusTopRight: =gblAppStyles.ButtonTransparent.RadiusTopRight
                        Size: =gblAppStyles.ButtonTransparent.Size
                        TabIndex: |-
                            =If(
                                locAddProject || locAddWorkItem || locFilterWorkItems || locEditWorkItem || locShowProjectStatusOptions || locVisibleCoverSelection || locShowFirstRun || locShowPowerAppsPrompt,
                                -1,
                                0
                            )
                        Text: |-
                            =If(
                                Self.Width > 65,
                                With(
                                    {
                                        varDefault: "Category",
                                        varOOBTextId: "btnCategorySort1__locText"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                ),
                                With(
                                    {
                                        varDefault: "Cat...",
                                        varOOBTextId: "btnCategorySort2__locText"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            )
                        Tooltip: |-
                            =With(
                                {
                                    varDefault: "Click to sort work items by status",
                                    varOOBTextId: "btnStatusSort__locTooltip"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        Visible: =('Projects Screen'.Size = ScreenSize.ExtraLarge || 'Projects Screen'.Size = ScreenSize.Large) && Self.Width > 75
                        Width: =galWorkItems.X + galWorkItems.Width - Self.X
                        X: =imgCategorySort.X + imgCategorySort.Width
                        Y: =lblProjectWorkItemsHeader.Y + lblProjectWorkItemsHeader.Height + 10
                        ZIndex: =12

                    imgTitleSort As image:
                        AccessibleLabel: |-
                            =With(
                                {
                                    varDefault: "Click to sort work items by title",
                                    varOOBTextId: "imgTitleSort__locAccessibleText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        DisabledFill: |-
                            =With(
                                {
                                    varImageIsCategory: LookUp(
                                        staticIcons,
                                        staticIconName = "Text box"
                                    ).staticIconIsCategory
                                },
                                If(
                                    varImageIsCategory,
                                    gblAppStyles.Icons.DisabledFill_Category,
                                    Transparent
                                )
                            )
                        Fill: |-
                            =With(
                                {
                                    varImageIsCategory: LookUp(
                                        staticIcons,
                                        staticIconName = "Text box"
                                    ).staticIconIsCategory
                                },
                                If(
                                    varImageIsCategory,
                                    gblAppStyles.Icons.Fill_Category,
                                    Transparent
                                )
                            )
                        Height: =20
                        Image: |
                            =With(
                                {
                                    varImageRecord: LookUp(
                                        staticIcons,
                                        staticIconName = "Text box"
                                    ),
                                    varColor: If(
                                        Self.DisplayMode = DisplayMode.Disabled,
                                        gblAppStyles.Icons.DisabledColor,
                                        gblAppStyles.Icons.Color
                                    )
                                },
                                With(
                                    {
                                        varImageData: Concatenate(
                                            "data:image/svg+xml;utf8, ",
                                            EncodeUrl(
                                                Concatenate(
                                                    "<svg viewBox='",
                                                    varImageRecord.staticIconViewbox,
                                                    "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                    varImageRecord.staticIconPath,
                                                    "' fill='#",
                                                    varColor,
                                                    "'/></svg>"
                                                )
                                            )
                                        )
                                    },
                                    varImageData
                                )
                            )
                        OnSelect: |-
                            =UpdateContext(
                                {
                                    locSortWorkItemBy: "title",
                                    locWorkItemSortOrder: !locWorkItemSortOrder
                                }
                            )
                        TabIndex: |-
                            =If(
                                true,
                                -1,
                                0
                            )
                        Tooltip: =Self.AccessibleLabel
                        Width: =20
                        X: =chkSelectAllWorkItems.X + chkSelectAllWorkItems.Width
                        Y: =btnTitleSort.Y + (btnTitleSort.Height - Self.Height) / 2
                        ZIndex: =13

                    imgMilestoneSort As image:
                        AccessibleLabel: |-
                            =With(
                                {
                                    varDefault: "Click to sort work items by milestone",
                                    varOOBTextId: "imgMilestoneSort__locAccessibleText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        DisabledFill: |-
                            =With(
                                {
                                    varImageIsCategory: LookUp(
                                        staticIcons,
                                        staticIconName = "Calendar"
                                    ).staticIconIsCategory
                                },
                                If(
                                    varImageIsCategory,
                                    gblAppStyles.Icons.DisabledFill_Category,
                                    Transparent
                                )
                            )
                        Fill: |-
                            =With(
                                {
                                    varImageIsCategory: LookUp(
                                        staticIcons,
                                        staticIconName = "Calendar"
                                    ).staticIconIsCategory
                                },
                                If(
                                    varImageIsCategory,
                                    gblAppStyles.Icons.Fill_Category,
                                    Transparent
                                )
                            )
                        Height: =20
                        Image: |
                            =With(
                                {
                                    varImageRecord: LookUp(
                                        staticIcons,
                                        staticIconName = "Calendar"
                                    ),
                                    varColor: If(
                                        Self.DisplayMode = DisplayMode.Disabled,
                                        gblAppStyles.Icons.DisabledColor,
                                        gblAppStyles.Icons.Color
                                    )
                                },
                                With(
                                    {
                                        varImageData: Concatenate(
                                            "data:image/svg+xml;utf8, ",
                                            EncodeUrl(
                                                Concatenate(
                                                    "<svg viewBox='",
                                                    varImageRecord.staticIconViewbox,
                                                    "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                    varImageRecord.staticIconPath,
                                                    "' fill='#",
                                                    varColor,
                                                    "'/></svg>"
                                                )
                                            )
                                        )
                                    },
                                    varImageData
                                )
                            )
                        OnSelect: |-
                            =UpdateContext(
                                {
                                    locSortWorkItemBy: "milestone",
                                    locWorkItemSortOrder: !locWorkItemSortOrder
                                }
                            )
                        TabIndex: |-
                            =If(
                                true,
                                -1,
                                0
                            )
                        Tooltip: =Self.AccessibleLabel
                        Width: =20
                        X: |-
                            =galWorkItems.X + chkSelectAllWorkItems.Width + Max(
                                galWorkItems.Width / 6,
                                100
                            ) + 10
                        Y: =btnMilestoneSort.Y + (btnMilestoneSort.Height - Self.Height) / 2
                        ZIndex: =14

                    imgStatusSort As image:
                        AccessibleLabel: |-
                            =With(
                                {
                                    varDefault: "Click to sort work items by status",
                                    varOOBTextId: "imgStatusSort__locAccessibleText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        DisabledFill: |-
                            =With(
                                {
                                    varImageIsCategory: LookUp(
                                        staticIcons,
                                        staticIconName = "Category"
                                    ).staticIconIsCategory
                                },
                                If(
                                    varImageIsCategory,
                                    gblAppStyles.Icons.DisabledFill_Category,
                                    Transparent
                                )
                            )
                        Fill: |-
                            =With(
                                {
                                    varImageIsCategory: LookUp(
                                        staticIcons,
                                        staticIconName = "Category"
                                    ).staticIconIsCategory
                                },
                                If(
                                    varImageIsCategory,
                                    gblAppStyles.Icons.Fill_Category,
                                    Transparent
                                )
                            )
                        Height: =20
                        Image: |-
                            =With(
                                        {
                                            varImageRecord: LookUp(
                                                staticIcons,
                                                staticIconName = "Status"
                                            ),
                                            varColor: If(
                                                Self.DisplayMode = DisplayMode.Disabled,
                                                gblAppStyles.Icons.DisabledColor,
                                                gblAppStyles.Icons.Color
                                            )
                                        },
                                        With(
                                            {
                                                varImageData: Concatenate(
                                                    "data:image/svg+xml;utf8, ",
                                                    EncodeUrl(
                                                        Concatenate(
                                                            "<svg viewBox='",
                                                            varImageRecord.staticIconViewbox,
                                                            "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                            varImageRecord.staticIconPath,
                                                            "' fill='#",
                                                            varColor,
                                                            "'/></svg>"
                                                        )
                                                    )
                                                )
                                            },
                                            varImageData
                                        )
                                    )
                        OnSelect: |-
                            =UpdateContext(
                                {
                                    locSortWorkItemBy: "status",
                                    locWorkItemSortOrder: !locWorkItemSortOrder
                                }
                            );
                            //screen reader start
                            If(locWorkItemSortOrder,
                            UpdateContext(
                                {
                                    locScreenReaderAnnouncedText: With(
                                        {
                                            varAnnouncedText: With(
                                                {
                                                    varDefault: "Work items list sorted by status in ascending order",
                                                    varOOBTextId: "btnStatusSortAscending_Announcement"
                                                },
                                                With(
                                                    {
                                                        varLocalizedText: LookUp(
                                                            colLocalization,
                                                            OOBTextID = varOOBTextId,
                                                            LocalizedText
                                                        )
                                                    },
                                                    Coalesce(
                                                        varLocalizedText,
                                                        varDefault
                                                    )
                                                )
                                            )
                                        },
                                        If(
                                            locScreenReaderAnnouncedText = varAnnouncedText,
                                            Concatenate(
                                                varAnnouncedText,
                                                " "
                                            ),
                                            varAnnouncedText
                                        )
                                    )
                                }
                            ),
                            UpdateContext(
                                {
                                    locScreenReaderAnnouncedText: With(
                                        {
                                            varAnnouncedText: With(
                                                {
                                                    varDefault: "Work items list sorted by status in descending order",
                                                    varOOBTextId: "btnStatusSortDescending_Announcement"
                                                },
                                                With(
                                                    {
                                                        varLocalizedText: LookUp(
                                                            colLocalization,
                                                            OOBTextID = varOOBTextId,
                                                            LocalizedText
                                                        )
                                                    },
                                                    Coalesce(
                                                        varLocalizedText,
                                                        varDefault
                                                    )
                                                )
                                            )
                                        },
                                        If(
                                            locScreenReaderAnnouncedText = varAnnouncedText,
                                            Concatenate(
                                                varAnnouncedText,
                                                " "
                                            ),
                                            varAnnouncedText
                                        )
                                    )
                                }
                            )
                            );
                            //screen reader end
                        TabIndex: |-
                            =If(
                                true,
                                -1,
                                0
                            )
                        Tooltip: =Self.AccessibleLabel
                        Visible: =!('Projects Screen'.Size = ScreenSize.Small)
                        Width: =20
                        X: =btnMilestoneSort.X + btnMilestoneSort.Width + 5
                        Y: =btnStatusSort.Y + (btnStatusSort.Height - Self.Height) / 2
                        ZIndex: =15

                    imgPrioritySort As image:
                        AccessibleLabel: |-
                            =With(
                                {
                                    varDefault: "Click to sort work items by priority",
                                    varOOBTextId: "imgPrioritySort__locAccessibleText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        DisabledFill: |-
                            =With(
                                {
                                    varImageIsCategory: LookUp(
                                        staticIcons,
                                        staticIconName = "Priority"
                                    ).staticIconIsCategory
                                },
                                If(
                                    varImageIsCategory,
                                    gblAppStyles.Icons.DisabledFill_Category,
                                    Transparent
                                )
                            )
                        Fill: |-
                            =With(
                                {
                                    varImageIsCategory: LookUp(
                                        staticIcons,
                                        staticIconName = "Priority"
                                    ).staticIconIsCategory
                                },
                                If(
                                    varImageIsCategory,
                                    gblAppStyles.Icons.Fill_Category,
                                    Transparent
                                )
                            )
                        Height: =20
                        Image: |-
                            =With(
                                        {
                                            varImageRecord: LookUp(
                                                staticIcons,
                                                staticIconName = "Priority"
                                            ),
                                            varColor: If(
                                                Self.DisplayMode = DisplayMode.Disabled,
                                                gblAppStyles.Icons.DisabledColor,
                                                gblAppStyles.Icons.Color
                                            )
                                        },
                                        With(
                                            {
                                                varImageData: Concatenate(
                                                    "data:image/svg+xml;utf8, ",
                                                    EncodeUrl(
                                                        Concatenate(
                                                            "<svg viewBox='",
                                                            varImageRecord.staticIconViewbox,
                                                            "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                            varImageRecord.staticIconPath,
                                                            "' fill='#",
                                                            varColor,
                                                            "'/></svg>"
                                                        )
                                                    )
                                                )
                                            },
                                            varImageData
                                        )
                                    )
                        OnSelect: |-
                            =UpdateContext(
                                {
                                    locSortWorkItemBy: "priority",
                                    locWorkItemSortOrder: !locWorkItemSortOrder
                                }
                            )
                        TabIndex: |-
                            =If(
                                true,
                                -1,
                                0
                            )
                        Tooltip: =Self.AccessibleLabel
                        Visible: =btnPrioritySort.Visible
                        Width: =20
                        X: =btnStatusSort.X + btnStatusSort.Width
                        Y: =btnPrioritySort.Y + (btnPrioritySort.Height - Self.Height) / 2
                        ZIndex: =16

                    imgAssignedToSort As image:
                        AccessibleLabel: |-
                            =With(
                                {
                                    varDefault: "Click to sort work items by assigned to",
                                    varOOBTextId: "imgAssignedToSort__locAccessibleText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        DisabledFill: |-
                            =With(
                                {
                                    varImageIsCategory: LookUp(
                                        staticIcons,
                                        staticIconName = "Person"
                                    ).staticIconIsCategory
                                },
                                If(
                                    varImageIsCategory,
                                    gblAppStyles.Icons.DisabledFill_Category,
                                    Transparent
                                )
                            )
                        Fill: |-
                            =With(
                                {
                                    varImageIsCategory: LookUp(
                                        staticIcons,
                                        staticIconName = "Person"
                                    ).staticIconIsCategory
                                },
                                If(
                                    varImageIsCategory,
                                    gblAppStyles.Icons.Fill_Category,
                                    Transparent
                                )
                            )
                        Height: =20
                        Image: |-
                            =With(
                                        {
                                            varImageRecord: LookUp(
                                                staticIcons,
                                                staticIconName = "Person"
                                            ),
                                            varColor: If(
                                                Self.DisplayMode = DisplayMode.Disabled,
                                                gblAppStyles.Icons.DisabledColor,
                                                gblAppStyles.Icons.Color
                                            )
                                        },
                                        With(
                                            {
                                                varImageData: Concatenate(
                                                    "data:image/svg+xml;utf8, ",
                                                    EncodeUrl(
                                                        Concatenate(
                                                            "<svg viewBox='",
                                                            varImageRecord.staticIconViewbox,
                                                            "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                            varImageRecord.staticIconPath,
                                                            "' fill='#",
                                                            varColor,
                                                            "'/></svg>"
                                                        )
                                                    )
                                                )
                                            },
                                            varImageData
                                        )
                                    )
                        OnSelect: |-
                            =UpdateContext(
                                {
                                    locSortWorkItemBy: "assignedto",
                                    locWorkItemSortOrder: !locWorkItemSortOrder
                                }
                            )
                        TabIndex: |-
                            =If(
                                true,
                                -1,
                                0
                            )
                        Tooltip: =Self.AccessibleLabel
                        Visible: =btnAssignedToSort.Visible
                        Width: =20
                        X: =btnPrioritySort.X + btnPrioritySort.Width + 10
                        Y: =btnAssignedToSort.Y + (btnAssignedToSort.Height - Self.Height) / 2
                        ZIndex: =17

                    imgTargetSort As image:
                        AccessibleLabel: |-
                            =With(
                                {
                                    varDefault: "Click to sort work items by target date",
                                    varOOBTextId: "imgTargetSort__locAccessibleText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        DisabledFill: |-
                            =With(
                                {
                                    varImageIsCategory: LookUp(
                                        staticIcons,
                                        staticIconName = "TargetDate"
                                    ).staticIconIsCategory
                                },
                                If(
                                    varImageIsCategory,
                                    gblAppStyles.Icons.DisabledFill_Category,
                                    Transparent
                                )
                            )
                        Fill: |-
                            =With(
                                {
                                    varImageIsCategory: LookUp(
                                        staticIcons,
                                        staticIconName = "TargetDate"
                                    ).staticIconIsCategory
                                },
                                If(
                                    varImageIsCategory,
                                    gblAppStyles.Icons.Fill_Category,
                                    Transparent
                                )
                            )
                        Height: =20
                        Image: |-
                            =With(
                                        {
                                            varImageRecord: LookUp(
                                                staticIcons,
                                                staticIconName = "TargetDate"
                                            ),
                                            varColor: If(
                                                Self.DisplayMode = DisplayMode.Disabled,
                                                gblAppStyles.Icons.DisabledColor,
                                                gblAppStyles.Icons.Color
                                            )
                                        },
                                        With(
                                            {
                                                varImageData: Concatenate(
                                                    "data:image/svg+xml;utf8, ",
                                                    EncodeUrl(
                                                        Concatenate(
                                                            "<svg viewBox='",
                                                            varImageRecord.staticIconViewbox,
                                                            "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                            varImageRecord.staticIconPath,
                                                            "' fill='#",
                                                            varColor,
                                                            "'/></svg>"
                                                        )
                                                    )
                                                )
                                            },
                                            varImageData
                                        )
                                    )
                        OnSelect: |-
                            =UpdateContext(
                                {
                                    locSortWorkItemBy: "eta",
                                    locWorkItemSortOrder: !locWorkItemSortOrder
                                }
                            )
                        TabIndex: |-
                            =If(
                                true,
                                -1,
                                0
                            )
                        Tooltip: =Self.AccessibleLabel
                        Visible: =('Projects Screen'.Size = ScreenSize.ExtraLarge || 'Projects Screen'.Size = ScreenSize.Large) && btnTargetSort.Width > 60
                        Width: =20
                        X: =btnAssignedToSort.X + btnAssignedToSort.Width + 20
                        Y: =btnTargetSort.Y + (btnTargetSort.Height - Self.Height) / 2
                        ZIndex: =18

                    imgCategorySort As image:
                        AccessibleLabel: |-
                            =With(
                                {
                                    varDefault: "Click to sort work items by category",
                                    varOOBTextId: "imgCategorySort__locAccessibleText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        DisabledFill: |-
                            =With(
                                {
                                    varImageIsCategory: LookUp(
                                        staticIcons,
                                        staticIconName = "Status"
                                    ).staticIconIsCategory
                                },
                                If(
                                    varImageIsCategory,
                                    gblAppStyles.Icons.DisabledFill_Category,
                                    Transparent
                                )
                            )
                        Fill: |-
                            =With(
                                {
                                    varImageIsCategory: LookUp(
                                        staticIcons,
                                        staticIconName = "Status"
                                    ).staticIconIsCategory
                                },
                                If(
                                    varImageIsCategory,
                                    gblAppStyles.Icons.Fill_Category,
                                    Transparent
                                )
                            )
                        Height: =20
                        Image: |-
                            =With(
                                {
                                    varImageRecord: LookUp(
                                        staticIcons,
                                        staticIconName = "Category"
                                    ),
                                    varColor: If(
                                        Self.DisplayMode = DisplayMode.Disabled,
                                        gblAppStyles.Icons.DisabledColor,
                                        gblAppStyles.Icons.Color
                                    )
                                },
                                With(
                                    {
                                        varImageData: Concatenate(
                                            "data:image/svg+xml;utf8, ",
                                            EncodeUrl(
                                                Concatenate(
                                                    "<svg viewBox='",
                                                    varImageRecord.staticIconViewbox,
                                                    "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                    varImageRecord.staticIconPath,
                                                    "' fill='#",
                                                    varColor,
                                                    "'/></svg>"
                                                )
                                            )
                                        )
                                    },
                                    varImageData
                                )
                            )
                        OnSelect: |-
                            =UpdateContext(
                                {
                                    locSortWorkItemBy: "category",
                                    locWorkItemSortOrder: !locWorkItemSortOrder
                                }
                            );
                            //screen reader start
                            If(locWorkItemSortOrder,
                            UpdateContext(
                                {
                                    locScreenReaderAnnouncedText: With(
                                        {
                                            varAnnouncedText: With(
                                                {
                                                    varDefault: "Work items list sorted by category in ascending order",
                                                    varOOBTextId: "btnCategorySortAscending_Announcement"
                                                },
                                                With(
                                                    {
                                                        varLocalizedText: LookUp(
                                                            colLocalization,
                                                            OOBTextID = varOOBTextId,
                                                            LocalizedText
                                                        )
                                                    },
                                                    Coalesce(
                                                        varLocalizedText,
                                                        varDefault
                                                    )
                                                )
                                            )
                                        },
                                        If(
                                            locScreenReaderAnnouncedText = varAnnouncedText,
                                            Concatenate(
                                                varAnnouncedText,
                                                " "
                                            ),
                                            varAnnouncedText
                                        )
                                    )
                                }
                            ),
                            UpdateContext(
                                {
                                    locScreenReaderAnnouncedText: With(
                                        {
                                            varAnnouncedText: With(
                                                {
                                                    varDefault: "Work items list sorted by category in descending order",
                                                    varOOBTextId: "btnCategorySortDescending_Announcement"
                                                },
                                                With(
                                                    {
                                                        varLocalizedText: LookUp(
                                                            colLocalization,
                                                            OOBTextID = varOOBTextId,
                                                            LocalizedText
                                                        )
                                                    },
                                                    Coalesce(
                                                        varLocalizedText,
                                                        varDefault
                                                    )
                                                )
                                            )
                                        },
                                        If(
                                            locScreenReaderAnnouncedText = varAnnouncedText,
                                            Concatenate(
                                                varAnnouncedText,
                                                " "
                                            ),
                                            varAnnouncedText
                                        )
                                    )
                                }
                            )
                            );
                            //screen reader end
                        TabIndex: |-
                            =If(
                                true,
                                -1,
                                0
                            )
                        Tooltip: =Self.AccessibleLabel
                        Visible: =('Projects Screen'.Size = ScreenSize.ExtraLarge || 'Projects Screen'.Size = ScreenSize.Large) && btnCategorySort.Width > 75
                        Width: =20
                        X: =btnTargetSort.X + btnTargetSort.Width + 5
                        Y: =btnCategorySort.Y + (btnCategorySort.Height - Self.Height) / 2
                        ZIndex: =19

                    chkSelectAllWorkItems As checkbox:
                        BorderColor: =gblAppStyles.Checkbox.BorderColor
                        BorderThickness: =gblAppStyles.Checkbox.BorderThickness
                        CheckboxBackgroundFill: =gblAppStyles.Checkbox.CheckboxBackgroundFill
                        CheckboxBorderColor: =gblAppStyles.Checkbox.CheckboxBorderColor
                        CheckboxSize: =25
                        CheckmarkFill: =gblAppStyles.Checkbox.CheckmarkFill
                        Color: =gblAppStyles.Checkbox.Color
                        DisabledBorderColor: =gblAppStyles.Checkbox.DisabledBorderColor
                        DisabledColor: =gblAppStyles.Checkbox.DisabledColor
                        DisabledFill: =gblAppStyles.Checkbox.DisabledFill
                        DisplayMode: |-
                            =If(
                                CountRows(galWorkItems.AllItems) > 0,
                                DisplayMode.Edit,
                                DisplayMode.Disabled
                            )
                        Fill: =gblAppStyles.Checkbox.Fill
                        FocusedBorderColor: =gblAppStyles.Checkbox.FocusedBorderColor
                        FocusedBorderThickness: =gblAppStyles.Checkbox.BorderThickness
                        Font: =Font.'Segoe UI'
                        Height: =32
                        HoverBorderColor: =gblAppStyles.Checkbox.HoverBorderColor
                        HoverColor: =gblAppStyles.Checkbox.HoverColor
                        HoverFill: =gblAppStyles.Checkbox.HoverFill
                        OnCheck: |-
                            =//screen reader start
                            UpdateContext(
                                {
                                    locScreenReaderAnnouncedText: With(
                                        {
                                            varAnnouncedText: With(
                                                {
                                                    varDefault: "All work items selected",
                                                    varOOBTextId: "chkSelectAllWorkItemsCheck_Announcement"
                                                },
                                                With(
                                                    {
                                                        varLocalizedText: LookUp(
                                                            colLocalization,
                                                            OOBTextID = varOOBTextId,
                                                            LocalizedText
                                                        )
                                                    },
                                                    Coalesce(
                                                        varLocalizedText,
                                                        varDefault
                                                    )
                                                )
                                            )
                                        },
                                        If(
                                            locScreenReaderAnnouncedText = varAnnouncedText,
                                            Concatenate(
                                                varAnnouncedText,
                                                " "
                                            ),
                                            varAnnouncedText
                                        )
                                    )
                                }
                            );
                            //screen reader end
                        OnUncheck: |-
                            =//screen reader start
                            UpdateContext(
                                {
                                    locScreenReaderAnnouncedText: With(
                                        {
                                            varAnnouncedText: With(
                                                {
                                                    varDefault: "All work items deselected",
                                                    varOOBTextId: "chkSelectAllWorkItemsUncheck_Announcement"
                                                },
                                                With(
                                                    {
                                                        varLocalizedText: LookUp(
                                                            colLocalization,
                                                            OOBTextID = varOOBTextId,
                                                            LocalizedText
                                                        )
                                                    },
                                                    Coalesce(
                                                        varLocalizedText,
                                                        varDefault
                                                    )
                                                )
                                            )
                                        },
                                        If(
                                            locScreenReaderAnnouncedText = varAnnouncedText,
                                            Concatenate(
                                                varAnnouncedText,
                                                " "
                                            ),
                                            varAnnouncedText
                                        )
                                    )
                                }
                            );
                            //screen reader end
                        PressedBorderColor: =gblAppStyles.Checkbox.PressedBorderColor
                        PressedColor: =gblAppStyles.Checkbox.PressedColor
                        PressedFill: =gblAppStyles.Checkbox.PressedFill
                        Size: =gblAppStyles.Checkbox.Size
                        TabIndex: |-
                            =If(
                                locAddProject || locAddWorkItem || locFilterWorkItems || locEditWorkItem || locShowProjectStatusOptions || locVisibleCoverSelection || locShowFirstRun || locShowPowerAppsPrompt,
                                -1,
                                0
                            )
                        Text: |-
                            =With(
                                {
                                    varDefault: "Select all work items",
                                    varOOBTextId: "chkSelectAllWorkItems__locText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        Tooltip: =Self.Text
                        Width: =25
                        X: =galWorkItems.X
                        Y: =btnTitleSort.Y - 2 
                        ZIndex: =20

                    lblWorkItemsHeaderUnderline As label:
                        Color: =RGBA(0, 0, 0, 0)
                        Fill: =gblAppStyles.Dividers.Elements
                        Height: =1
                        PaddingRight: =5.83
                        PaddingTop: =5.83
                        Size: =15.15
                        Text: |-
                            =With(
                                {
                                    varDefault: "Separator to separate column headers from work items list",
                                    varOOBTextId: "lblWorkItemsHeaderUnderline__Text"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        Width: =galWorkItems.Width
                        X: =lblProjectWorkItemsHeader.X
                        Y: =btnTitleSort.Y + btnTitleSort.Height
                        ZIndex: =26

                grpAddWorkItem As group:
                    Height: =5
                    Width: =5
                    X: =20
                    Y: =-358
                    ZIndex: =37

                    imgAddWorkItem As image:
                        AccessibleLabel: |-
                            =With(
                                {
                                    varDefault: "Click to add a work item",
                                    varOOBTextId: "imgAddWorkItem__locAccessibleText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        DisabledFill: |-
                            =With(
                                {
                                    varImageIsCategory: LookUp(
                                        staticIcons,
                                        staticIconName = "Add"
                                    ).staticIconIsCategory
                                },
                                If(
                                    varImageIsCategory,
                                    gblAppStyles.Icons.DisabledFill_Category,
                                    Transparent
                                )
                            )
                        DisplayMode: |-
                            =If(
                                locAddProject,
                                DisplayMode.Disabled,
                                DisplayMode.Edit
                            )
                        Fill: |-
                            =With(
                                {
                                    varImageIsCategory: LookUp(
                                        staticIcons,
                                        staticIconName = "Add"
                                    ).staticIconIsCategory
                                },
                                If(
                                    varImageIsCategory,
                                    gblAppStyles.Icons.Fill_Category,
                                    Transparent
                                )
                            )
                        Height: =22*1
                        Image: |
                            =With(
                                {
                                    varImageRecord: LookUp(
                                        staticIcons,
                                        staticIconName = "Add"
                                    ),
                                    varColor: If(
                                        Self.DisplayMode = DisplayMode.Disabled,
                                        gblAppStyles.Icons.DisabledColor,
                                        gblAppStyles.Icons.Color
                                    )
                                },
                                With(
                                    {
                                        varImageData: Concatenate(
                                            "data:image/svg+xml;utf8, ",
                                            EncodeUrl(
                                                Concatenate(
                                                    "<svg viewBox='",
                                                    varImageRecord.staticIconViewbox,
                                                    "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                    varImageRecord.staticIconPath,
                                                    "' fill='#",
                                                    varColor,
                                                    "'/></svg>"
                                                )
                                            )
                                        )
                                    },
                                    varImageData
                                )
                            )
                        OnSelect: |-
                            =UpdateContext({locAddWorkItem: true});
                            Reset(txtAddWorkItemName);
                            Reset(cmbAddWorkItemTeamMember);
                            Reset(cmbAddWorkItemMilestone);
                            Reset(cmbAddWorkItemStatus);
                            Reset(cmbAddWorkItemCategory);
                            Reset(cmbAddWorkItemPriority);
                            Reset(txtAddWorkItemDesc);
                            Reset(datAddWorkItemTargetDate);
                            //set focus start
                            UpdateContext({locSetFocusTimerStart: false});
                            UpdateContext({locSetFocusControlTarget: "imgCloseAddWorkItem"});
                            UpdateContext({locSetFocusTimerStart: true});
                            //set focus end
                            //screen reader start
                            UpdateContext(
                                {
                                    locScreenReaderAnnouncedText: With(
                                        {
                                            varAnnouncedText: With(
                                                {
                                                    varDefault: "Opening a dialog to add a new work item",
                                                    varOOBTextId: "btnNewWorkItem_Announcement"
                                                },
                                                With(
                                                    {
                                                        varLocalizedText: LookUp(
                                                            colLocalization,
                                                            OOBTextID = varOOBTextId,
                                                            LocalizedText
                                                        )
                                                    },
                                                    Coalesce(
                                                        varLocalizedText,
                                                        varDefault
                                                    )
                                                )
                                            )
                                        },
                                        If(
                                            locScreenReaderAnnouncedText = varAnnouncedText,
                                            Concatenate(
                                                varAnnouncedText,
                                                " "
                                            ),
                                            varAnnouncedText
                                        )
                                    )
                                }
                            );
                            //screen reader end
                            Navigate(
                                'Add/Edit Work Item',
                                ScreenTransition.Fade,
                                {locAddWorkItem: locAddWorkItem}
                            )
                        PaddingBottom: =2
                        PaddingLeft: =2
                        PaddingRight: =2
                        PaddingTop: =2
                        RadiusBottomLeft: =5
                        RadiusBottomRight: =5
                        RadiusTopLeft: =5
                        RadiusTopRight: =5
                        TabIndex: |-
                            =If(
                                true,
                                -1,
                                0
                            )
                        Tooltip: =Self.AccessibleLabel
                        Width: =22*1
                        X: =lblProjectWorkItemsHeader.X + lblProjectWorkItemsHeader.Width + 10
                        Y: =btnNewWorkItem.Y + (btnNewWorkItem.Height - Self.Height) / 2
                        ZIndex: =23

                    btnNewWorkItem As button:
                        Align: =Align.Left
                        BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
                        BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
                        Color: =gblAppStyles.ButtonTransparent.Color
                        DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                        DisabledColor: =gblAppStyles.ButtonTransparent.DisabledColor
                        DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
                        DisplayMode: |-
                            =If(
                                locAddProject,
                                DisplayMode.Disabled,
                                DisplayMode.Edit
                            )
                        Fill: =gblAppStyles.ButtonTransparent.Fill
                        FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
                        FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
                        Font: =Font.'Segoe UI'
                        FontWeight: =FontWeight.Normal
                        Height: =32*1
                        HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
                        HoverColor: =gblAppStyles.ButtonTransparent.HoverColor
                        HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
                        OnSelect: |-
                            =UpdateContext(
                                {
                                    locAddWorkItem: true,
                                    locEditWorkItem: false
                                }
                            );
                            Reset(txtAddWorkItemName);
                            Reset(cmbAddWorkItemTeamMember);
                            Reset(cmbAddWorkItemMilestone);
                            Reset(cmbAddWorkItemStatus);
                            Reset(cmbAddWorkItemCategory);
                            Reset(cmbAddWorkItemPriority);
                            Reset(txtAddWorkItemDesc);
                            Reset(datAddWorkItemTargetDate);
                            //set focus start
                            UpdateContext({locSetFocusTimerStart: false});
                            UpdateContext({locSetFocusControlTarget: "imgCloseAddWorkItem"});
                            UpdateContext({locSetFocusTimerStart: true});
                            //set focus end
                            //screen reader start
                            UpdateContext(
                                {
                                    locScreenReaderAnnouncedText: With(
                                        {
                                            varAnnouncedText: With(
                                                {
                                                    varDefault: "Opening a dialog to add a new work item",
                                                    varOOBTextId: "btnNewWorkItem_Announcement"
                                                },
                                                With(
                                                    {
                                                        varLocalizedText: LookUp(
                                                            colLocalization,
                                                            OOBTextID = varOOBTextId,
                                                            LocalizedText
                                                        )
                                                    },
                                                    Coalesce(
                                                        varLocalizedText,
                                                        varDefault
                                                    )
                                                )
                                            )
                                        },
                                        If(
                                            locScreenReaderAnnouncedText = varAnnouncedText,
                                            Concatenate(
                                                varAnnouncedText,
                                                " "
                                            ),
                                            varAnnouncedText
                                        )
                                    )
                                }
                            );
                            //screen reader end
                            Navigate(
                                'Add/Edit Work Item',
                                ScreenTransition.Fade,
                                {
                                    locAddWorkItem: locAddWorkItem,
                                    locEditWorkItem: false,
                                    locAddProject: false,
                                    locExpandProjectList: locExpandProjectList,
                                    locProjectSortOrder: locProjectSortOrder,
                                    locSortWorkItemBy: locSortWorkItemBy,
                                    locShowSearchWorkItem: locShowSearchWorkItem,
                                    locProjectStatusSelection: locProjectStatusSelection,
                                    locWorkItemSortOrder: locWorkItemSortOrder
                                }
                            )
                        PaddingBottom: =0
                        PaddingLeft: =32
                        PaddingRight: =0.00
                        PaddingTop: =0.00
                        PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
                        PressedColor: =gblAppStyles.ButtonTransparent.PressedColor
                        PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
                        RadiusBottomLeft: =gblAppStyles.ButtonTransparent.RadiusBottomLeft
                        RadiusBottomRight: =gblAppStyles.ButtonTransparent.RadiusBottomRight
                        RadiusTopLeft: =gblAppStyles.ButtonTransparent.RadiusTopLeft
                        RadiusTopRight: =gblAppStyles.ButtonTransparent.RadiusTopRight
                        Size: =gblAppStyles.ButtonTransparent.Size
                        TabIndex: |-
                            =If(
                                locAddProject || locAddWorkItem || locFilterWorkItems || locEditWorkItem || locShowProjectStatusOptions || locVisibleCoverSelection || locShowFirstRun || locShowPowerAppsPrompt,
                                -1,
                                0
                            )
                        Text: |-
                            =Switch('Projects Screen'.Size, ScreenSize.ExtraLarge, 
                            With(
                                {
                                    varDefault: "New work item",
                                    varOOBTextId: "btnNewWorkItem__locText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            ),
                            ScreenSize.Large, 
                            With(
                                {
                                    varDefault: "New work item",
                                    varOOBTextId: "btnNewWorkItem__locText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            ), "New")
                        Tooltip: |-
                            =With(
                                {
                                    varDefault: "Click to add a work item",
                                    varOOBTextId: "btnAddWorkItem__locTooltip"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        Visible: |-
                            =Switch(
                                'Projects Screen'.Size,
                                ScreenSize.ExtraLarge,
                                true,
                                ScreenSize.Large,
                                true,
                                false
                            )
                        Width: |-
                            =Switch(
                                gblUserLanguage,
                                "ja-JP",
                                150 * 1,
                                "fr-FR",
                                175 * 1,
                                Sum(
                                    AddColumns(
                                        Split(
                                            Self.Text,
                                            ""
                                        ),
                                        "Size",
                                        LookUp(
                                            colCharsWidth,
                                            CharFont = Self.Font && CharWeight = Self.FontWeight && Char = Result
                                        ).Size
                                    ),
                                    Size
                                ) * Self.Size + Self.PaddingLeft + Self.PaddingRight + 2
                            )
                        X: =lblProjectWorkItemsHeader.X + lblProjectWorkItemsHeader.Width + 10
                        Y: =lblProjectWorkItemsHeader.Y + (lblProjectWorkItemsHeader.Height - Self.Height) / 2
                        ZIndex: =27

                grpWorkItemsActions As group:
                    Height: =5
                    Width: =5
                    X: =20
                    Y: =-358
                    ZIndex: =40

                    txtFindWorkItems As text:
                        AccessibleLabel: =Self.HintText
                        BorderColor: =gblAppStyles.TextInput.BorderColor
                        BorderThickness: =gblAppStyles.TextInput.BorderThickness
                        Color: =gblAppStyles.TextInput.Color
                        Default: =""
                        DisabledBorderColor: =gblAppStyles.TextInput.DisabledBorderColor
                        DisabledColor: =gblAppStyles.TextInput.DisabledColor
                        DisabledFill: =gblAppStyles.TextInput.DisabledFill
                        DisplayMode: |-
                            =If(
                                locAddProject,
                                DisplayMode.Disabled,
                                DisplayMode.Edit
                            )
                        Fill: =gblAppStyles.TextInput.Fill
                        FocusedBorderColor: =gblAppStyles.TextInput.FocusedBorderColor
                        FocusedBorderThickness: =gblAppStyles.TextInput.FocusedBorderThickness
                        Font: =Font.'Segoe UI'
                        Height: =32
                        HintText: |-
                            =Switch(
                                'Projects Screen'.Size,
                                ScreenSize.ExtraLarge,
                                With(
                                    {
                                        varDefault: "Find work items",
                                        varOOBTextId: "txtFindWorkItems1__locHintText"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                ),
                                ScreenSize.Large,
                                With(
                                    {
                                        varDefault: "Find work items",
                                        varOOBTextId: "txtFindWorkItems1__locHintText"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                ),
                                With(
                                    {
                                        varDefault: "Find",
                                        varOOBTextId: "txtFindWorkItems2__locHintText"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            )
                        HoverBorderColor: =gblAppStyles.TextInput.HoverBorderColor
                        HoverColor: =gblAppStyles.TextInput.HoverColor
                        HoverFill: =gblAppStyles.TextInput.HoverFill
                        OnChange: |-
                            =//set focus start
                            UpdateContext({locSetFocusTimerStart: false});
                            UpdateContext({locSetFocusControlTarget: "btnTitleSort"});
                            UpdateContext({locSetFocusTimerStart: true});
                            //set focus end
                        PaddingTop: =5.00
                        PressedBorderColor: =gblAppStyles.TextInput.PressedBorderColor
                        PressedColor: =gblAppStyles.TextInput.PressedColor
                        PressedFill: =gblAppStyles.TextInput.PressedFill
                        RadiusBottomLeft: =gblAppStyles.TextInput.RadiusBottomLeft
                        RadiusBottomRight: =gblAppStyles.TextInput.RadiusBottomRight
                        RadiusTopLeft: =gblAppStyles.TextInput.RadiusTopLeft
                        RadiusTopRight: =gblAppStyles.TextInput.RadiusTopRight
                        Size: =gblAppStyles.TextInput.Size
                        TabIndex: |-
                            =If(
                                (locAddProject || locAddWorkItem || locFilterWorkItems || locEditWorkItem || locShowProjectStatusOptions || locVisibleCoverSelection || locShowFirstRun || locShowPowerAppsPrompt),
                                -1,
                                If(
                                    Self.Visible,
                                    0,
                                    -1
                                )
                            )
                        Tooltip: =Self.AccessibleLabel
                        Visible: =locShowSearchWorkItem
                        Width: =Parent.Width / 4
                        X: =imgSearchWorkItems.X + imgSearchWorkItems.Width - Self.Width + 5
                        Y: =imgCloseSearchWorkItems.Y - (Self.Height-imgCloseSearchWorkItems.Height)/2
                        ZIndex: =24

                    imgSearchWorkItems As image:
                        AccessibleLabel: |-
                            =With(
                                {
                                    varDefault: "Click to search work items",
                                    varOOBTextId: "imgSearchWorkItems__locAccessibleText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        DisabledFill: |-
                            =With(
                                {
                                    varImageIsCategory: LookUp(
                                        staticIcons,
                                        staticIconName = "Search"
                                    ).staticIconIsCategory
                                },
                                If(
                                    varImageIsCategory,
                                    gblAppStyles.Icons.DisabledFill_Category,
                                    Transparent
                                )
                            )
                        DisplayMode: |-
                            =If(
                                locAddProject,
                                DisplayMode.Disabled,
                                DisplayMode.Edit
                            )
                        Fill: |-
                            =With(
                                {
                                    varImageIsCategory: LookUp(
                                        staticIcons,
                                        staticIconName = "Search"
                                    ).staticIconIsCategory
                                },
                                If(
                                    varImageIsCategory,
                                    gblAppStyles.Icons.Fill_Category,
                                    Transparent
                                )
                            )
                        Height: =22*1
                        Image: |-
                            =With(
                                {
                                    varImageRecord: LookUp(
                                        staticIcons,
                                        staticIconName = "Search"
                                    ),
                                    varColor: If(
                                        Self.DisplayMode = DisplayMode.Disabled,
                                        gblAppStyles.Icons.DisabledColor,
                                        gblAppStyles.Icons.Color
                                    )
                                },
                                With(
                                    {
                                        varImageData: Concatenate(
                                            "data:image/svg+xml;utf8, ",
                                            EncodeUrl(
                                                Concatenate(
                                                    "<svg viewBox='",
                                                    varImageRecord.staticIconViewbox,
                                                    "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                    varImageRecord.staticIconPath,
                                                    "' fill='#",
                                                    varColor,
                                                    "'/></svg>"
                                                )
                                            )
                                        )
                                    },
                                    varImageData
                                )
                            )
                        OnSelect: |-
                            =UpdateContext({locShowSearchWorkItem: true});
                            //set focus start
                            UpdateContext({locSetFocusTimerStart: false});
                            UpdateContext({locSetFocusControlTarget: "txtFindWorkItems"});
                            UpdateContext({locSetFocusTimerStart: true});
                            //set focus end
                        PaddingBottom: =2
                        PaddingLeft: =2
                        PaddingRight: =2
                        PaddingTop: =2
                        RadiusBottomLeft: =5
                        RadiusBottomRight: =5
                        RadiusTopLeft: =5
                        RadiusTopRight: =5
                        TabIndex: |-
                            =If(
                                locAddProject || locAddWorkItem || locFilterWorkItems || locEditWorkItem || locShowProjectStatusOptions || locVisibleCoverSelection || locShowFirstRun || locShowPowerAppsPrompt,
                                -1,
                                0
                            )
                        Tooltip: =Self.AccessibleLabel
                        Visible: =!locShowSearchWorkItem
                        Width: =22*1
                        X: =imgFilterWorkItems.X - Self.Width - 20
                        Y: =imgDeleteWorkItems.Y
                        ZIndex: =25

                    imgFilterWorkItems As image:
                        AccessibleLabel: |-
                            =With(
                                {
                                    varDefault: "Click to filter work items",
                                    varOOBTextId: "imgFilterWorkItems__locAccessibleText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        DisabledFill: |-
                            =With(
                                {
                                    varImageIsCategory: LookUp(
                                        staticIcons,
                                        staticIconName = "Filter"
                                    ).staticIconIsCategory
                                },
                                If(
                                    varImageIsCategory,
                                    gblAppStyles.Icons.DisabledFill_Category,
                                    Transparent
                                )
                            )
                        DisplayMode: |-
                            =If(
                                locAddProject,
                                DisplayMode.Disabled,
                                DisplayMode.Edit
                            )
                        Fill: |-
                            =With(
                                {
                                    varImageIsCategory: LookUp(
                                        staticIcons,
                                        staticIconName = "Filter"
                                    ).staticIconIsCategory
                                },
                                If(
                                    varImageIsCategory,
                                    gblAppStyles.Icons.Fill_Category,
                                    Transparent
                                )
                            )
                        Height: =22*1
                        Image: |-
                            =With(
                                {
                                    varImageRecord: LookUp(
                                        staticIcons,
                                        staticIconName = "Filter"
                                    ),
                                    varColor: If(
                                        Self.DisplayMode = DisplayMode.Disabled,
                                        gblAppStyles.Icons.DisabledColor,
                                        gblAppStyles.Icons.Color
                                    )
                                },
                                With(
                                    {
                                        varImageData: Concatenate(
                                            "data:image/svg+xml;utf8, ",
                                            EncodeUrl(
                                                Concatenate(
                                                    "<svg viewBox='",
                                                    varImageRecord.staticIconViewbox,
                                                    "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                    varImageRecord.staticIconPath,
                                                    "' fill='#",
                                                    varColor,
                                                    "'/></svg>"
                                                )
                                            )
                                        )
                                    },
                                    varImageData
                                )
                            )
                        OnSelect: |-
                            =UpdateContext(
                                {
                                    locFilterWorkItems: true,
                                    locApplyFilter: false
                                }
                            );
                            //set focus start
                            UpdateContext({locSetFocusTimerStart: false});
                            UpdateContext({locSetFocusControlTarget: "imgCloseFilter"});
                            UpdateContext({locSetFocusTimerStart: true});
                            //set focus end
                            //screen reader start
                            UpdateContext(
                                {
                                    locScreenReaderAnnouncedText: With(
                                        {
                                            varAnnouncedText: With(
                                                {
                                                    varDefault: "Opening a dialog to filter work items",
                                                    varOOBTextId: "imgFilterWorkItems_Announcement"
                                                },
                                                With(
                                                    {
                                                        varLocalizedText: LookUp(
                                                            colLocalization,
                                                            OOBTextID = varOOBTextId,
                                                            LocalizedText
                                                        )
                                                    },
                                                    Coalesce(
                                                        varLocalizedText,
                                                        varDefault
                                                    )
                                                )
                                            )
                                        },
                                        If(
                                            locScreenReaderAnnouncedText = varAnnouncedText,
                                            Concatenate(
                                                varAnnouncedText,
                                                " "
                                            ),
                                            varAnnouncedText
                                        )
                                    )
                                }
                            );
                            //screen reader end
                        PaddingBottom: =2
                        PaddingLeft: =2
                        PaddingRight: =2
                        PaddingTop: =2
                        RadiusBottomLeft: =5
                        RadiusBottomRight: =5
                        RadiusTopLeft: =5
                        RadiusTopRight: =5
                        TabIndex: |-
                            =If(
                                locAddProject || locAddWorkItem || locFilterWorkItems || locEditWorkItem || locShowProjectStatusOptions || locVisibleCoverSelection || locShowFirstRun || locShowPowerAppsPrompt,
                                -1,
                                0
                            )
                        Tooltip: =Self.AccessibleLabel
                        Width: =22*1
                        X: =imgDeleteWorkItems.X - Self.Width - 20
                        Y: =imgDeleteWorkItems.Y
                        ZIndex: =28

                    imgDeleteWorkItems As image:
                        AccessibleLabel: |-
                            =With(
                                {
                                    varDefault: "Click to delete work items",
                                    varOOBTextId: "imgDeleteWorkItems__locAccessibleText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        DisabledFill: |-
                            =With(
                                {
                                    varImageIsCategory: LookUp(
                                        staticIcons,
                                        staticIconName = "Delete"
                                    ).staticIconIsCategory
                                },
                                If(
                                    varImageIsCategory,
                                    gblAppStyles.Icons.DisabledFill_Category,
                                    Transparent
                                )
                            )
                        DisplayMode: |-
                            =If(
                                !chkSelectAllWorkItems.Value && (chkSelectAllWorkItems.Value || (CountRows(galWorkItems.AllItems) = 0 || (CountRows(galWorkItems.AllItems) > 0 && (CountRows(
                                    Filter(
                                        galWorkItems.AllItems,
                                        chkSelectWorkItem.Value
                                    )
                                ) = 0)))),
                                DisplayMode.Disabled,
                                DisplayMode.Edit
                            )
                        Fill: |-
                            =With(
                                {
                                    varImageIsCategory: LookUp(
                                        staticIcons,
                                        staticIconName = "Delete"
                                    ).staticIconIsCategory
                                },
                                If(
                                    varImageIsCategory,
                                    gblAppStyles.Icons.Fill_Category,
                                    Transparent
                                )
                            )
                        Height: =22*1
                        Image: |-
                            =With(
                                {
                                    varImageRecord: LookUp(
                                        staticIcons,
                                        staticIconName = "Delete"
                                    ),
                                    varColor: If(
                                        Self.DisplayMode = DisplayMode.Disabled,
                                        gblAppStyles.Icons.DisabledColor,
                                        gblAppStyles.Icons.Color_Red
                                    )
                                },
                                With(
                                    {
                                        varImageData: Concatenate(
                                            "data:image/svg+xml;utf8, ",
                                            EncodeUrl(
                                                Concatenate(
                                                    "<svg viewBox='",
                                                    varImageRecord.staticIconViewbox,
                                                    "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                    varImageRecord.staticIconPath,
                                                    "' fill='#",
                                                    varColor,
                                                    "'/></svg>"
                                                )
                                            )
                                        )
                                    },
                                    varImageData
                                )
                            )
                        OnSelect: |-
                            =Reset(chkConfirmDelete);
                            UpdateContext({locDeleteWorkItems: true});
                            //set focus start
                            UpdateContext({locSetFocusTimerStart: false});
                            UpdateContext({locSetFocusControlTarget: "imgCloseWarning"});
                            UpdateContext({locSetFocusTimerStart: true});
                            //set focus end
                            //screen reader start
                            UpdateContext(
                                {
                                    locScreenReaderAnnouncedText: With(
                                        {
                                            varAnnouncedText: With(
                                                {
                                                    varDefault: "Opening a dialog to confirm deletion of work items",
                                                    varOOBTextId: "imgDeleteWorkItems_Announcement"
                                                },
                                                With(
                                                    {
                                                        varLocalizedText: LookUp(
                                                            colLocalization,
                                                            OOBTextID = varOOBTextId,
                                                            LocalizedText
                                                        )
                                                    },
                                                    Coalesce(
                                                        varLocalizedText,
                                                        varDefault
                                                    )
                                                )
                                            )
                                        },
                                        If(
                                            locScreenReaderAnnouncedText = varAnnouncedText,
                                            Concatenate(
                                                varAnnouncedText,
                                                " "
                                            ),
                                            varAnnouncedText
                                        )
                                    ) & " " & lblWarningHeader.Text & " " & lblWarningMessage.Text
                                }
                            );
                            //screen reader end
                        PaddingBottom: =2
                        PaddingLeft: =2
                        PaddingRight: =2
                        PaddingTop: =2
                        RadiusBottomLeft: =5
                        RadiusBottomRight: =5
                        RadiusTopLeft: =5
                        RadiusTopRight: =5
                        TabIndex: |-
                            =If(
                                locAddProject || locAddWorkItem || locFilterWorkItems || locEditWorkItem || locShowProjectStatusOptions || locVisibleCoverSelection || locShowFirstRun || locShowPowerAppsPrompt,
                                -1,
                                0
                            )
                        Tooltip: =Self.AccessibleLabel
                        Width: =22*1
                        X: =galWorkItems.X + galWorkItems.Width - Self.Width
                        Y: =imgAddWorkItem.Y
                        ZIndex: =29

                    imgCloseSearchWorkItems As image:
                        AccessibleLabel: |-
                            =With(
                                {
                                    varDefault: "Click to close the search",
                                    varOOBTextId: "imgCloseSearchWorkItem__locAccessibleText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        DisabledFill: |-
                            =With(
                                {
                                    varImageIsCategory: LookUp(
                                        staticIcons,
                                        staticIconName = "Dismiss"
                                    ).staticIconIsCategory
                                },
                                If(
                                    varImageIsCategory,
                                    gblAppStyles.Icons.DisabledFill_Category,
                                    Transparent
                                )
                            )
                        DisplayMode: |-
                            =If(
                                locAddProject,
                                DisplayMode.Disabled,
                                DisplayMode.Edit
                            )
                        Fill: |-
                            =With(
                                {
                                    varImageIsCategory: LookUp(
                                        staticIcons,
                                        staticIconName = "Dismiss"
                                    ).staticIconIsCategory
                                },
                                If(
                                    varImageIsCategory,
                                    gblAppStyles.Icons.Fill_Category,
                                    Transparent
                                )
                            )
                        Height: =22*1
                        Image: |
                            =With(
                                {
                                    varImageRecord: LookUp(
                                        staticIcons,
                                        staticIconName = "Dismiss"
                                    ),
                                    varColor: If(
                                        Self.DisplayMode = DisplayMode.Disabled,
                                        gblAppStyles.Icons.DisabledColor,
                                        gblAppStyles.Icons.Color
                                    )
                                },
                                With(
                                    {
                                        varImageData: Concatenate(
                                            "data:image/svg+xml;utf8, ",
                                            EncodeUrl(
                                                Concatenate(
                                                    "<svg viewBox='",
                                                    varImageRecord.staticIconViewbox,
                                                    "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                    varImageRecord.staticIconPath,
                                                    "' fill='#",
                                                    varColor,
                                                    "'/></svg>"
                                                )
                                            )
                                        )
                                    },
                                    varImageData
                                )
                            )
                        ImageRotation: =
                        OnSelect: |-
                            =UpdateContext({locShowSearchWorkItem: false});
                            Reset(txtFindWorkItems);
                            //set focus start
                            UpdateContext({locSetFocusTimerStart: false});
                            UpdateContext({locSetFocusControlTarget: "imgSearchWorkItems"});
                            UpdateContext({locSetFocusTimerStart: true});
                            //set focus end
                            //screen reader start
                            UpdateContext(
                                {
                                    locScreenReaderAnnouncedText: With(
                                        {
                                            varAnnouncedText: With(
                                                {
                                                    varDefault: "Work item search box closed",
                                                    varOOBTextId: "imgCloseSearchWorkItems_Announcement"
                                                },
                                                With(
                                                    {
                                                        varLocalizedText: LookUp(
                                                            colLocalization,
                                                            OOBTextID = varOOBTextId,
                                                            LocalizedText
                                                        )
                                                    },
                                                    Coalesce(
                                                        varLocalizedText,
                                                        varDefault
                                                    )
                                                )
                                            )
                                        },
                                        If(
                                            locScreenReaderAnnouncedText = varAnnouncedText,
                                            Concatenate(
                                                varAnnouncedText,
                                                " "
                                            ),
                                            varAnnouncedText
                                        )
                                    )
                                }
                            );
                            //screen reader end
                        PaddingBottom: =2
                        PaddingLeft: =2
                        PaddingRight: =2
                        PaddingTop: =2
                        RadiusBottomLeft: =5
                        RadiusBottomRight: =5
                        RadiusTopLeft: =5
                        RadiusTopRight: =5
                        TabIndex: |-
                            =If(
                                (locAddProject || locAddWorkItem || locFilterWorkItems || locEditWorkItem || locShowProjectStatusOptions || locVisibleCoverSelection || locShowFirstRun || locShowPowerAppsPrompt),
                                -1,
                                If(
                                    Self.Visible,
                                    0,
                                    -1
                                )
                            )
                        Tooltip: =Self.AccessibleLabel
                        Visible: =locShowSearchWorkItem
                        Width: =22*1
                        X: =imgSearchWorkItems.X
                        Y: =imgSearchWorkItems.Y
                        ZIndex: =30

                grpProjectStatus As group:
                    Height: =5
                    Width: =5
                    X: =60
                    Y: =60
                    ZIndex: =50

                    "galMilestones As gallery.'BrowseLayout_Horizontal_TwoTextOneImageVariant_ver4.0'":
                        AccessibleLabel: |-
                            =With(
                                {
                                    varDefault: "List of milestones and their status",
                                    varOOBTextId: "galMilestones__locAccessibleText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        BorderColor: =Transparent
                        Default: ={}
                        Height: |-
                            =If(
                                RoundUp(
                                    galMilestones.Width / galMilestones.TemplateWidth,
                                    0
                                ) > CountRows(Self.AllItems),
                                1 * 169 / 2,
                                1 * 169
                            )
                        Items: |-
                            =Filter(
                                'Project Milestones',
                                Project.Project = gblProject.Project
                            )
                        OnSelect: |
                            =If(
                                ThisItem.'Project Milestone' = locSelectedMilestone.'Project Milestone',
                                UpdateContext({locMilestoneSummary: !locMilestoneSummary}),
                                UpdateContext({locMilestoneSummary: true})
                            );
                            UpdateContext({locSelectedMilestone: ThisItem});
                        Selectable: =false
                        ShowNavigation: =true
                        ShowScrollbar: =false
                        TabIndex: |-
                            =If(
                                true,
                                -1,
                                0
                            )
                        TemplatePadding: =0
                        TemplateSize: =250
                        Visible: =locProjectStatusSelection = "Milestone status" 
                        Width: =Parent.Width - Self.X - 20
                        WrapCount: |-
                            =If(
                                RoundUp(
                                    galMilestones.Width / galMilestones.TemplateWidth,
                                    0
                                ) > CountRows(Self.AllItems),
                                1,
                                2
                            )
                        X: =0*0
                        Y: =lblProjectTeamMembersHeader.Y + lblProjectTeamMembersHeader.Height + 10
                        ZIndex: =2

                        shpMilestonePercentCompletion As circle:
                            Fill: |-
                                =If(
                                    gblThemeDark,
                                    ColorValue("#141414"),
                                    gblThemeHiCo,
                                    Black,
                                    White
                                )
                            Height: =62
                            OnSelect: =Select(Parent)
                            Width: =62
                            X: =25
                            Y: =13
                            ZIndex: =1

                        lblMilestonePercentCompletion As label:
                            Align: =Align.Center
                            BorderColor: =gblAppStyles.Label.BorderColor
                            BorderThickness: =gblAppStyles.Label.BorderThickness
                            Color: =gblAppStyles.Label.Color
                            DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                            DisabledColor: =gblAppStyles.Label.DisabledColor
                            DisabledFill: =gblAppStyles.Label.DisabledFill
                            Fill: =Transparent
                            FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                            FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Semibold
                            Height: =62*1
                            HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                            HoverColor: =gblAppStyles.Label.HoverColor
                            PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                            PressedColor: =gblAppStyles.Label.PressedColor
                            Size: =gblAppStyles.Label.Size.Medium
                            Text: |-
                                =If(
                                    CountRows(
                                        Filter(
                                            colWorkItems,
                                            Project.Project = gblProject.Project,
                                            Milestone.'Project Milestone' = ThisItem.'Project Milestone'
                                        )
                                    ) = 0,
                                    "0%",
                                    With(
                                        {
                                            varCompletionStatus: First(
                                                Sort(
                                                    'Project Work Item Statuses',
                                                    Sequence,
                                                    Ascending
                                                )
                                            ).'Project Work Item Status'
                                        },
                                        With(
                                            {
                                                varPercent: RoundDown(
                                                    Abs(
                                                        CountRows(
                                                            Filter(
                                                                colWorkItems,
                                                                Project.Project = gblProject.Project,
                                                                Milestone.'Project Milestone' = ThisItem.'Project Milestone',
                                                                'Work Item Status'.'Project Work Item Status' = varCompletionStatus
                                                            )
                                                        ) / With(
                                                            {
                                                                varTotalWorkItemCount: CountRows(
                                                                    Filter(
                                                                        colWorkItems,
                                                                        Project.Project = gblProject.Project,
                                                                        Milestone.'Project Milestone' = ThisItem.'Project Milestone'
                                                                    )
                                                                )
                                                            },
                                                            If(
                                                                varTotalWorkItemCount = 0 || IsBlank(varTotalWorkItemCount),
                                                                1,
                                                                varTotalWorkItemCount
                                                            )
                                                        ) * 100 / 10
                                                    ),
                                                    1
                                                )
                                            },
                                            Switch(
                                                varPercent,
                                                9.5,
                                                95,
                                                9.6,
                                                95,
                                                9.7,
                                                95,
                                                9.8,
                                                95,
                                                9.9,
                                                99,
                                                RoundDown(
                                                    varPercent,
                                                    0
                                                ) * 10
                                            )
                                        ) & "%"
                                    )
                                )
                            Tooltip: =Self.Text
                            Width: =62*1
                            Wrap: =false
                            X: =25*1
                            Y: =13*1
                            ZIndex: =2

                        lblMilestoneName As label:
                            BorderColor: =gblAppStyles.Label.BorderColor
                            BorderThickness: =gblAppStyles.Label.BorderThickness
                            Color: =gblAppStyles.Label.Color
                            DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                            DisabledColor: =gblAppStyles.Label.DisabledColor
                            DisabledFill: =gblAppStyles.Label.DisabledFill
                            Fill: =gblAppStyles.Label.Fill
                            FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                            FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Semibold
                            Height: =35*1
                            HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                            HoverColor: =gblAppStyles.Label.HoverColor
                            HoverFill: =gblAppStyles.Label.HoverFill
                            PaddingLeft: =0
                            PaddingTop: =0
                            PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                            PressedColor: =gblAppStyles.Label.PressedColor
                            PressedFill: =gblAppStyles.Label.PressedFill
                            Size: =gblAppStyles.Label.Size.Medium
                            Text: |-
                                =ThisItem.Name & " - " & Text(
                                    ThisItem.'Milestone Date',
                                    "[$-en-US]dd mmm",
                                    gblUserLanguage
                                )
                            Tooltip: =Self.Text
                            VerticalAlign: =VerticalAlign.Top
                            Width: =Parent.TemplateWidth - Self.X - 20
                            Wrap: =false
                            X: =lblMilestonePercentCompletion.X + lblMilestonePercentCompletion.Width + 10
                            Y: =13*1
                            ZIndex: =3

                        lblMilestoneBlockedWorkItemsCount As label:
                            Align: =Align.Center
                            BorderColor: =gblAppStyles.Label.BorderColor
                            BorderThickness: =gblAppStyles.Label.BorderThickness
                            Color: =gblAppStyles.Label.Color
                            DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                            DisabledColor: =gblAppStyles.Label.DisabledColor
                            DisabledFill: =gblAppStyles.Label.DisabledFill
                            Fill: |-
                                =With(
                                    {
                                        varStatus: Last(
                                            FirstN(
                                                colWorkItemStatuses,
                                                1
                                            )
                                        )
                                    },
                                    Coalesce(
                                        If(
                                            gblThemeDark,
                                            ColorValue(varStatus.'Color Dark'),
                                            ColorValue(varStatus.Color)
                                        ),
                                        ColorValue("#E0E0E0")
                                    )
                                )
                            FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                            FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Semibold
                            Height: =26*1
                            HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                            HoverColor: =gblAppStyles.Label.HoverColor
                            PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                            PressedColor: =gblAppStyles.Label.PressedColor
                            Size: =gblAppStyles.Label.Size.Medium
                            Text: |-
                                =With(
                                    {
                                        varStatus: Last(
                                            FirstN(
                                                colWorkItemStatuses,
                                                1
                                            )
                                        ).'Project Work Item Status'
                                    },
                                    CountRows(
                                        Filter(
                                            colWorkItems,
                                            Project.Project = gblProject.Project,
                                            Milestone.'Project Milestone' = ThisItem.'Project Milestone',
                                            'Work Item Status'.'Project Work Item Status' = varStatus
                                        )
                                    )
                                )
                            Tooltip: =Self.Text
                            Width: =26*1
                            Wrap: =false
                            X: =lblMilestonePercentCompletion.X+lblMilestonePercentCompletion.Width+10
                            Y: =49*1
                            ZIndex: =4

                        lblMilestoneInProgressWorkItemsCount As label:
                            Align: =Align.Center
                            BorderColor: =gblAppStyles.Label.BorderColor
                            BorderThickness: =gblAppStyles.Label.BorderThickness
                            Color: =gblAppStyles.Label.Color
                            DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                            DisabledColor: =gblAppStyles.Label.DisabledColor
                            DisabledFill: =gblAppStyles.Label.DisabledFill
                            Fill: |-
                                =With(
                                    {
                                        varStatus: Last(
                                            FirstN(
                                                colWorkItemStatuses,
                                                2
                                            )
                                        )
                                    },
                                    Coalesce(
                                        If(
                                            gblThemeDark,
                                            ColorValue(varStatus.'Color Dark'),
                                            ColorValue(varStatus.Color)
                                        ),
                                        ColorValue("#E0E0E0")
                                    )
                                )
                            FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                            FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Semibold
                            Height: =26*1
                            HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                            HoverColor: =gblAppStyles.Label.HoverColor
                            PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                            PressedColor: =gblAppStyles.Label.PressedColor
                            Size: =gblAppStyles.Label.Size.Medium
                            Text: |-
                                =With(
                                    {
                                        varStatus: Last(
                                            FirstN(
                                                colWorkItemStatuses,
                                                2
                                            )
                                        ).'Project Work Item Status'
                                    },
                                    CountRows(
                                        Filter(
                                            colWorkItems,
                                            Project.Project = gblProject.Project,
                                            Milestone.'Project Milestone' = ThisItem.'Project Milestone',
                                            'Work Item Status'.'Project Work Item Status' = varStatus
                                        )
                                    )
                                )
                            Tooltip: =Self.Text
                            Width: =26*1
                            Wrap: =false
                            X: =lblMilestoneBlockedWorkItemsCount.X + lblMilestoneBlockedWorkItemsCount.Width + 10
                            Y: =49*1
                            ZIndex: =5

                        lblMilestoneNewWorkItemsCount As label:
                            Align: =Align.Center
                            BorderColor: =gblAppStyles.Label.BorderColor
                            BorderThickness: =gblAppStyles.Label.BorderThickness
                            Color: =gblAppStyles.Label.Color
                            DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                            DisabledColor: =gblAppStyles.Label.DisabledColor
                            DisabledFill: =gblAppStyles.Label.DisabledFill
                            Fill: |-
                                =With(
                                    {
                                        varStatus: Last(
                                            FirstN(
                                                colWorkItemStatuses,
                                                3
                                            )
                                        )
                                    },
                                    Coalesce(
                                        If(
                                            gblThemeDark,
                                            ColorValue(varStatus.'Color Dark'),
                                            ColorValue(varStatus.Color)
                                        ),
                                        ColorValue("#E0E0E0")
                                    )
                                )
                            FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                            FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Semibold
                            Height: =26*1
                            HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                            HoverColor: =gblAppStyles.Label.HoverColor
                            PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                            PressedColor: =gblAppStyles.Label.PressedColor
                            Size: =gblAppStyles.Label.Size.Medium
                            Text: |-
                                =With(
                                    {
                                        varStatus: Last(
                                            FirstN(
                                                colWorkItemStatuses,
                                                3
                                            )
                                        ).'Project Work Item Status'
                                    },
                                    CountRows(
                                        Filter(
                                            colWorkItems,
                                            Project.Project = gblProject.Project,
                                            Milestone.'Project Milestone' = ThisItem.'Project Milestone',
                                            'Work Item Status'.'Project Work Item Status' = varStatus
                                        )
                                    )
                                )
                            Tooltip: =Self.Text
                            Width: =26*1
                            Wrap: =false
                            X: =lblMilestoneInProgressWorkItemsCount.X + lblMilestoneInProgressWorkItemsCount.Width + 10
                            Y: =49*1
                            ZIndex: =6

                        lblMilestoneDoneWorkItemsCount As label:
                            Align: =Align.Center
                            BorderColor: =gblAppStyles.Label.BorderColor
                            BorderThickness: =gblAppStyles.Label.BorderThickness
                            Color: =gblAppStyles.Label.Color
                            DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                            DisabledColor: =gblAppStyles.Label.DisabledColor
                            DisabledFill: =gblAppStyles.Label.DisabledFill
                            Fill: |-
                                =With(
                                    {
                                        varStatus: Last(
                                            FirstN(
                                                colWorkItemStatuses,
                                                CountRows(colWorkItemStatuses)
                                            )
                                        )
                                    },
                                    Coalesce(
                                        If(
                                            gblThemeDark,
                                            ColorValue(varStatus.'Color Dark'),
                                            ColorValue(varStatus.Color)
                                        ),
                                        ColorValue("#E0E0E0")
                                    )
                                )
                            FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                            FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Semibold
                            Height: =26*1
                            HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                            HoverColor: =gblAppStyles.Label.HoverColor
                            PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                            PressedColor: =gblAppStyles.Label.PressedColor
                            Size: =gblAppStyles.Label.Size.Medium
                            Text: |-
                                =With(
                                    {
                                        varStatus: Last(
                                            FirstN(
                                                colWorkItemStatuses,
                                                CountRows(colWorkItemStatuses)
                                            )
                                        ).'Project Work Item Status'
                                    },
                                    CountRows(
                                        Filter(
                                            colWorkItems,
                                            Project.Project = gblProject.Project,
                                            Milestone.'Project Milestone' = ThisItem.'Project Milestone',
                                            'Work Item Status'.'Project Work Item Status' = varStatus
                                        )
                                    )
                                )
                            Tooltip: =Self.Text
                            Width: =26*1
                            Wrap: =false
                            X: =lblMilestoneNewWorkItemsCount.X + lblMilestoneNewWorkItemsCount.Width + 10
                            Y: =49*1
                            ZIndex: =7

                        imgMilestonePercentCompletion As image:
                            Height: =62
                            Image: |-
                                =Switch(
                                    With(
                                        {
                                            varCompletionStatus: First(
                                                Sort(
                                                    'Project Work Item Statuses',
                                                    Sequence,
                                                    Ascending
                                                )
                                            ).'Project Work Item Status'
                                        },
                                        With(
                                            {
                                                varPercent: RoundDown(
                                                    Abs(
                                                        CountRows(
                                                            Filter(
                                                                colWorkItems,
                                                                Project.Project = gblProject.Project,
                                                                Milestone.'Project Milestone' = ThisItem.'Project Milestone',
                                                                'Work Item Status'.'Project Work Item Status' = varCompletionStatus
                                                            )
                                                        ) / With(
                                                            {
                                                                varTotalWorkItemCount: CountRows(
                                                                    Filter(
                                                                        colWorkItems,
                                                                        Project.Project = gblProject.Project,
                                                                        Milestone.'Project Milestone' = ThisItem.'Project Milestone'
                                                                    )
                                                                )
                                                            },
                                                            If(
                                                                varTotalWorkItemCount = 0 || IsBlank(varTotalWorkItemCount),
                                                                1,
                                                                varTotalWorkItemCount
                                                            )
                                                        ) * 100 / 10
                                                    ),
                                                    1
                                                )
                                            },
                                            Switch(
                                                varPercent,
                                                9.5,
                                                95,
                                                9.6,
                                                95,
                                                9.7,
                                                95,
                                                9.8,
                                                95,
                                                9.9,
                                                99,
                                                RoundDown(
                                                    varPercent,
                                                    0
                                                ) * 10
                                            )
                                        )
                                    ),
                                    0,
                                    Progress0,
                                    10,
                                    Progress10,
                                    20,
                                    Progress20,
                                    30,
                                    Progress30,
                                    40,
                                    Progress40,
                                    50,
                                    Progress50,
                                    60,
                                    Progress60,
                                    70,
                                    Progress70,
                                    80,
                                    Progress80,
                                    90,
                                    Progress90,
                                    95,
                                    Progress95,
                                    99,
                                    Progress99,
                                    100,
                                    Progress100,
                                    Progress0
                                )
                            OnSelect: =Select(Parent)
                            Width: =62
                            X: =shpMilestonePercentCompletion.X + (shpMilestonePercentCompletion.Width - Self.Width) / 2
                            Y: =shpMilestonePercentCompletion.Y
                            ZIndex: =8

                    galTeamMembers As gallery.galleryHorizontal:
                        AccessibleLabel: |-
                            =With(
                                {
                                    varDefault: "List of project team members and their status",
                                    varOOBTextId: "galTeamMembers__locAccessibleText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        BorderColor: =Transparent
                        Height: |-
                            =If(
                                RoundUp(
                                    galTeamMembers.Width / galTeamMembers.TemplateWidth,
                                    0
                                ) > CountRows(Self.AllItems),
                                1*169/2,
                                1*169
                            )
                        Items: |-
                            =Filter(
                                'Project Team Members',
                                Project.Project = gblProject.Project
                            )
                        Selectable: =false
                        ShowNavigation: =true
                        ShowScrollbar: =false
                        TabIndex: |-
                            =If(
                                true,
                                -1,
                                0
                            )
                        TemplatePadding: =0
                        TemplateSize: =300
                        Visible: =locProjectStatusSelection = "Team status"
                        Width: =Parent.Width - Self.X - 20
                        WrapCount: |-
                            =If(
                                RoundUp(
                                    galTeamMembers.Width / galTeamMembers.TemplateWidth,
                                    0
                                ) > CountRows(Self.AllItems),
                                1,
                                2
                            )
                        X: =0*0
                        Y: =lblProjectTeamMembersHeader.Y + lblProjectTeamMembersHeader.Height + 10
                        ZIndex: =3

                        shpTeamMembersDefault As circle:
                            Fill: |-
                                =If(
                                    gblThemeDark,
                                    ColorValue("#141414"),
                                    gblThemeHiCo,
                                    Black,
                                    White
                                )
                            Height: =imgTeamMembersDefault.Height
                            OnSelect: =Select(Parent)
                            Width: =imgTeamMembersDefault.Width
                            X: =imgTeamMembersDefault.X
                            Y: =imgTeamMembersDefault.Y
                            ZIndex: =1

                        imgTeamMembersDefault As image:
                            AccessibleLabel: |-
                                =With(
                                    {
                                        varDefault: "Team member photo",
                                        varOOBTextId: "imgTeamMembers__locAccessibleText"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            BorderColor: =gblAppStyles.ButtonPrimary.BorderColor
                            Height: =50*1
                            Image: |-
                                =With(
                                    {
                                        varImageRecord: LookUp(
                                            staticIcons,
                                            staticIconName = "Person"
                                        ),
                                        varColor: If(
                                            Self.DisplayMode = DisplayMode.Disabled,
                                            gblAppStyles.Icons.DisabledColor,
                                            gblAppStyles.Icons.Color
                                        )
                                    },
                                    With(
                                        {
                                            varImageData: Concatenate(
                                                "data:image/svg+xml;utf8, ",
                                                EncodeUrl(
                                                    Concatenate(
                                                        "<svg viewBox='",
                                                        varImageRecord.staticIconViewbox,
                                                        "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                        varImageRecord.staticIconPath,
                                                        "' fill='#",
                                                        varColor,
                                                        "'/></svg>"
                                                    )
                                                )
                                            )
                                        },
                                        varImageData
                                    )
                                )
                            OnSelect: =Select(Parent)
                            PaddingBottom: =8
                            PaddingLeft: =8
                            PaddingRight: =8
                            PaddingTop: =8
                            RadiusBottomLeft: =50
                            RadiusBottomRight: =50
                            RadiusTopLeft: =50
                            RadiusTopRight: =50
                            Tooltip: =Self.AccessibleLabel
                            Width: =50*1
                            X: =22*1
                            Y: =13*1
                            ZIndex: =2

                        imgTeamMembers As image:
                            AccessibleLabel: |-
                                =With(
                                    {
                                        varDefault: "Team member photo",
                                        varOOBTextId: "imgTeamMembers__locAccessibleText"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            BorderColor: =gblAppStyles.ButtonPrimary.BorderColor
                            Height: =50*1
                            Image: |-
                                =With(
                                    {
                                        varTeamMember:// LookUp('Project Team Members', 'Project Team Member' = ThisItem.'Project Team Member', 'User ID')
                                        ThisItem.'User ID'
                                    },
                                    If(
                                        !IsBlank(varTeamMember),
                                        If(
                                            !IsBlank(Office365Users.UserPhotoV2(varTeamMember)),
                                            Office365Users.UserPhotoV2(varTeamMember),
                                            Blank()
                                        )
                                    )
                                )
                            OnSelect: =Select(Parent)
                            RadiusBottomLeft: =50
                            RadiusBottomRight: =50
                            RadiusTopLeft: =50
                            RadiusTopRight: =50
                            Tooltip: =Self.AccessibleLabel
                            Width: =50*1
                            X: =22*1
                            Y: =13*1
                            ZIndex: =3

                        lblTeamMemberName As label:
                            BorderColor: =gblAppStyles.Label.BorderColor
                            BorderThickness: =gblAppStyles.Label.BorderThickness
                            Color: =gblAppStyles.Label.Color
                            DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                            DisabledColor: =gblAppStyles.Label.DisabledColor
                            DisabledFill: =gblAppStyles.Label.DisabledFill
                            Fill: =gblAppStyles.Label.Fill
                            FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                            FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Semibold
                            Height: =40*1
                            HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                            HoverColor: =gblAppStyles.Label.HoverColor
                            HoverFill: =gblAppStyles.Label.HoverFill
                            PaddingBottom: =10
                            PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                            PressedColor: =gblAppStyles.Label.PressedColor
                            PressedFill: =gblAppStyles.Label.PressedFill
                            Size: =gblAppStyles.Label.Size.Medium
                            Text: =ThisItem.Name
                            Tooltip: =Self.Text
                            Width: =Parent.TemplateWidth - Self.X - 5
                            Wrap: =false
                            X: =73*1
                            Y: =4*1
                            ZIndex: =4

                        lblBlockedWorkItemsCount As label:
                            Align: =Align.Center
                            BorderColor: =gblAppStyles.Label.BorderColor
                            BorderThickness: =gblAppStyles.Label.BorderThickness
                            Color: =gblAppStyles.Label.Color
                            DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                            DisabledColor: =gblAppStyles.Label.DisabledColor
                            DisabledFill: =gblAppStyles.Label.DisabledFill
                            Fill: |-
                                =With(
                                    {
                                        varStatus: Last(
                                            FirstN(
                                                colWorkItemStatuses,
                                                1
                                            )
                                        )
                                    },
                                    Coalesce(
                                        If(
                                            gblThemeDark,
                                            ColorValue(varStatus.'Color Dark'),
                                            ColorValue(varStatus.Color)
                                        ),
                                        ColorValue("#E0E0E0")
                                    )
                                )
                            FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                            FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Semibold
                            Height: =26*1
                            HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                            HoverColor: =gblAppStyles.Label.HoverColor
                            PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                            PressedColor: =gblAppStyles.Label.PressedColor
                            Size: =gblAppStyles.Label.Size.Medium
                            Text: |-
                                =With(
                                    {
                                        varStatus: Last(
                                            FirstN(
                                                colWorkItemStatuses,
                                                1
                                            )
                                        ).'Project Work Item Status'
                                    },
                                    CountRows(
                                        Filter(
                                            colWorkItems,
                                            Project.Project = gblProject.Project,
                                            'Team Member'.'Project Team Member' = ThisItem.'Project Team Member',
                                            'Work Item Status'.'Project Work Item Status' = varStatus
                                        )
                                    )
                                )
                            Tooltip: =Self.Text
                            Width: =26*1
                            Wrap: =false
                            X: =80*1
                            Y: =36*1
                            ZIndex: =5

                        lblInProgressWorkItemsCount As label:
                            Align: =Align.Center
                            BorderColor: =gblAppStyles.Label.BorderColor
                            BorderThickness: =gblAppStyles.Label.BorderThickness
                            Color: =gblAppStyles.Label.Color
                            DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                            DisabledColor: =gblAppStyles.Label.DisabledColor
                            DisabledFill: =gblAppStyles.Label.DisabledFill
                            Fill: |-
                                =With(
                                    {
                                        varStatus: Last(
                                            FirstN(
                                                colWorkItemStatuses,
                                                2
                                            )
                                        )
                                    },
                                    Coalesce(
                                        If(
                                            gblThemeDark,
                                            ColorValue(varStatus.'Color Dark'),
                                            ColorValue(varStatus.Color)
                                        ),
                                        ColorValue("#E0E0E0")
                                    )
                                )
                            FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                            FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Semibold
                            Height: =26*1
                            HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                            HoverColor: =gblAppStyles.Label.HoverColor
                            PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                            PressedColor: =gblAppStyles.Label.PressedColor
                            Size: =gblAppStyles.Label.Size.Medium
                            Text: |-
                                =With(
                                    {
                                        varStatus: Last(
                                            FirstN(
                                                colWorkItemStatuses,
                                                2
                                            )
                                        ).'Project Work Item Status'
                                    },
                                    CountRows(
                                        Filter(
                                            colWorkItems,
                                            Project.Project = gblProject.Project,
                                            'Team Member'.'Project Team Member' = ThisItem.'Project Team Member',
                                            'Work Item Status'.'Project Work Item Status' = varStatus
                                        )
                                    )
                                )
                            Tooltip: =Self.Text
                            Width: =26*1
                            Wrap: =false
                            X: =lblBlockedWorkItemsCount.X + lblBlockedWorkItemsCount.Width + 10
                            Y: =36*1
                            ZIndex: =6

                        lblNewWorkItemsCount As label:
                            Align: =Align.Center
                            BorderColor: =gblAppStyles.Label.BorderColor
                            BorderThickness: =gblAppStyles.Label.BorderThickness
                            Color: =gblAppStyles.Label.Color
                            DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                            DisabledColor: =gblAppStyles.Label.DisabledColor
                            DisabledFill: =gblAppStyles.Label.DisabledFill
                            Fill: |-
                                =With(
                                    {
                                        varStatus: Last(
                                            FirstN(
                                                colWorkItemStatuses,
                                                3
                                            )
                                        )
                                    },
                                    Coalesce(
                                        If(
                                            gblThemeDark,
                                            ColorValue(varStatus.'Color Dark'),
                                            ColorValue(varStatus.Color)
                                        ),
                                        ColorValue("#E0E0E0")
                                    )
                                )
                            FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                            FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Semibold
                            Height: =26*1
                            HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                            HoverColor: =gblAppStyles.Label.HoverColor
                            PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                            PressedColor: =gblAppStyles.Label.PressedColor
                            Size: =gblAppStyles.Label.Size.Medium
                            Text: |-
                                =With(
                                    {
                                        varStatus: Last(
                                            FirstN(
                                                colWorkItemStatuses,
                                                3
                                            )
                                        ).'Project Work Item Status'
                                    },
                                    CountRows(
                                        Filter(
                                            colWorkItems,
                                            Project.Project = gblProject.Project,
                                            'Team Member'.'Project Team Member' = ThisItem.'Project Team Member',
                                            'Work Item Status'.'Project Work Item Status' = varStatus
                                        )
                                    )
                                )
                            Tooltip: =Self.Text
                            Width: =26*1
                            Wrap: =false
                            X: =lblInProgressWorkItemsCount.X + lblInProgressWorkItemsCount.Width + 10
                            Y: =36*1
                            ZIndex: =7

                        lblDoneWorkItemsCount As label:
                            Align: =Align.Center
                            BorderColor: =gblAppStyles.Label.BorderColor
                            BorderThickness: =gblAppStyles.Label.BorderThickness
                            Color: =gblAppStyles.Label.Color
                            DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                            DisabledColor: =gblAppStyles.Label.DisabledColor
                            DisabledFill: =gblAppStyles.Label.DisabledFill
                            Fill: |-
                                =With(
                                    {
                                        varStatus: Last(
                                            FirstN(
                                                colWorkItemStatuses,
                                                CountRows(colWorkItemStatuses)
                                            )
                                        )
                                    },
                                    Coalesce(
                                        If(
                                            gblThemeDark,
                                            ColorValue(varStatus.'Color Dark'),
                                            ColorValue(varStatus.Color)
                                        ),
                                        ColorValue("#E0E0E0")
                                    )
                                )
                            FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                            FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Semibold
                            Height: =26*1
                            HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                            HoverColor: =gblAppStyles.Label.HoverColor
                            PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                            PressedColor: =gblAppStyles.Label.PressedColor
                            Size: =gblAppStyles.Label.Size.Medium
                            Text: |-
                                =With(
                                    {
                                        varStatus: Last(
                                            FirstN(
                                                colWorkItemStatuses,
                                                CountRows(colWorkItemStatuses)
                                            )
                                        ).'Project Work Item Status'
                                    },
                                    CountRows(
                                        Filter(
                                            colWorkItems,
                                            Project.Project = gblProject.Project,
                                            'Team Member'.'Project Team Member' = ThisItem.'Project Team Member',
                                            'Work Item Status'.'Project Work Item Status' = varStatus
                                        )
                                    )
                                )
                            Tooltip: =Self.Text
                            Width: =26*1
                            Wrap: =false
                            X: =lblNewWorkItemsCount.X + lblNewWorkItemsCount.Width + 10
                            Y: =36*1
                            ZIndex: =8

                    lblProjectTeamMembersHeader As label:
                        BorderColor: =gblAppStyles.Label.BorderColor
                        BorderThickness: =gblAppStyles.Label.BorderThickness
                        Color: =gblAppStyles.Label.Color
                        DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                        DisabledColor: =gblAppStyles.Label.DisabledColor
                        DisabledFill: =gblAppStyles.Label.DisabledFill
                        Fill: =gblAppStyles.Background.Fill
                        FocusedBorderColor: |-
                            =If(
                                gblThemeHiCo,
                                gblAppColors.HighContrastSelectedBackground,
                                gblThemeDark,
                                gblAppColors.TeamsDarkShade20,
                                gblAppColors.TeamsDefaultShade20
                            )
                        FocusedBorderThickness: |-
                            =If(
                                gblThemeHiCo,
                                3,
                                gblThemeDark,
                                1.5,
                                1.5
                            )
                        Font: =Font.'Segoe UI'
                        FontWeight: =FontWeight.Semibold
                        Height: =48*1
                        HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                        HoverColor: =gblAppStyles.Label.HoverColor
                        HoverFill: =gblAppStyles.Background.Fill
                        OnSelect: |-
                            =UpdateContext({locShowProjectStatusOptions: !locShowProjectStatusOptions})
                        PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                        PressedColor: =gblAppStyles.Label.PressedColor
                        Size: =gblAppStyles.Label.Size.Large
                        TabIndex: |-
                            =If(
                                locAddProject || locAddWorkItem || locFilterWorkItems || locEditWorkItem || locShowProjectStatusOptions || locVisibleCoverSelection || locShowFirstRun || locShowPowerAppsPrompt,
                                -1,
                                0
                            )
                        Text: |-
                            =If(
                                locProjectStatusSelection = "Team status",
                                With(
                                    {
                                        varDefault: "Team status",
                                        varOOBTextId: "lblProjectTeamHeader1__locText"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                ),
                                With(
                                    {
                                        varDefault: "Milestone status",
                                        varOOBTextId: "lblProjectTeamHeader2__locText"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            )
                        Tooltip: =Self.Text
                        Width: |
                            =Switch(
                                gblUserLanguage,
                                "pt-BR",
                                If(
                                    locProjectStatusSelection = "Team status",
                                    175 * 1 - 50,
                                    120
                                ) + 20,
                                "nl-NL",
                                 If(
                                    locProjectStatusSelection = "Team status",
                                    95,
                                    160
                                ), 
                                "ja-JP",
                                 If(
                                    locProjectStatusSelection = "Team status",
                                    110,
                                    190
                                ),
                                "it-IT",
                                 If(
                                    locProjectStatusSelection = "Team status",
                                    125,
                                    270
                                ),
                                "es-ES",
                                 If(
                                    locProjectStatusSelection = "Team status",
                                    160,
                                    130
                                ), 
                                "de-DE",
                                 If(
                                    locProjectStatusSelection = "Team status",
                                    95,
                                    150
                                ),   
                                "ja-JP",
                                If(
                                    locProjectStatusSelection = "Team status",
                                    140 * 1 + 20,
                                    225 * 1 + 20
                                ),
                                "fr-FR",
                                If(
                                    locProjectStatusSelection = "Team status",
                                    175 * 1 - 40,
                                    105
                                ) + 20,
                                Sum(
                                    AddColumns(
                                        Split(
                                            Self.Text,
                                            ""
                                        ),
                                        "Size",
                                        LookUp(
                                            colCharsWidth,
                                            CharFont = Self.Font && CharWeight = Self.FontWeight && Char = Result
                                        ).Size
                                    ),
                                    Size
                                ) * Self.Size + Self.PaddingLeft + Self.PaddingRight + 2 - 20
                            ) + 20
                        X: =20*1
                        Y: =23
                        ZIndex: =4

                    galProjectStatusOptions As gallery.galleryVertical:
                        AccessibleLabel: |-
                            =With(
                                {
                                    varDefault: "List of work items for " & gblProject.Name,
                                    varOOBTextId: "galWorkItems__locAccessibleText",
                                    varParam0: gblProject.Name
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    If(
                                        IsBlankOrError(varParam0),
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        ),
                                        Coalesce(
                                            Substitute(
                                                varLocalizedText,
                                                "{0}",
                                                Text(varParam0)
                                            ),
                                            varDefault
                                        )
                                    )
                                )
                            )
                        BorderColor: =gblAppStyles.ButtonSecondary.FocusedBorderColor
                        Default: ={}
                        Fill: |-
                            =If(
                                gblThemeDark,
                                ColorValue("#141414"),
                                gblThemeHiCo,
                                Black,
                                White
                            )
                        FocusedBorderThickness: =2
                        Height: =Self.TemplateHeight * 2
                        ItemAccessibleLabel: |-
                            =If(
                                ThisItem.IsSelected,
                                With(
                                    {
                                        varDefault: "Selected",
                                        varOOBTextId: "galSelected_Announcement"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                ),
                                With(
                                    {
                                        varDefault: "Not selected",
                                        varOOBTextId: "galNotSelected_Announcement"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            )
                        Items: |-
                            =Table(
                                {
                                    LocalizedLabel: With(
                                        {
                                            varDefault: "Team status",
                                            varOOBTextId: "lblProjectTeamHeader1__locText"
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextID = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            Coalesce(
                                                varLocalizedText,
                                                varDefault
                                            )
                                        )
                                    ),
                                    EnglishLabel: "Team status"
                                },
                                {
                                    LocalizedLabel: With(
                                        {
                                            varDefault: "Milestone status",
                                            varOOBTextId: "lblProjectMilestoneHeader1__locText"
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextID = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            Coalesce(
                                                varLocalizedText,
                                                varDefault
                                            )
                                        )
                                    ),
                                    EnglishLabel: "Milestone status"
                                }
                            )
                        Layout: =Layout.Vertical
                        OnSelect: |-
                            =UpdateContext(
                                {
                                    locProjectStatusSelection: ThisItem.EnglishLabel,
                                    locShowProjectStatusOptions: false
                                }
                            )
                        TabIndex: |-
                            =If(
                                locAddProject || locAddWorkItem || locFilterWorkItems || locEditWorkItem || locVisibleCoverSelection || locShowFirstRun || locShowPowerAppsPrompt,
                                -1,
                                If(
                                    Self.Visible,
                                    0,
                                    -1
                                )
                            )
                        TemplatePadding: =0
                        TemplateSize: =44*1
                        Visible: =locShowProjectStatusOptions
                        Width: |-
                            =If(
                                locProjectStatusSelection = "Team status",
                                lblProjectTeamMembersHeader.X + (imgProjectStatusShowOptions.X - lblProjectTeamMembersHeader.X),
                                lblProjectTeamMembersHeader.X + (imgProjectStatusShowOptions.X - lblProjectTeamMembersHeader.X)
                            )
                        X: =lblProjectTeamMembersHeader.X
                        Y: =lblProjectTeamMembersHeader.Y + lblProjectTeamMembersHeader.Height
                        ZIndex: =21

                        lblProjectStatusOption As label:
                            BorderColor: =gblAppStyles.Label.BorderColor
                            BorderThickness: =gblAppStyles.Label.BorderThickness
                            Color: =gblAppStyles.Label.Color
                            DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                            DisabledColor: =gblAppStyles.Label.DisabledColor
                            DisabledFill: =gblAppStyles.Label.DisabledFill
                            Fill: =If(ThisItem.EnglishLabel = locProjectStatusSelection, gblAppStyles.Gallery.SelectedItem, gblAppStyles.Label.Fill)
                            FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                            FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                            Font: =Font.'Segoe UI'
                            Height: =Parent.TemplateHeight
                            HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                            HoverColor: =gblAppStyles.Label.HoverColor
                            HoverFill: =gblAppStyles.Label.HoverFill
                            PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                            PressedColor: =gblAppStyles.Label.PressedColor
                            PressedFill: =gblAppStyles.Label.PressedFill
                            Size: =gblAppStyles.Label.Size.Medium
                            Text: |-
                                =If(
                                    ThisItem.EnglishLabel = "Team status",
                                    With(
                                        {
                                            varDefault: "Team status",
                                            varOOBTextId: "lblProjectTeamHeader1__locText"
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextID = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            Coalesce(
                                                varLocalizedText,
                                                varDefault
                                            )
                                        )
                                    ),
                                    With(
                                        {
                                            varDefault: "Milestone status",
                                            varOOBTextId: "lblProjectTeamHeader2__locText"
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextID = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            Coalesce(
                                                varLocalizedText,
                                                varDefault
                                            )
                                        )
                                    )
                                )
                            Tooltip: =Self.Text
                            Width: =Parent.Width - Self.X 
                            Wrap: =false
                            ZIndex: =1

                        imgProjectStatusOptionSelected As image:
                            AccessibleLabel: |-
                                =With(
                                    {
                                        varDefault: "Click to search work items",
                                        varOOBTextId: "imgSearchWorkItems__locAccessibleText"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            DisabledFill: |-
                                =With(
                                    {
                                        varImageIsCategory: LookUp(
                                            staticIcons,
                                            staticIconName = "Check"
                                        ).staticIconIsCategory
                                    },
                                    If(
                                        varImageIsCategory,
                                        gblAppStyles.Icons.DisabledFill_Category,
                                        Transparent
                                    )
                                )
                            Fill: =Transparent
                            Height: =22*1
                            Image: |-
                                =With(
                                    {
                                        varImageRecord: LookUp(
                                            staticIcons,
                                            staticIconName = "Check"
                                        ),
                                        varColor: If(
                                            Self.DisplayMode = DisplayMode.Disabled,
                                            gblAppStyles.Icons.DisabledColor,
                                            gblAppStyles.Icons.Color
                                        )
                                    },
                                    With(
                                        {
                                            varImageData: Concatenate(
                                                "data:image/svg+xml;utf8, ",
                                                EncodeUrl(
                                                    Concatenate(
                                                        "<svg viewBox='",
                                                        varImageRecord.staticIconViewbox,
                                                        "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                        varImageRecord.staticIconPath,
                                                        "' fill='#",
                                                        varColor,
                                                        "'/></svg>"
                                                    )
                                                )
                                            )
                                        },
                                        varImageData
                                    )
                                )
                            OnSelect: |-
                                =UpdateContext({locShowProjectStatusOptions: !locShowProjectStatusOptions})
                            PaddingBottom: =2
                            PaddingLeft: =2
                            PaddingRight: =2
                            PaddingTop: =2
                            RadiusBottomLeft: =5
                            RadiusBottomRight: =5
                            RadiusTopLeft: =5
                            RadiusTopRight: =5
                            TabIndex: |-
                                =If(
                                    true,
                                    -1,
                                    0
                                )
                            Tooltip: =Self.AccessibleLabel
                            Visible: =ThisItem.EnglishLabel = locProjectStatusSelection
                            Width: =32*1
                            X: =Parent.Width - Self.Width - 5
                            Y: =(Parent.TemplateHeight - Self.Height) / 2
                            ZIndex: =2

                        btnProjectStatusOptionForeground As button:
                            Color: =RGBA(0, 0, 0, 0)
                            DisabledColor: =RGBA(0, 0, 0, 0)
                            Fill: =RGBA(0, 0, 0, 0)
                            FocusedBorderColor: =gblAppStyles.ButtonSecondary.FocusedBorderColor
                            FocusedBorderThickness: =2
                            FontWeight: =FontWeight.Bold
                            Height: =Parent.TemplateHeight - 2
                            HoverColor: =RGBA(0, 0, 0, 0)
                            HoverFill: =gblAppStyles.Gallery.HoverFill
                            OnSelect: =Select(Parent)
                            PressedFill: =gblAppStyles.Gallery.PressedFill
                            RadiusBottomLeft: =0
                            RadiusBottomRight: =0
                            RadiusTopLeft: =0
                            RadiusTopRight: =0
                            Size: =17.48
                            TabIndex: |-
                                =If(
                                    locAddProject || locAddWorkItem || locFilterWorkItems || locEditWorkItem || locVisibleCoverSelection || locShowFirstRun || locShowPowerAppsPrompt,
                                    -1,
                                    If(
                                        Self.Visible,
                                        0,
                                        -1
                                    )
                                )
                            Text: |-
                                =With(
                                    {
                                        varDefault: "Click to select the work item",
                                        varOOBTextId: "btnWorkItemsForeground__locText"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            Tooltip: =Self.Text
                            Width: =Parent.Width - Self.X - 2
                            X: =1
                            Y: =1
                            ZIndex: =3

                    imgProjectStatusShowOptions As image:
                        AccessibleLabel: |-
                            =With(
                                {
                                    varDefault: "Click to choose between milestone status and team status",
                                    varOOBTextId: "imgMobileProjectStatusShowOptions__locAccessibleText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        DisabledFill: |-
                            =With(
                                {
                                    varImageIsCategory: LookUp(
                                        staticIcons,
                                        staticIconName = "Chevron down"
                                    ).staticIconIsCategory
                                },
                                If(
                                    varImageIsCategory,
                                    gblAppStyles.Icons.DisabledFill_Category,
                                    Transparent
                                )
                            )
                        Fill: =gblAppStyles.Background.Fill
                        Height: =22*1
                        Image: |-
                            =With(
                                {
                                    varImageRecord: LookUp(
                                        staticIcons,
                                        staticIconName = "Chevron down"
                                    ),
                                    varColor: If(
                                        Self.DisplayMode = DisplayMode.Disabled,
                                        gblAppStyles.Icons.DisabledColor,
                                        gblAppStyles.Icons.Color
                                    )
                                },
                                With(
                                    {
                                        varImageData: Concatenate(
                                            "data:image/svg+xml;utf8, ",
                                            EncodeUrl(
                                                Concatenate(
                                                    "<svg viewBox='",
                                                    varImageRecord.staticIconViewbox,
                                                    "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                    varImageRecord.staticIconPath,
                                                    "' fill='#",
                                                    varColor,
                                                    "'/></svg>"
                                                )
                                            )
                                        )
                                    },
                                    varImageData
                                )
                            )
                        OnSelect: |
                            =UpdateContext({locShowProjectStatusOptions: !locShowProjectStatusOptions});
                        PaddingBottom: =2
                        PaddingLeft: =2
                        PaddingRight: =2
                        PaddingTop: =2
                        RadiusBottomLeft: =5
                        RadiusBottomRight: =5
                        RadiusTopLeft: =5
                        RadiusTopRight: =5
                        TabIndex: |-
                            =If(
                                locAddProject || locAddWorkItem || locFilterWorkItems || locEditWorkItem || locShowProjectStatusOptions || locVisibleCoverSelection || locShowFirstRun || locShowPowerAppsPrompt,
                                -1,
                                0
                            )
                        Tooltip: =Self.AccessibleLabel
                        Width: =22*1
                        X: =lblProjectTeamMembersHeader.X + lblProjectTeamMembersHeader.Width + 5
                        Y: =lblProjectTeamMembersHeader.Y + (lblProjectTeamMembersHeader.Height - Self.Height) / 2
                        ZIndex: =41

                grpZeroState As group:
                    Height: =5
                    Width: =5
                    X: =60
                    Y: =60
                    ZIndex: =54

                    imgWorkItemsZeroState As image:
                        AccessibleLabel: |-
                            =With(
                                {
                                    varDefault: "Image displayed when there are no work items",
                                    varOOBTextId: "imgWorkItemsZeroState__locAccessibleText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        Height: =150
                        Image: =Image_ZeroState_WorkItems
                        Tooltip: =Self.AccessibleLabel
                        Visible: =CountRows(colWorkItems) = 0
                        Width: =262
                        X: =(galWorkItems.Width - Self.Width) / 2
                        Y: =galWorkItems.Y
                        ZIndex: =32

                    lblWorkItemsZeroState As label:
                        Align: =Align.Center
                        BorderColor: =gblAppStyles.Label.BorderColor
                        BorderThickness: =gblAppStyles.Label.BorderThickness
                        Color: =gblAppStyles.Label.Color
                        DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                        DisabledColor: =gblAppStyles.Label.DisabledColor
                        DisabledFill: =gblAppStyles.Label.DisabledFill
                        Fill: =gblAppStyles.Label.Fill
                        FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                        FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                        Font: =Font.'Segoe UI'
                        HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                        HoverColor: =gblAppStyles.Label.HoverColor
                        HoverFill: =gblAppStyles.Label.HoverFill
                        PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                        PressedColor: =gblAppStyles.Label.PressedColor
                        PressedFill: =gblAppStyles.Label.PressedFill
                        Size: =gblAppStyles.Label.Size.Medium
                        Text: |-
                            =With(
                                {
                                    varDefault: "Work items will appear here",
                                    varOOBTextId: "lblWorkItemsZeroState__locText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        Visible: =CountRows(colWorkItems) = 0
                        Width: =262
                        X: =imgWorkItemsZeroState.X
                        Y: =imgWorkItemsZeroState.Y + imgWorkItemsZeroState.Height
                        ZIndex: =33

                    imgZeroProjectTeamMembers As image:
                        Height: =Self.Width
                        Image: =Image_ZeroState_People
                        Visible: =CountRows(galTeamMembers.AllItems) = 0 && locProjectStatusSelection = "Team status"
                        Width: =130*1
                        X: =galTeamMembers.X + (galTeamMembers.Width - Self.Width) / 2
                        Y: =galTeamMembers.Y
                        ZIndex: =34

                    lblZeroProjectTeamMembers As label:
                        Align: =Align.Center
                        BorderColor: =gblAppStyles.Label.BorderColor
                        BorderThickness: =gblAppStyles.Label.BorderThickness
                        Color: =gblAppStyles.Label.Color
                        DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                        DisabledColor: =gblAppStyles.Label.DisabledColor
                        DisabledFill: =gblAppStyles.Label.DisabledFill
                        DisplayMode: =DisplayMode.View
                        Fill: =gblAppStyles.Label.Fill
                        FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                        FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                        Font: =Font.'Segoe UI'
                        Height: =32
                        HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                        HoverColor: =gblAppStyles.Label.HoverColor
                        HoverFill: =gblAppStyles.Label.HoverFill
                        PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                        PressedColor: =gblAppStyles.Label.PressedColor
                        PressedFill: =gblAppStyles.Label.PressedFill
                        Size: =gblAppStyles.Label.Size.Medium
                        Text: |-
                            =With(
                                {
                                    varDefault: "Team members will appear here",
                                    varOOBTextId: "lblZeroProjectTeamMembers__locText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        VerticalAlign: =VerticalAlign.Top
                        Visible: =CountRows(galTeamMembers.AllItems) = 0 && locProjectStatusSelection = "Team status"
                        Width: =galTeamMembers.Width
                        X: =galTeamMembers.X
                        Y: =imgZeroProjectTeamMembers.Y + imgZeroProjectTeamMembers.Height
                        ZIndex: =35

                    imgZeroProjectMilestones As image:
                        Height: =Self.Width
                        Image: =Image_ZeroState_Projects
                        Visible: =CountRows(galMilestones.AllItems) = 0 && locProjectStatusSelection = "Milestone status"
                        Width: =130*1
                        X: =galMilestones.X + (galMilestones.Width - Self.Width) / 2
                        Y: =galTeamMembers.Y
                        ZIndex: =36

                    lblZeroProjectMilestones As label:
                        Align: =Align.Center
                        BorderColor: =gblAppStyles.Label.BorderColor
                        BorderThickness: =gblAppStyles.Label.BorderThickness
                        Color: =gblAppStyles.Label.Color
                        DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                        DisabledColor: =gblAppStyles.Label.DisabledColor
                        DisabledFill: =gblAppStyles.Label.DisabledFill
                        DisplayMode: =DisplayMode.View
                        Fill: =gblAppStyles.Label.Fill
                        FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                        FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                        Font: =Font.'Segoe UI'
                        Height: =32
                        HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                        HoverColor: =gblAppStyles.Label.HoverColor
                        HoverFill: =gblAppStyles.Label.HoverFill
                        PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                        PressedColor: =gblAppStyles.Label.PressedColor
                        PressedFill: =gblAppStyles.Label.PressedFill
                        Size: =gblAppStyles.Label.Size.Medium
                        Text: |-
                            =With(
                                {
                                    varDefault: "Milestones will appear here",
                                    varOOBTextId: "lblZeroProjectMilestones__locText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        VerticalAlign: =VerticalAlign.Top
                        Visible: =CountRows(galMilestones.AllItems) = 0 && locProjectStatusSelection = "Milestone status"
                        Width: =galTeamMembers.Width
                        X: =galTeamMembers.X
                        Y: =imgZeroProjectMilestones.Y + imgZeroProjectMilestones.Height
                        ZIndex: =37

                    imgWorkItemsNoSearchResults As image:
                        AccessibleLabel: |-
                            =With(
                                {
                                    varDefault: "Image displayed when there are no work items",
                                    varOOBTextId: "imgWorkItemsZeroState__locAccessibleText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        Height: =150
                        Image: =Image_ZeroState_People_NoResults
                        Tooltip: =Self.AccessibleLabel
                        Visible: =CountRows(galWorkItems.AllItems) = 0 && CountRows(colWorkItems) > 0
                        Width: =200
                        X: =(galWorkItems.Width - Self.Width) / 2
                        Y: =galWorkItems.Y+10
                        ZIndex: =38

                    lblWorkItemsNoSearchResultsLine1 As label:
                        Align: =Align.Center
                        BorderColor: =gblAppStyles.Label.BorderColor
                        BorderThickness: =gblAppStyles.Label.BorderThickness
                        Color: =gblAppStyles.Label.Color
                        DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                        DisabledColor: =gblAppStyles.Label.DisabledColor
                        DisabledFill: =gblAppStyles.Label.DisabledFill
                        DisplayMode: =DisplayMode.View
                        Fill: =gblAppStyles.Label.Fill
                        FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                        FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                        Font: =Font.'Segoe UI'
                        FontWeight: =FontWeight.Semibold
                        Height: =32
                        HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                        HoverColor: =gblAppStyles.Label.HoverColor
                        HoverFill: =gblAppStyles.Label.HoverFill
                        PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                        PressedColor: =gblAppStyles.Label.PressedColor
                        PressedFill: =gblAppStyles.Label.PressedFill
                        Size: =gblAppStyles.Label.Size.Medium
                        Text: |-
                            =With(
                                {
                                    varDefault: "No results",
                                    varOOBTextId: "lblSearchTeamMemberNoResultsLine1__locText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        VerticalAlign: =VerticalAlign.Top
                        Visible: =CountRows(galWorkItems.AllItems) = 0 && CountRows(colWorkItems) > 0
                        Width: =galWorkItems.Width
                        X: =(galWorkItems.Width - Self.Width) / 2
                        Y: =imgWorkItemsNoSearchResults.Y + imgWorkItemsNoSearchResults.Height
                        ZIndex: =39

                    lblWorkItemsNoSearchResultsLine2 As label:
                        Align: =Align.Center
                        BorderColor: =gblAppStyles.Label.BorderColor
                        BorderThickness: =gblAppStyles.Label.BorderThickness
                        Color: =gblAppStyles.Label.Color
                        DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                        DisabledColor: =gblAppStyles.Label.DisabledColor
                        DisabledFill: =gblAppStyles.Label.DisabledFill
                        DisplayMode: =DisplayMode.View
                        Fill: =gblAppStyles.Label.Fill
                        FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                        FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                        Font: =Font.'Segoe UI'
                        Height: =32
                        HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                        HoverColor: =gblAppStyles.Label.HoverColor
                        HoverFill: =gblAppStyles.Label.HoverFill
                        PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                        PressedColor: =gblAppStyles.Label.PressedColor
                        PressedFill: =gblAppStyles.Label.PressedFill
                        Size: =gblAppStyles.Label.Size.Medium
                        Text: |-
                            =With(
                                {
                                    varDefault: "Try a different search.",
                                    varOOBTextId: "lblSearchMobileWorkItemNoResultsLine2__locText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextID = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        VerticalAlign: =VerticalAlign.Top
                        Visible: =CountRows(galWorkItems.AllItems) = 0 && CountRows(colWorkItems) > 0
                        Width: =galWorkItems.Width
                        X: =(galWorkItems.Width - Self.Width) / 2
                        Y: =lblWorkItemsNoSearchResultsLine1.Y + lblWorkItemsNoSearchResultsLine1.Height
                        ZIndex: =40

    conWarning As groupContainer:
        Height: =Parent.Height-Self.Y
        Visible: =locDeleteWorkItems
        Width: =Parent.Width 
        ZIndex: =6

        lblWarningBackground As label:
            BorderColor: =Transparent
            Color: =Transparent
            DisabledColor: =Transparent
            Fill: |-
                =If(
                    gblThemeDark Or gblThemeHiCo,
                    gblAppColors.OverlayLight,
                    gblAppColors.OverlayDark
                )
            FocusedBorderThickness: =1
            Font: =Font.'Segoe UI'
            Height: =Parent.Height
            OnSelect: |-
                =UpdateContext({locDeleteWorkItems: false});
                //set focus start
                UpdateContext({locSetFocusTimerStart: false});
                UpdateContext({locSetFocusControlTarget: "imgDeleteWorkItems"});
                UpdateContext({locSetFocusTimerStart: true});
                //set focus end
                //screen reader start
                UpdateContext(
                    {
                        locScreenReaderAnnouncedText: With(
                            {
                                varAnnouncedText: With(
                                    {
                                        varDefault: "Cancelling the deletion and closing the dialog",
                                        varOOBTextId: "imgCloseWarning_Announcement"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            },
                            If(
                                locScreenReaderAnnouncedText = varAnnouncedText,
                                Concatenate(
                                    varAnnouncedText,
                                    " "
                                ),
                                varAnnouncedText
                            )
                        )
                    }
                );
                //screen reader end
            Size: =gblAppStyles.Label.Size.Medium
            TabIndex: |-
                =If(
                    true,
                    -1,
                    0
                )
            Text: |-
                =With(
                    {
                        varDefault: "Overlay for warning dialog",
                        varOOBTextId: "lblWarningBackground__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Visible: =locDeleteWorkItems
            Width: =Parent.Width
            ZIndex: =1

        lblWarningContainer As label:
            BorderColor: =gblAppStyles.TextInput.Color
            BorderThickness: |-
                =If(
                    gblThemeHiCo,
                    1,
                    0
                )
            Color: =Transparent
            DisabledColor: =Transparent
            Fill: =gblAppStyles.TextInput.Fill
            Font: =Font.'Segoe UI'
            Height: =250
            Size: =gblAppStyles.Label.Size.Medium
            Text: |-
                =With(
                    {
                        varDefault: "Container for warning dialog",
                        varOOBTextId: "lblWarningContainer__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Visible: =locDeleteWorkItems
            Width: =450
            X: =(Parent.Width - Self.Width) / 2
            Y: =(Parent.Height - Self.Height) / 2
            ZIndex: =2

        lblWarningHeader As label:
            BorderColor: =gblAppStyles.Label.BorderColor
            BorderThickness: =gblAppStyles.Label.BorderThickness
            Color: =gblAppStyles.Label.Color
            DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
            DisabledColor: =gblAppStyles.Label.DisabledColor
            DisabledFill: =gblAppStyles.Label.DisabledFill
            Fill: =gblAppStyles.Label.Fill
            FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Bold
            Height: =56
            HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
            HoverColor: =gblAppStyles.Label.HoverColor
            HoverFill: =gblAppStyles.Label.HoverFill
            PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
            PressedColor: =gblAppStyles.Label.PressedColor
            PressedFill: =gblAppStyles.Label.PressedFill
            Role: =TextRole.Heading1
            Size: =gblAppStyles.Label.Size.Large
            Text: |-
                =With(
                    {
                        varDefault: "Are you sure you want to delete these work items?",
                        varOOBTextId: "lblWarningHeader__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Tooltip: =Self.Text
            Visible: =locDeleteWorkItems
            Width: =lblWarningContainer.Width - 40
            X: =(Parent.Width - Self.Width) / 2
            Y: =lblWarningContainer.Y + 20
            ZIndex: =3

        lblWarningMessage As label:
            BorderColor: =gblAppStyles.Label.BorderColor
            BorderThickness: =gblAppStyles.Label.BorderThickness
            Color: =gblAppStyles.Label.Color
            DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
            DisabledColor: =gblAppStyles.Label.DisabledColor
            DisabledFill: =gblAppStyles.Label.DisabledFill
            Fill: =gblAppStyles.Label.Fill
            FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            Height: =63
            HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
            HoverColor: =gblAppStyles.Label.HoverColor
            HoverFill: =gblAppStyles.Label.HoverFill
            PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
            PressedColor: =gblAppStyles.Label.PressedColor
            PressedFill: =gblAppStyles.Label.PressedFill
            Size: =gblAppStyles.Label.Size.Medium
            Text: |-
                =With(
                    {
                        varDefault: "You are about to permanently delete these work items from the project.",
                        varOOBTextId: "lblWarningMessage__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Tooltip: =Self.Text
            VerticalAlign: =VerticalAlign.Top
            Visible: =locDeleteWorkItems
            Width: =lblWarningContainer.Width - 40
            X: =lblWarningHeader.X
            Y: =lblWarningHeader.Y + lblWarningHeader.Height
            ZIndex: =4

        btnCancelWarning As button:
            BorderColor: =gblAppStyles.ButtonSecondary.BorderColor
            BorderThickness: =gblAppStyles.ButtonSecondary.BorderThickness
            Color: =gblAppStyles.ButtonSecondary.Color
            DisabledBorderColor: =gblAppStyles.ButtonSecondary.DisabledBorderColor
            DisabledColor: =gblAppStyles.ButtonSecondary.DisabledColor
            DisabledFill: =gblAppStyles.ButtonSecondary.DisabledFill
            Fill: =gblAppStyles.ButtonSecondary.Fill
            FocusedBorderColor: =gblAppStyles.ButtonSecondary.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.ButtonSecondary.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            Height: =32
            HoverBorderColor: =gblAppStyles.ButtonSecondary.HoverBorderColor
            HoverColor: =gblAppStyles.ButtonSecondary.HoverColor
            HoverFill: =gblAppStyles.ButtonSecondary.HoverFill
            OnSelect: |-
                =UpdateContext({locResetWorkItemCheckbox: false});
                UpdateContext(
                    {
                        locDeleteWorkItems: false,
                        locResetWorkItemCheckbox: true
                    }
                );
                //set focus start
                UpdateContext({locSetFocusTimerStart: false});
                UpdateContext({locSetFocusControlTarget: "imgDeleteWorkItems"});
                UpdateContext({locSetFocusTimerStart: true});
                //set focus end
                //screen reader start
                UpdateContext(
                    {
                        locScreenReaderAnnouncedText: With(
                            {
                                varAnnouncedText: With(
                                    {
                                        varDefault: "Cancelling the deletion and closing the dialog",
                                        varOOBTextId: "imgCloseWarning_Announcement"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            },
                            If(
                                locScreenReaderAnnouncedText = varAnnouncedText,
                                Concatenate(
                                    varAnnouncedText,
                                    " "
                                ),
                                varAnnouncedText
                            )
                        )
                    }
                );
                //screen reader end
            PaddingBottom: =6
            PaddingLeft: =0
            PaddingRight: =0.00
            PaddingTop: =6.99
            PressedBorderColor: =gblAppStyles.ButtonSecondary.PressedBorderColor
            PressedColor: =gblAppStyles.ButtonSecondary.PressedColor
            PressedFill: =gblAppStyles.ButtonSecondary.PressedFill
            RadiusBottomLeft: =gblAppStyles.ButtonSecondary.RadiusBottomLeft
            RadiusBottomRight: =gblAppStyles.ButtonSecondary.RadiusBottomRight
            RadiusTopLeft: =gblAppStyles.ButtonSecondary.RadiusTopLeft
            RadiusTopRight: =gblAppStyles.ButtonSecondary.RadiusTopRight
            Size: =gblAppStyles.ButtonSecondary.Size
            TabIndex: |-
                =If(
                    locDeleteWorkItems,
                    0,
                    -1
                )
            Text: |-
                =With(
                    {
                        varDefault: "Cancel",
                        varOOBTextId: "btnCancelWarning__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Tooltip: |-
                =With(
                    {
                        varDefault: "Click to cancel deletion",
                        varOOBTextId: "btnCancelWarning__locTooltip"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Visible: =locDeleteWorkItems
            Width: =97.90
            X: =lblWarningContainer.X+lblWarningContainer.Width - Self.Width - Self.Width - 50 
            Y: =lblWarningContainer.Y+lblWarningContainer.Height - Self.Height - 30 
            ZIndex: =6

        chkConfirmDelete As checkbox:
            BorderColor: =gblAppStyles.Checkbox.BorderColor
            BorderThickness: =gblAppStyles.Checkbox.BorderThickness
            CheckboxBackgroundFill: =gblAppStyles.Checkbox.CheckboxBackgroundFill
            CheckboxBorderColor: =gblAppStyles.Checkbox.CheckboxBorderColor
            CheckboxSize: =25
            CheckmarkFill: =gblAppStyles.Checkbox.CheckmarkFill
            Color: =gblAppStyles.Checkbox.Color
            FocusedBorderColor: =gblAppStyles.Checkbox.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.Checkbox.BorderThickness
            Font: =Font.'Segoe UI'
            HoverBorderColor: =gblAppStyles.Checkbox.HoverBorderColor
            HoverColor: =gblAppStyles.Checkbox.HoverColor
            HoverFill: =gblAppStyles.Checkbox.HoverFill
            PaddingRight: =0.00
            PaddingTop: =0.00
            PressedBorderColor: =gblAppStyles.Checkbox.PressedBorderColor
            PressedColor: =gblAppStyles.Checkbox.PressedColor
            PressedFill: =gblAppStyles.Checkbox.PressedFill
            Size: =gblAppStyles.Checkbox.Size
            TabIndex: |-
                =If(
                    locDeleteWorkItems,
                    0,
                    -1
                )
            Text: |-
                =With(
                    {
                        varDefault: "I understand.",
                        varOOBTextId: "chkConfirmDelete__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Tooltip: =Self.Text
            Visible: =locDeleteWorkItems
            Width: =174.83
            X: =lblWarningMessage.X 
            Y: =lblWarningMessage.Y + lblWarningMessage.Height
            ZIndex: =7

        btnDeleteWarning As button:
            BorderColor: =gblAppStyles.ButtonPrimary.BorderColor
            BorderThickness: =gblAppStyles.ButtonPrimary.BorderThickness
            Color: =gblAppStyles.ButtonPrimary.Color
            DisabledBorderColor: =gblAppStyles.ButtonPrimary.DisabledBorderColor
            DisabledColor: =gblAppStyles.ButtonPrimary.DisabledColor
            DisabledFill: =gblAppStyles.ButtonPrimary.DisabledFill
            DisplayMode: |-
                =If(
                    chkConfirmDelete.Value,
                    DisplayMode.Edit,
                    DisplayMode.Disabled
                )
            Fill: =gblAppStyles.ButtonPrimary.Fill
            FocusedBorderColor: =gblAppStyles.ButtonPrimary.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.ButtonPrimary.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            Height: =32
            HoverBorderColor: =gblAppStyles.ButtonPrimary.HoverBorderColor
            HoverColor: =gblAppStyles.ButtonPrimary.HoverColor
            HoverFill: =gblAppStyles.ButtonPrimary.HoverFill
            OnSelect: |-
                =Clear(colRemoveWorkItems);
                Collect(
                    colRemoveWorkItems,
                    Filter(
                        galWorkItems.AllItems,
                        chkSelectWorkItem.Value
                    ).'Project Work item'
                );
                ForAll(
                    colRemoveWorkItems,
                    Remove(
                        colWorkItems,
                        LookUp(
                            colWorkItems,
                            'Project Work item' = ThisRecord.'Project Work item'
                        )
                    );
                    Remove(
                        'Project Work Items',
                        ThisRecord
                    );
                    
                );
                ClearCollect(
                    colWorkItems,
                    Filter(
                        'Project Work Items',
                        Project.Project = gblProject.Project
                    )
                );
                UpdateContext({locResetWorkItemCheckbox: false});
                UpdateContext({locResetWorkItemCheckbox: true});
                UpdateContext({locDeleteWorkItems: false});
                Reset(galWorkItems);
                //screen reader start
                UpdateContext(
                    {
                        locScreenReaderAnnouncedText: With(
                            {
                                varAnnouncedText: With(
                                    {
                                        varDefault: "The work items have been deleted",
                                        varOOBTextId: "btnDeleteWarning_Announcement"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            },
                            If(
                                locScreenReaderAnnouncedText = varAnnouncedText,
                                Concatenate(
                                    varAnnouncedText,
                                    " "
                                ),
                                varAnnouncedText
                            )
                        )
                    }
                );
                //screen reader end
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            PressedBorderColor: =gblAppStyles.ButtonPrimary.PressedBorderColor
            PressedColor: =gblAppStyles.ButtonPrimary.PressedColor
            PressedFill: =gblAppStyles.ButtonPrimary.PressedFill
            RadiusBottomLeft: =gblAppStyles.ButtonPrimary.RadiusBottomLeft
            RadiusBottomRight: =gblAppStyles.ButtonPrimary.RadiusBottomRight
            RadiusTopLeft: =gblAppStyles.ButtonPrimary.RadiusTopLeft
            RadiusTopRight: =gblAppStyles.ButtonPrimary.RadiusTopRight
            Size: =gblAppStyles.ButtonSecondary.Size
            TabIndex: |-
                =If(
                    locDeleteWorkItems,
                    0,
                    -1
                )
            Text: |-
                =With(
                    {
                        varDefault: "Delete",
                        varOOBTextId: "btnDeleteWarning__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Tooltip: |-
                =With(
                    {
                        varDefault: "Click to delete work items",
                        varOOBTextId: "btnDeleteWarning__locTooltip"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Visible: =locDeleteWorkItems
            Width: =97.90
            X: =lblWarningContainer.X + lblWarningContainer.Width - Self.Width - 40
            Y: =lblWarningContainer.Y + lblWarningContainer.Height - Self.Height - 30
            ZIndex: =8

        imgCloseWarning As image:
            AccessibleLabel: |-
                =With(
                    {
                        varDefault: "Click to close the warning",
                        varOOBTextId: "btnOkWarning__locTooltip"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Height: =22*1
            Image: |
                =With(
                    {
                        varImageRecord: LookUp(
                            staticIcons,
                            staticIconName = "Dismiss"
                        ),
                        varColor: If(
                            Self.DisplayMode = DisplayMode.Disabled,
                            gblAppStyles.Icons.DisabledColor,
                            gblAppStyles.Icons.Color
                        )
                    },
                    With(
                        {
                            varImageData: Concatenate(
                                "data:image/svg+xml;utf8, ",
                                EncodeUrl(
                                    Concatenate(
                                        "<svg viewBox='",
                                        varImageRecord.staticIconViewbox,
                                        "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                        varImageRecord.staticIconPath,
                                        "' fill='#",
                                        varColor,
                                        "'/></svg>"
                                    )
                                )
                            )
                        },
                        varImageData
                    )
                )
            OnSelect: |-
                =UpdateContext({locResetWorkItemCheckbox: false});
                UpdateContext(
                    {
                        locDeleteWorkItems: false,
                        locResetWorkItemCheckbox: true
                    }
                );
                //set focus start
                UpdateContext({locSetFocusTimerStart: false});
                UpdateContext({locSetFocusControlTarget: "imgDeleteWorkItems"});
                UpdateContext({locSetFocusTimerStart: true});
                //set focus end
                //screen reader start
                UpdateContext(
                    {
                        locScreenReaderAnnouncedText: With(
                            {
                                varAnnouncedText: With(
                                    {
                                        varDefault: "Cancelling the deletion and closing the dialog",
                                        varOOBTextId: "imgCloseWarning_Announcement"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            },
                            If(
                                locScreenReaderAnnouncedText = varAnnouncedText,
                                Concatenate(
                                    varAnnouncedText,
                                    " "
                                ),
                                varAnnouncedText
                            )
                        )
                    }
                );
                //screen reader end
            PaddingBottom: =2
            PaddingLeft: =2
            PaddingRight: =2
            PaddingTop: =2
            TabIndex: |-
                =If(
                    locDeleteWorkItems,
                    0,
                    -1
                )
            Tooltip: =Self.AccessibleLabel
            Visible: =locDeleteWorkItems
            Width: =22*1
            X: =lblWarningContainer.X + lblWarningContainer.Width - Self.Width - 20
            Y: =lblWarningContainer.Y + Self.Height
            ZIndex: =9

    conFilterWorkItems As groupContainer:
        Height: =Parent.Height - Self.Y
        Visible: =locFilterWorkItems
        Width: =Parent.Width 
        ZIndex: =7

        lblFilterBackground As label:
            BorderColor: =Transparent
            Color: =Transparent
            DisabledColor: =Transparent
            Fill: |-
                =If(
                    gblThemeDark Or gblThemeHiCo,
                    gblAppColors.OverlayLight,
                    gblAppColors.OverlayDark
                )
            FocusedBorderThickness: =1
            Font: =Font.'Segoe UI'
            Height: =Parent.Height
            OnSelect: |-
                =UpdateContext(
                    {
                        locFilterWorkItems: false,
                        locApplyFilter: false
                    }
                ); 
                Reset(cmbMilestones);
                Reset(cmbCategories);
                Reset(cmbPriorities);
                Reset(cmbTeamMembers);
                Reset(cmbStatuses);
                //set focus start
                UpdateContext({locSetFocusTimerStart: false});
                UpdateContext({locSetFocusControlTarget: "imgFilterWorkItems"});
                UpdateContext({locSetFocusTimerStart: true});
                //set focus end;
                //screen reader start
                UpdateContext(
                    {
                        locScreenReaderAnnouncedText: With(
                            {
                                varAnnouncedText: With(
                                    {
                                        varDefault: "Work item filters cleared and filter dialog closed",
                                        varOOBTextId: "btnClearFilter_Announcement"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            },
                            If(
                                locScreenReaderAnnouncedText = varAnnouncedText,
                                Concatenate(
                                    varAnnouncedText,
                                    " "
                                ),
                                varAnnouncedText
                            )
                        )
                    }
                );
                //screen reader end
            Size: =gblAppStyles.Label.Size.Medium
            TabIndex: |-
                =If(
                    true,
                    -1,
                    0
                )
            Text: |-
                =With(
                    {
                        varDefault: "Overlay for filter dialog",
                        varOOBTextId: "lblFilterBackground__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Visible: =locFilterWorkItems
            Width: =Parent.Width
            ZIndex: =1

        lblFilterContainer As label:
            BorderColor: =gblAppStyles.TextInput.Color
            BorderThickness: =If(gblThemeHiCo, 1, 0)
            Color: =Transparent
            DisabledColor: =Transparent
            Fill: =gblAppStyles.TextInput.Fill
            Font: =Font.'Segoe UI'
            Height: =450*1
            Size: =gblAppStyles.Label.Size.Medium
            Text: |-
                =With(
                    {
                        varDefault: "Container for filtering work items dialog",
                        varOOBTextId: "lblFilterContainer__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Visible: =locFilterWorkItems
            Width: =550*1
            X: =(Parent.Width - Self.Width) / 2
            Y: =(Parent.Height - Self.Height) / 2
            ZIndex: =2

        lblFilterHeader As label:
            BorderColor: =gblAppStyles.Label.BorderColor
            BorderThickness: =gblAppStyles.Label.BorderThickness
            Color: =gblAppStyles.Label.Color
            DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
            DisabledColor: =gblAppStyles.Label.DisabledColor
            DisabledFill: =gblAppStyles.Label.DisabledFill
            Fill: =gblAppStyles.Label.Fill
            FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Bold
            Height: =56
            HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
            HoverColor: =gblAppStyles.Label.HoverColor
            HoverFill: =gblAppStyles.Label.HoverFill
            PaddingLeft: =15
            PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
            PressedColor: =gblAppStyles.Label.PressedColor
            PressedFill: =gblAppStyles.Label.PressedFill
            Role: =TextRole.Heading1
            Size: =gblAppStyles.Label.Size.Large
            Text: |-
                =With(
                    {
                        varDefault: "Filter work items",
                        varOOBTextId: "lblFilterHeader__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Tooltip: =Self.Text
            Visible: =locFilterWorkItems
            Width: =lblFilterContainer.Width - 40
            X: =(Parent.Width - Self.Width) / 2
            Y: =lblFilterContainer.Y + 20
            ZIndex: =3

        btnClearFilter As button:
            BorderColor: =gblAppStyles.ButtonSecondary.BorderColor
            BorderThickness: =gblAppStyles.ButtonSecondary.BorderThickness
            Color: =gblAppStyles.ButtonSecondary.Color
            DisabledBorderColor: =gblAppStyles.ButtonSecondary.DisabledBorderColor
            DisabledColor: =gblAppStyles.ButtonSecondary.DisabledColor
            DisabledFill: =gblAppStyles.ButtonSecondary.DisabledFill
            Fill: =gblAppStyles.ButtonSecondary.Fill
            FocusedBorderColor: =gblAppStyles.ButtonSecondary.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.ButtonSecondary.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            Height: =32
            HoverBorderColor: =gblAppStyles.ButtonSecondary.HoverBorderColor
            HoverColor: =gblAppStyles.ButtonSecondary.HoverColor
            HoverFill: =gblAppStyles.ButtonSecondary.HoverFill
            OnSelect: |-
                =UpdateContext(
                    {
                        locFilterWorkItems: false,
                        locApplyFilter: false
                    }
                ); 
                Reset(cmbMilestones);
                Reset(cmbCategories);
                Reset(cmbPriorities);
                Reset(cmbTeamMembers);
                Reset(cmbStatuses);
                //set focus start
                UpdateContext({locSetFocusTimerStart: false});
                UpdateContext({locSetFocusControlTarget: "imgFilterWorkItems"});
                UpdateContext({locSetFocusTimerStart: true});
                //set focus end;
                //screen reader start
                UpdateContext(
                    {
                        locScreenReaderAnnouncedText: With(
                            {
                                varAnnouncedText: With(
                                    {
                                        varDefault: "Work item filters cleared and filter dialog closed",
                                        varOOBTextId: "btnClearFilter_Announcement"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            },
                            If(
                                locScreenReaderAnnouncedText = varAnnouncedText,
                                Concatenate(
                                    varAnnouncedText,
                                    " "
                                ),
                                varAnnouncedText
                            )
                        )
                    }
                );
                //screen reader end
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            PressedBorderColor: =gblAppStyles.ButtonSecondary.PressedBorderColor
            PressedColor: =gblAppStyles.ButtonSecondary.PressedColor
            PressedFill: =gblAppStyles.ButtonSecondary.PressedFill
            RadiusBottomLeft: =gblAppStyles.ButtonSecondary.RadiusBottomLeft
            RadiusBottomRight: =gblAppStyles.ButtonSecondary.RadiusBottomRight
            RadiusTopLeft: =gblAppStyles.ButtonSecondary.RadiusTopLeft
            RadiusTopRight: =gblAppStyles.ButtonSecondary.RadiusTopRight
            Size: =gblAppStyles.ButtonSecondary.Size
            TabIndex: |-
                =If(
                    locFilterWorkItems,
                    0,
                    -1
                )
            Text: |-
                =With(
                    {
                        varDefault: "Clear",
                        varOOBTextId: "btnClearFilter__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Tooltip: |-
                =With(
                    {
                        varDefault: "Click to clear filter",
                        varOOBTextId: "btnClearFilter__locTooltip"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Visible: =locFilterWorkItems
            Width: =97.90
            X: =lblFilterContainer.X+lblFilterContainer.Width - Self.Width - Self.Width - 50 
            Y: =lblFilterContainer.Y+lblFilterContainer.Height - Self.Height - 30 
            ZIndex: =6

        btnApplyFilter As button:
            BorderColor: =gblAppStyles.ButtonPrimary.BorderColor
            BorderThickness: =gblAppStyles.ButtonPrimary.BorderThickness
            Color: =gblAppStyles.ButtonPrimary.Color
            DisabledBorderColor: =gblAppStyles.ButtonPrimary.DisabledBorderColor
            DisabledColor: =gblAppStyles.ButtonPrimary.DisabledColor
            DisabledFill: =gblAppStyles.ButtonPrimary.DisabledFill
            Fill: =gblAppStyles.ButtonPrimary.Fill
            FocusedBorderColor: =gblAppStyles.ButtonPrimary.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.ButtonPrimary.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            Height: =32
            HoverBorderColor: =gblAppStyles.ButtonPrimary.HoverBorderColor
            HoverColor: =gblAppStyles.ButtonPrimary.HoverColor
            HoverFill: =gblAppStyles.ButtonPrimary.HoverFill
            OnSelect: |-
                =UpdateContext(
                    {
                        locApplyFilter: true,
                        locFilterWorkItems: false
                    }
                );
                //set focus start
                UpdateContext({locSetFocusTimerStart: false});
                UpdateContext({locSetFocusControlTarget: "imgFilterWorkItems"});
                UpdateContext({locSetFocusTimerStart: true});
                //set focus end;
                //screen reader start
                UpdateContext(
                    {
                        locScreenReaderAnnouncedText: With(
                            {
                                varAnnouncedText: With(
                                    {
                                        varDefault: "Filters applied to work items list",
                                        varOOBTextId: "btnApplyFilter_Announcement"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            },
                            If(
                                locScreenReaderAnnouncedText = varAnnouncedText,
                                Concatenate(
                                    varAnnouncedText,
                                    " "
                                ),
                                varAnnouncedText
                            )
                        )
                    }
                );
                //screen reader end
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            PressedBorderColor: =gblAppStyles.ButtonPrimary.PressedBorderColor
            PressedColor: =gblAppStyles.ButtonPrimary.PressedColor
            PressedFill: =gblAppStyles.ButtonPrimary.PressedFill
            RadiusBottomLeft: =gblAppStyles.ButtonPrimary.RadiusBottomLeft
            RadiusBottomRight: =gblAppStyles.ButtonPrimary.RadiusBottomRight
            RadiusTopLeft: =gblAppStyles.ButtonPrimary.RadiusTopLeft
            RadiusTopRight: =gblAppStyles.ButtonPrimary.RadiusTopRight
            Size: =gblAppStyles.ButtonSecondary.Size
            TabIndex: |-
                =If(
                    locFilterWorkItems,
                    0,
                    -1
                )
            Text: |-
                =With(
                    {
                        varDefault: "Apply",
                        varOOBTextId: "btnApplyFilter__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Tooltip: |-
                =With(
                    {
                        varDefault: "Click to apply filter to work items",
                        varOOBTextId: "btnApplyFilter__locTooltip"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Visible: =locFilterWorkItems
            Width: =97.90
            X: =lblFilterContainer.X+lblFilterContainer.Width - Self.Width - 40 
            Y: =lblFilterContainer.Y+lblFilterContainer.Height - Self.Height - 30 
            ZIndex: =8

        cmbMilestones As combobox:
            AccessibleLabel: |-
                =With(
                    {
                        varDefault: "Select milestones",
                        varOOBTextId: "cmbMilestones__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            BorderColor: =gblAppStyles.Dropdown.BorderColor
            BorderThickness: =gblAppStyles.Dropdown.BorderThickness
            ChevronBackground: =Self.Fill
            ChevronDisabledBackground: =gblAppStyles.Dropdown.ChevronDisabledBackground
            ChevronDisabledFill: =gblAppStyles.Dropdown.ChevronDisabledFill
            ChevronFill: =gblAppStyles.Dropdown.ChevronFill
            ChevronHoverBackground: =Self.Fill
            ChevronHoverFill: =gblAppStyles.Dropdown.ChevronHoverFill
            Color: =gblAppStyles.Dropdown.Color
            DisabledBorderColor: =gblAppStyles.Dropdown.DisabledBorderColor
            DisabledColor: =gblAppStyles.Dropdown.DisabledColor
            DisabledFill: =gblAppStyles.Dropdown.DisabledFill
            DisplayFields: =["msft_name"]
            Fill: =gblAppStyles.Background.Fill 
            FocusedBorderColor: =gblAppStyles.Dropdown.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.Dropdown.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            Height: =32*1
            HoverColor: =gblAppStyles.Dropdown.HoverColor
            HoverFill: =gblAppStyles.Dropdown.HoverFill
            InputTextPlaceholder: |-
                =With(
                    {
                        varDefault: "Select milestones",
                        varOOBTextId: "cmbMilestones__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Items: =gblProject.'Project Milestones'
            PressedBorderColor: =gblAppStyles.Dropdown.PressedBorderColor
            PressedColor: =gblAppStyles.Dropdown.PressedColor
            PressedFill: =Self.Fill
            SearchFields: =["msft_name"]
            SearchItems: =Search(gblProject.'Project Milestones',cmbMilestones.SearchText,"msft_name")
            SelectionColor: =gblAppStyles.Dropdown.SelectionColor
            SelectionFill: =gblAppStyles.Dropdown.SelectionFill
            SelectionTagColor: =gblAppStyles.Dropdown.SelectionColor
            SelectionTagFill: =gblAppStyles.Dropdown.SelectionFill
            Size: =gblAppStyles.Dropdown.Size
            TabIndex: |-
                =If(
                    locFilterWorkItems,
                    0,
                    -1
                )
            Tooltip: |-
                =With(
                    {
                        varDefault: "Select milestones",
                        varOOBTextId: "cmbMilestones__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Width: =lblFilterContainer.Width - (Self.X - lblFilterContainer.X) - 35
            X: =imgMilestonesFilter.X+50
            Y: =lblFilterHeader.Y + lblFilterHeader.Height + 20
            ZIndex: =9

        cmbCategories As combobox:
            AccessibleLabel: |-
                =With(
                    {
                        varDefault: "Select categories",
                        varOOBTextId: "cmbCategories__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            BorderColor: =gblAppStyles.Dropdown.BorderColor
            BorderThickness: =gblAppStyles.Dropdown.BorderThickness
            ChevronBackground: =Self.Fill 
            ChevronDisabledBackground: =gblAppStyles.Dropdown.ChevronDisabledBackground
            ChevronDisabledFill: =gblAppStyles.Dropdown.ChevronDisabledFill
            ChevronFill: =gblAppStyles.Dropdown.ChevronFill
            ChevronHoverBackground: =Self.Fill 
            ChevronHoverFill: =gblAppStyles.Dropdown.ChevronHoverFill
            Color: =gblAppStyles.Dropdown.Color
            DisabledBorderColor: =gblAppStyles.Dropdown.DisabledBorderColor
            DisabledColor: =gblAppStyles.Dropdown.DisabledColor
            DisabledFill: =gblAppStyles.Dropdown.DisabledFill
            DisplayFields: =["msft_name"]
            Fill: =gblAppStyles.Background.Fill
            FocusedBorderColor: =gblAppStyles.Dropdown.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.Dropdown.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            Height: =32*1
            HoverFill: =gblAppStyles.Dropdown.HoverFill
            InputTextPlaceholder: |-
                =With(
                    {
                        varDefault: "Select categories",
                        varOOBTextId: "cmbCategories__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Items: ='Project Work Item Categories'
            SearchFields: =["msft_name"]
            SearchItems: =Search('Project Work Item Categories',cmbCategories.SearchText,"msft_name")
            SelectionColor: =gblAppStyles.Dropdown.SelectionColor
            SelectionFill: =gblAppStyles.Dropdown.SelectionFill
            SelectionTagColor: =gblAppStyles.Dropdown.SelectionColor
            SelectionTagFill: =gblAppStyles.Dropdown.SelectionFill
            Size: =gblAppStyles.Dropdown.Size
            TabIndex: |-
                =If(
                    locFilterWorkItems,
                    0,
                    -1
                )
            Tooltip: |-
                =With(
                    {
                        varDefault: "Select categories",
                        varOOBTextId: "cmbCategories__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Width: =cmbMilestones.Width
            X: =cmbMilestones.X
            Y: =cmbMilestones.Y + cmbMilestones.Height + 10
            ZIndex: =10

        cmbPriorities As combobox:
            AccessibleLabel: |-
                =With(
                    {
                        varDefault: "Select priorities",
                        varOOBTextId: "cmbPriorities__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            BorderColor: =gblAppStyles.Dropdown.BorderColor
            BorderThickness: =gblAppStyles.Dropdown.BorderThickness
            ChevronBackground: =Self.Fill
            ChevronDisabledBackground: =gblAppStyles.Dropdown.ChevronDisabledBackground
            ChevronDisabledFill: =gblAppStyles.Dropdown.ChevronDisabledFill
            ChevronFill: =gblAppStyles.Dropdown.ChevronFill
            ChevronHoverBackground: =Self.Fill 
            ChevronHoverFill: =gblAppStyles.Dropdown.ChevronHoverFill
            Color: =gblAppStyles.Dropdown.Color
            DisabledBorderColor: =gblAppStyles.Dropdown.DisabledBorderColor
            DisabledColor: =gblAppStyles.Dropdown.DisabledColor
            DisabledFill: =gblAppStyles.Dropdown.DisabledFill
            DisplayFields: =["msft_name"]
            Fill: =gblAppStyles.Background.Fill 
            FocusedBorderColor: =gblAppStyles.Dropdown.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.Dropdown.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            Height: =32*1
            HoverFill: =gblAppStyles.Dropdown.HoverFill
            InputTextPlaceholder: |-
                =With(
                    {
                        varDefault: "Select priorities",
                        varOOBTextId: "cmbPriorities__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Items: ='Project Work Item Priorities'
            SearchFields: =["msft_name"]
            SearchItems: =Search('Project Work Item Priorities',cmbPriorities.SearchText,"msft_name")
            SelectionColor: =gblAppStyles.Dropdown.SelectionColor
            SelectionFill: =gblAppStyles.Dropdown.SelectionFill
            SelectionTagColor: =gblAppStyles.Dropdown.SelectionColor
            SelectionTagFill: =gblAppStyles.Dropdown.SelectionFill
            Size: =gblAppStyles.Dropdown.Size
            TabIndex: |-
                =If(
                    locFilterWorkItems,
                    0,
                    -1
                )
            Tooltip: |-
                =With(
                    {
                        varDefault: "Select priorities",
                        varOOBTextId: "cmbPriorities__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Width: =cmbMilestones.Width
            X: =cmbMilestones.X
            Y: =cmbCategories.Y + cmbCategories.Height + 10
            ZIndex: =11

        cmbTeamMembers As combobox:
            AccessibleLabel: |-
                =With(
                    {
                        varDefault: "Select team members",
                        varOOBTextId: "cmbTeamMembers__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            BorderColor: =gblAppStyles.Dropdown.BorderColor
            BorderThickness: =gblAppStyles.Dropdown.BorderThickness
            ChevronBackground: =Self.Fill
            ChevronDisabledBackground: =gblAppStyles.Dropdown.ChevronDisabledBackground
            ChevronDisabledFill: =gblAppStyles.Dropdown.ChevronDisabledFill
            ChevronFill: =gblAppStyles.Dropdown.ChevronFill
            ChevronHoverBackground: =Self.Fill
            ChevronHoverFill: =gblAppStyles.Dropdown.ChevronHoverFill
            Color: =gblAppStyles.Dropdown.Color
            DisabledBorderColor: =gblAppStyles.Dropdown.DisabledBorderColor
            DisabledColor: =gblAppStyles.Dropdown.DisabledColor
            DisabledFill: =gblAppStyles.Dropdown.DisabledFill
            DisplayFields: =["msft_name"]
            Fill: =gblAppStyles.Background.Fill
            FocusedBorderColor: =gblAppStyles.Dropdown.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.Dropdown.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            Height: =32*1
            HoverFill: =gblAppStyles.Dropdown.HoverFill
            InputTextPlaceholder: |-
                =With(
                    {
                        varDefault: "Select team members",
                        varOOBTextId: "cmbTeamMembers__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Items: =gblProject.'Project Team Members'
            SearchFields: =["msft_name"]
            SearchItems: =Search(gblProject.'Project Team Members',cmbTeamMembers.SearchText,"msft_name")
            SelectionColor: =gblAppStyles.Dropdown.SelectionColor
            SelectionFill: =gblAppStyles.Dropdown.SelectionFill
            SelectionTagColor: =gblAppStyles.Dropdown.SelectionColor
            SelectionTagFill: =gblAppStyles.Dropdown.SelectionFill
            Size: =gblAppStyles.Dropdown.Size
            TabIndex: |-
                =If(
                    locFilterWorkItems,
                    0,
                    -1
                )
            Tooltip: |-
                =With(
                    {
                        varDefault: "Select team members",
                        varOOBTextId: "cmbTeamMembers__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Width: =cmbMilestones.Width
            X: =cmbMilestones.X
            Y: =cmbPriorities.Y + cmbPriorities.Height + 10
            ZIndex: =12

        cmbStatuses As combobox:
            AccessibleLabel: |-
                =With(
                    {
                        varDefault: "Select statuses",
                        varOOBTextId: "cmbStatuses__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            BorderColor: =gblAppStyles.Dropdown.BorderColor
            BorderThickness: =gblAppStyles.Dropdown.BorderThickness
            ChevronBackground: =Self.Fill
            ChevronDisabledBackground: =gblAppStyles.Dropdown.ChevronDisabledBackground
            ChevronDisabledFill: =gblAppStyles.Dropdown.ChevronDisabledFill
            ChevronFill: =gblAppStyles.Dropdown.ChevronFill
            ChevronHoverBackground: =Self.Fill
            ChevronHoverFill: =gblAppStyles.Dropdown.ChevronHoverFill
            Color: =gblAppStyles.Dropdown.Color
            DisabledBorderColor: =gblAppStyles.Dropdown.DisabledBorderColor
            DisabledColor: =gblAppStyles.Dropdown.DisabledColor
            DisabledFill: =gblAppStyles.Dropdown.DisabledFill
            DisplayFields: =["msft_name"]
            Fill: =gblAppStyles.Background.Fill
            FocusedBorderColor: =gblAppStyles.Dropdown.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.Dropdown.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            Height: =32*1
            HoverFill: =gblAppStyles.Dropdown.HoverFill
            InputTextPlaceholder: |-
                =With(
                    {
                        varDefault: "Select statuses",
                        varOOBTextId: "cmbStatuses__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Items: ='Project Work Item Statuses'
            OnChange: =
            SearchFields: =["msft_name"]
            SearchItems: =Search('Project Work Item Statuses',cmbStatuses.SearchText,"msft_name")
            SelectionColor: =gblAppStyles.Dropdown.SelectionColor
            SelectionFill: =gblAppStyles.Dropdown.SelectionFill
            SelectionTagColor: =gblAppStyles.Dropdown.SelectionColor
            SelectionTagFill: =gblAppStyles.Dropdown.SelectionFill
            Size: =gblAppStyles.Dropdown.Size
            TabIndex: |-
                =If(
                    locFilterWorkItems,
                    0,
                    -1
                )
            Tooltip: |-
                =With(
                    {
                        varDefault: "Select statuses",
                        varOOBTextId: "cmbStatuses__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Width: =cmbMilestones.Width
            X: =cmbMilestones.X
            Y: =cmbTeamMembers.Y + cmbTeamMembers.Height + 10
            ZIndex: =13

        imgMilestonesFilter As image:
            AccessibleLabel: |-
                =With(
                    {
                        varDefault: "Milestones",
                        varOOBTextId: "imgMilestonesFilter__locAccessibleText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            DisabledFill: |-
                =With(
                    {
                        varImageIsCategory: LookUp(
                            staticIcons,
                            staticIconName = "Calendar"
                        ).staticIconIsCategory
                    },
                    If(
                        varImageIsCategory,
                        gblAppStyles.Icons.DisabledFill_Category,
                        Transparent
                    )
                )
            Fill: |-
                =With(
                    {
                        varImageIsCategory: LookUp(
                            staticIcons,
                            staticIconName = "Calendar"
                        ).staticIconIsCategory
                    },
                    If(
                        varImageIsCategory,
                        gblAppStyles.Icons.Fill_Category,
                        Transparent
                    )
                )
            Height: =20
            Image: |
                =With(
                    {
                        varImageRecord: LookUp(
                            staticIcons,
                            staticIconName = "Calendar"
                        ),
                        varColor: If(
                            Self.DisplayMode = DisplayMode.Disabled,
                            gblAppStyles.Icons.DisabledColor,
                            gblAppStyles.Icons.Color
                        )
                    },
                    With(
                        {
                            varImageData: Concatenate(
                                "data:image/svg+xml;utf8, ",
                                EncodeUrl(
                                    Concatenate(
                                        "<svg viewBox='",
                                        varImageRecord.staticIconViewbox,
                                        "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                        varImageRecord.staticIconPath,
                                        "' fill='#",
                                        varColor,
                                        "'/></svg>"
                                    )
                                )
                            )
                        },
                        varImageData
                    )
                )
            OnSelect: |-
                =UpdateContext(
                    {
                        locSortWorkItemBy: "title",
                        locWorkItemSortOrder: !locWorkItemSortOrder
                    }
                )
            TabIndex: |-
                =If(
                    true,
                    -1,
                    0
                )
            Tooltip: =Self.AccessibleLabel
            Width: =20
            X: =lblFilterHeader.X + 15
            Y: =cmbMilestones.Y + (cmbMilestones.Height - Self.Height) / 2
            ZIndex: =14

        imgCategoriesFilter As image:
            AccessibleLabel: |-
                =With(
                    {
                        varDefault: "Categories",
                        varOOBTextId: "imgCategoriesFilter__locAccessibleText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            DisabledFill: |-
                =With(
                    {
                        varImageIsCategory: LookUp(
                            staticIcons,
                            staticIconName = "Category"
                        ).staticIconIsCategory
                    },
                    If(
                        varImageIsCategory,
                        gblAppStyles.Icons.DisabledFill_Category,
                        Transparent
                    )
                )
            Fill: |-
                =With(
                    {
                        varImageIsCategory: LookUp(
                            staticIcons,
                            staticIconName = "Category"
                        ).staticIconIsCategory
                    },
                    If(
                        varImageIsCategory,
                        gblAppStyles.Icons.Fill_Category,
                        Transparent
                    )
                )
            Height: =20
            Image: |-
                =With(
                    {
                        varImageRecord: LookUp(
                            staticIcons,
                            staticIconName = "Category"
                        ),
                        varColor: If(
                            Self.DisplayMode = DisplayMode.Disabled,
                            gblAppStyles.Icons.DisabledColor,
                            gblAppStyles.Icons.Color
                        )
                    },
                    With(
                        {
                            varImageData: Concatenate(
                                "data:image/svg+xml;utf8, ",
                                EncodeUrl(
                                    Concatenate(
                                        "<svg viewBox='",
                                        varImageRecord.staticIconViewbox,
                                        "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                        varImageRecord.staticIconPath,
                                        "' fill='#",
                                        varColor,
                                        "'/></svg>"
                                    )
                                )
                            )
                        },
                        varImageData
                    )
                )
            OnSelect: |-
                =UpdateContext(
                    {
                        locSortWorkItemBy: "title",
                        locWorkItemSortOrder: !locWorkItemSortOrder
                    }
                )
            TabIndex: |-
                =If(
                    true,
                    -1,
                    0
                )
            Tooltip: =Self.AccessibleLabel
            Width: =20
            X: =lblFilterHeader.X + 15
            Y: =cmbCategories.Y + (cmbCategories.Height - Self.Height) / 2
            ZIndex: =15

        imgPrioritiesFilter As image:
            AccessibleLabel: |-
                =With(
                    {
                        varDefault: "Priorities",
                        varOOBTextId: "imgPrioritiesFilter__locAccessibleText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            DisabledFill: |-
                =With(
                    {
                        varImageIsCategory: LookUp(
                            staticIcons,
                            staticIconName = "Priority"
                        ).staticIconIsCategory
                    },
                    If(
                        varImageIsCategory,
                        gblAppStyles.Icons.DisabledFill_Category,
                        Transparent
                    )
                )
            Fill: |-
                =With(
                    {
                        varImageIsCategory: LookUp(
                            staticIcons,
                            staticIconName = "Priority"
                        ).staticIconIsCategory
                    },
                    If(
                        varImageIsCategory,
                        gblAppStyles.Icons.Fill_Category,
                        Transparent
                    )
                )
            Height: =20
            Image: |-
                =With(
                    {
                        varImageRecord: LookUp(
                            staticIcons,
                            staticIconName = "Priority"
                        ),
                        varColor: If(
                            Self.DisplayMode = DisplayMode.Disabled,
                            gblAppStyles.Icons.DisabledColor,
                            gblAppStyles.Icons.Color
                        )
                    },
                    With(
                        {
                            varImageData: Concatenate(
                                "data:image/svg+xml;utf8, ",
                                EncodeUrl(
                                    Concatenate(
                                        "<svg viewBox='",
                                        varImageRecord.staticIconViewbox,
                                        "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                        varImageRecord.staticIconPath,
                                        "' fill='#",
                                        varColor,
                                        "'/></svg>"
                                    )
                                )
                            )
                        },
                        varImageData
                    )
                )
            OnSelect: |-
                =UpdateContext(
                    {
                        locSortWorkItemBy: "title",
                        locWorkItemSortOrder: !locWorkItemSortOrder
                    }
                )
            TabIndex: |-
                =If(
                    true,
                    -1,
                    0
                )
            Tooltip: =Self.AccessibleLabel
            Width: =20
            X: =lblFilterHeader.X + 15
            Y: =cmbPriorities.Y + (cmbPriorities.Height - Self.Height) / 2
            ZIndex: =16

        imgTeamMembersFilter As image:
            AccessibleLabel: |-
                =With(
                    {
                        varDefault: "Team members",
                        varOOBTextId: "imgTeamMembersFilter__locAccessibleText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            DisabledFill: |-
                =With(
                    {
                        varImageIsCategory: LookUp(
                            staticIcons,
                            staticIconName = "Person"
                        ).staticIconIsCategory
                    },
                    If(
                        varImageIsCategory,
                        gblAppStyles.Icons.DisabledFill_Category,
                        Transparent
                    )
                )
            Fill: |-
                =With(
                    {
                        varImageIsCategory: LookUp(
                            staticIcons,
                            staticIconName = "Person"
                        ).staticIconIsCategory
                    },
                    If(
                        varImageIsCategory,
                        gblAppStyles.Icons.Fill_Category,
                        Transparent
                    )
                )
            Height: =20
            Image: |-
                =With(
                    {
                        varImageRecord: LookUp(
                            staticIcons,
                            staticIconName = "Person"
                        ),
                        varColor: If(
                            Self.DisplayMode = DisplayMode.Disabled,
                            gblAppStyles.Icons.DisabledColor,
                            gblAppStyles.Icons.Color
                        )
                    },
                    With(
                        {
                            varImageData: Concatenate(
                                "data:image/svg+xml;utf8, ",
                                EncodeUrl(
                                    Concatenate(
                                        "<svg viewBox='",
                                        varImageRecord.staticIconViewbox,
                                        "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                        varImageRecord.staticIconPath,
                                        "' fill='#",
                                        varColor,
                                        "'/></svg>"
                                    )
                                )
                            )
                        },
                        varImageData
                    )
                )
            OnSelect: |-
                =UpdateContext(
                    {
                        locSortWorkItemBy: "title",
                        locWorkItemSortOrder: !locWorkItemSortOrder
                    }
                )
            TabIndex: |-
                =If(
                    true,
                    -1,
                    0
                )
            Tooltip: =Self.AccessibleLabel
            Width: =20
            X: =lblFilterHeader.X + 15
            Y: =cmbTeamMembers.Y + (cmbTeamMembers.Height - Self.Height) / 2
            ZIndex: =17

        imgStatusesFilter As image:
            AccessibleLabel: |-
                =With(
                    {
                        varDefault: "Statuses",
                        varOOBTextId: "imgStatusesFilter__locAccessibleText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            DisabledFill: |-
                =With(
                    {
                        varImageIsCategory: LookUp(
                            staticIcons,
                            staticIconName = "Status"
                        ).staticIconIsCategory
                    },
                    If(
                        varImageIsCategory,
                        gblAppStyles.Icons.DisabledFill_Category,
                        Transparent
                    )
                )
            Fill: |-
                =With(
                    {
                        varImageIsCategory: LookUp(
                            staticIcons,
                            staticIconName = "Status"
                        ).staticIconIsCategory
                    },
                    If(
                        varImageIsCategory,
                        gblAppStyles.Icons.Fill_Category,
                        Transparent
                    )
                )
            Height: =20
            Image: |-
                =With(
                    {
                        varImageRecord: LookUp(
                            staticIcons,
                            staticIconName = "Status"
                        ),
                        varColor: If(
                            Self.DisplayMode = DisplayMode.Disabled,
                            gblAppStyles.Icons.DisabledColor,
                            gblAppStyles.Icons.Color
                        )
                    },
                    With(
                        {
                            varImageData: Concatenate(
                                "data:image/svg+xml;utf8, ",
                                EncodeUrl(
                                    Concatenate(
                                        "<svg viewBox='",
                                        varImageRecord.staticIconViewbox,
                                        "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                        varImageRecord.staticIconPath,
                                        "' fill='#",
                                        varColor,
                                        "'/></svg>"
                                    )
                                )
                            )
                        },
                        varImageData
                    )
                )
            OnSelect: |-
                =UpdateContext(
                    {
                        locSortWorkItemBy: "title",
                        locWorkItemSortOrder: !locWorkItemSortOrder
                    }
                )
            TabIndex: |-
                =If(
                    true,
                    -1,
                    0
                )
            Tooltip: =Self.AccessibleLabel
            Width: =20
            X: =lblFilterHeader.X + 15
            Y: =cmbStatuses.Y + (cmbStatuses.Height - Self.Height) / 2
            ZIndex: =18

        imgCloseFilter As image:
            AccessibleLabel: |-
                =With(
                    {
                        varDefault: "Click to close update creation",
                        varOOBTextId: "imgCloseAddActivity__locAccessibleText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Height: =22*1
            Image: |
                =With(
                    {
                        varImageRecord: LookUp(
                            staticIcons,
                            staticIconName = "Dismiss"
                        ),
                        varColor: If(
                            Self.DisplayMode = DisplayMode.Disabled,
                            gblAppStyles.Icons.DisabledColor,
                            gblAppStyles.Icons.Color
                        )
                    },
                    With(
                        {
                            varImageData: Concatenate(
                                "data:image/svg+xml;utf8, ",
                                EncodeUrl(
                                    Concatenate(
                                        "<svg viewBox='",
                                        varImageRecord.staticIconViewbox,
                                        "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                        varImageRecord.staticIconPath,
                                        "' fill='#",
                                        varColor,
                                        "'/></svg>"
                                    )
                                )
                            )
                        },
                        varImageData
                    )
                )
            OnSelect: |-
                =UpdateContext(
                    {
                        locFilterWorkItems: false,
                        locApplyFilter: false
                    }
                ); 
                Reset(cmbMilestones);
                Reset(cmbCategories);
                Reset(cmbPriorities);
                Reset(cmbTeamMembers);
                Reset(cmbStatuses);
                //set focus start
                UpdateContext({locSetFocusTimerStart: false});
                UpdateContext({locSetFocusControlTarget: "imgFilterWorkItems"});
                UpdateContext({locSetFocusTimerStart: true});
                //set focus end;
                //screen reader start
                UpdateContext(
                    {
                        locScreenReaderAnnouncedText: With(
                            {
                                varAnnouncedText: With(
                                    {
                                        varDefault: "Work item filters cleared and filter dialog closed",
                                        varOOBTextId: "btnClearFilter_Announcement"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            },
                            If(
                                locScreenReaderAnnouncedText = varAnnouncedText,
                                Concatenate(
                                    varAnnouncedText,
                                    " "
                                ),
                                varAnnouncedText
                            )
                        )
                    }
                );
                //screen reader end
            PaddingBottom: =2
            PaddingLeft: =2
            PaddingRight: =2
            PaddingTop: =2
            TabIndex: |-
                =If(
                    locFilterWorkItems,
                    0,
                    -1
                )
            Tooltip: =Self.AccessibleLabel
            Visible: =locFilterWorkItems
            Width: =22*1
            X: =lblFilterContainer.X + lblFilterContainer.Width - Self.Width - 20
            Y: =lblFilterContainer.Y + Self.Height
            ZIndex: =19

    conProjectCovers As groupContainer:
        Height: =Parent.Height
        Visible: =locVisibleCoverSelection
        Width: =Parent.Width
        X: =0*0
        Y: =0*0
        ZIndex: =8

        lblProjectCoverBackground As label:
            BorderColor: =Transparent
            Color: =Transparent
            DisabledColor: =Transparent
            Fill: |-
                =If(
                    gblThemeDark Or gblThemeHiCo,
                    gblAppColors.OverlayLight,
                    gblAppColors.OverlayDark
                )
            FocusedBorderThickness: =1
            Font: =Font.'Segoe UI'
            Height: =Parent.Height
            OnSelect: |-
                =UpdateContext(
                    {
                        locVisibleCoverSelection: false,
                        locCoverChanged: false
                    }
                );
                //set focus start
                UpdateContext({locSetFocusTimerStart: false});
                UpdateContext({locSetFocusControlTarget: "imgProjectImage"});
                UpdateContext({locSetFocusTimerStart: true});
                //set focus end
                //screen reader start
                UpdateContext(
                    {
                        locScreenReaderAnnouncedText: With(
                            {
                                varAnnouncedText: With(
                                    {
                                        varDefault: "Closing the dialog to update project cover",
                                        varOOBTextId: "imgCloseCoverSelection_Announcement"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            },
                            If(
                                locScreenReaderAnnouncedText = varAnnouncedText,
                                Concatenate(
                                    varAnnouncedText,
                                    " "
                                ),
                                varAnnouncedText
                            )
                        )
                    }
                );
                //screen reader end
            Size: =gblAppStyles.Label.Size.Medium
            TabIndex: |-
                =If(
                    true,
                    -1,
                    0
                )
            Text: |-
                =With(
                    {
                        varDefault: "Overlay for project cover dialog",
                        varOOBTextId: "lblProjectCoverBackground__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Tooltip: =Self.Text
            Visible: =locVisibleCoverSelection
            Width: =Parent.Width
            X: =0*0
            Y: =0*0
            ZIndex: =1

        lblProjectCoverContainer As label:
            BorderColor: =gblAppStyles.TextInput.Color
            BorderThickness: |-
                =If(
                    gblThemeHiCo,
                    1,
                    0
                )
            Color: =Transparent
            DisabledColor: =Transparent
            Fill: =gblAppStyles.TextInput.Fill
            Font: =Font.'Segoe UI'
            Height: =500
            Size: =gblAppStyles.Label.Size.Medium
            Text: |-
                =With(
                    {
                        varDefault: "Container for project cover selection dialog",
                        varOOBTextId: "lblProjectCoverContainer__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Visible: =locVisibleCoverSelection
            Width: =650
            X: =(Parent.Width - Self.Width) / 2
            Y: =(Parent.Height - Self.Height) / 2
            ZIndex: =2

        galProjectCovers As gallery.galleryHorizontal:
            AccessibleLabel: |-
                =With(
                    {
                        varDefault: "List of stock images for a project",
                        varOOBTextId: "galProjectCovers__locAccessibleText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            BorderColor: =gblAppStyles.ButtonSecondary.FocusedBorderColor
            Default: |-
                =If(
                    IsBlank(
                        LookUp(
                            colStockImages,
                            appStockImage = LookUp(
                                Projects,
                                Project = gblProject.Project
                            ).'Cover Icon'
                        )
                    ),
                    {},
                    LookUp(
                        colStockImages,
                        appStockImage = LookUp(
                            Projects,
                            Project = gblProject.Project,
                            'Cover Icon'
                        )
                    )
                )
            Fill: =gblAppStyles.Background.Fill
            FocusedBorderThickness: =2
            Height: =(imgProjectCover.Height + 10) * 3
            ItemAccessibleLabel: |-
                =If(
                    ThisItem.IsSelected,
                    With(
                        {
                            varDefault: "Selected",
                            varOOBTextId: "galSelected_Announcement"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    ),
                    With(
                        {
                            varDefault: "Not selected",
                            varOOBTextId: "galNotSelected_Announcement"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                )
            Items: =colStockImages
            OnSelect: |+
                =UpdateContext(
                    {
                        locCoverImageSelected: true,
                        locCoverColorSelected: false,
                        locCoverChanged: true,
                        locCustomImageSelected: false
                    }
                );
                
            TabIndex: |-
                =If(
                    locVisibleCoverSelection,
                    0,
                    -1
                )
            TemplateFill: =Transparent
            TemplatePadding: =0
            TemplateSize: =Self.Width / 5
            Visible: =locVisibleCoverSelection
            Width: =Parent.Width - (Self.X * 2)
            WrapCount: =3
            X: =lblProjectCoverContainer.X+25
            Y: =lblProjectCoverImages.Y + lblProjectCoverImages.Height
            ZIndex: =3

            btnProjectCoverBackground As button:
                BorderColor: =Transparent
                Color: =gblAppStyles.ButtonBackground.Color
                DisabledBorderColor: =Transparent
                DisabledColor: =gblAppStyles.ButtonBackground.DisabledColor
                DisabledFill: |-
                    =If(
                        locCustomImageSelected,
                        If(
                            IsBlank(ThisItem.appStockImage),
                            gblAppStyles.ButtonPrimary.Fill,
                            Transparent
                        ),
                        If(
                            ThisItem.IsSelected,
                            gblAppStyles.ButtonPrimary.Fill,
                            Transparent
                        )
                    )
                Fill: |-
                    =If(
                        locCustomImageSelected,
                        If(
                            IsBlank(ThisItem.appStockImage),
                            gblAppStyles.ButtonPrimary.Fill,
                            Transparent
                        ),
                        If(
                            ThisItem.IsSelected,
                            gblAppStyles.ButtonPrimary.Fill,
                            Transparent
                        )
                    )
                FocusedBorderColor: =gblAppStyles.ButtonSecondary.FocusedBorderColor
                FocusedBorderThickness: =2
                Font: =Font.'Segoe UI'
                Height: =imgProjectCover.Height + 4
                HoverBorderColor: =gblAppStyles.ButtonBackground.HoverBorderColor
                HoverColor: =gblAppStyles.ButtonBackground.HoverColor
                HoverFill: =gblAppStyles.ButtonBackground.HoverFill
                OnSelect: =Select(Parent)
                PressedBorderColor: =gblAppStyles.ButtonBackground.PressedBorderColor
                PressedColor: =gblAppStyles.ButtonBackground.PressedColor
                PressedFill: =gblAppStyles.ButtonBackground.PressedFill
                RadiusBottomLeft: =4
                RadiusBottomRight: =4
                RadiusTopLeft: =4
                RadiusTopRight: =4
                Size: =gblAppStyles.ButtonBackground.Size
                TabIndex: |-
                    =If(
                        locVisibleCoverSelection,
                        If(
                            !IsBlank(ThisItem.appStockImage),
                            0,
                            -1
                        )
                    )
                Text: |-
                    =With(
                        {
                            varDefault: "Click to select this stock image",
                            varOOBTextId: "imgProjectCover__locAccessibleText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Tooltip: =Self.Text
                Visible: =!IsBlank(ThisItem.appStockImage)
                Width: =imgProjectCover.Width + 4
                X: =imgProjectCover.X - 2
                Y: =imgProjectCover.Y - 2
                ZIndex: =1

            imgProjectCover As image:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Click to select this stock image",
                            varOOBTextId: "imgProjectCover__locAccessibleText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                BorderColor: =Transparent
                BorderThickness: =1
                Fill: |-
                    =If(
                        IsBlank(ThisItem.appStockImage),
                        gblAppStyles.ButtonSecondary.Fill,
                        Transparent
                    )
                Height: =60
                HoverBorderColor: =gblAppStyles.ButtonPrimary.Fill
                HoverFill: =Black
                Image: |-
                    =Coalesce(
                        ThisItem.appStockImage,
                        addProjectCoverImage.Media
                    )
                ImagePosition: =ImagePosition.Fill
                OnSelect: |
                    =Select(Parent);
                    UpdateContext(
                        {
                            locCustomImageSelected: false
                        }
                    );
                PressedBorderColor: =ColorFade(Self.HoverBorderColor, -20%)
                RadiusBottomLeft: =4
                RadiusBottomRight: =4
                RadiusTopLeft: =4
                RadiusTopRight: =4
                TabIndex: |-
                    =If(
                        true,
                        -1,
                        0
                    )
                Tooltip: =Self.AccessibleLabel
                Width: =Parent.TemplateWidth - (Self.X * 2)
                X: =5
                Y: =5
                ZIndex: =2

        addProjectCoverImage As addMedia:
            AccessibleLabel: |-
                =With(
                    {
                        varDefault: "Click to add your own image for this project",
                        varOOBTextId: "addProjectCoverImage__locAccessibleText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            BorderColor: =gblAppStyles.ButtonSecondary.BorderColor
            BorderThickness: =gblAppStyles.ButtonSecondary.BorderThickness
            ChangePictureText: |-
                =With(
                    {
                        varDefault: "Update",
                        varOOBTextId: "addProjectCoverImage__locChangePictureText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Color: =gblAppStyles.ButtonSecondary.Color
            DisabledBorderColor: =gblAppStyles.ButtonSecondary.DisabledBorderColor
            DisabledColor: =gblAppStyles.ButtonSecondary.DisabledColor
            DisabledFill: =gblAppStyles.ButtonSecondary.DisabledFill
            Fill: =gblAppStyles.ButtonSecondary.Fill
            FocusedBorderColor: =gblAppStyles.ButtonSecondary.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.ButtonSecondary.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Normal
            Height: =imgProjectCover.Height
            HoverBorderColor: =gblAppStyles.ButtonSecondary.HoverBorderColor
            HoverColor: =gblAppStyles.ButtonSecondary.HoverColor
            HoverFill: =gblAppStyles.ButtonSecondary.HoverFill
            OnChange: |
                =UpdateContext(
                    {
                        locCoverChanged: true
                    }
                );
            OnSelect: |-
                =UpdateContext(
                    {
                        locCustomImageSelected: true,
                        locCoverImageSelected: true,
                        locCoverColorSelected: false
                    }
                )
            Padding: =4
            PressedBorderColor: =gblAppStyles.ButtonSecondary.PressedBorderColor
            PressedColor: =gblAppStyles.ButtonSecondary.PressedColor
            PressedFill: =gblAppStyles.ButtonSecondary.PressedFill
            Reset: =locResetAddProjectCoverImage
            Size: =gblAppStyles.Label.Size.Small
            TabIndex: |-
                =If(
                    locVisibleCoverSelection,
                    0,
                    -1
                )
            Text: |-
                ="+ " & With(
                    {
                        varDefault: "Add new",
                        varOOBTextId: "addProjectCoverImage__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Tooltip: =Self.Text
            Width: =galProjectCovers.TemplateWidth - 8
            X: =galProjectCovers.X + imgProjectCover.X
            Y: =galProjectCovers.Y + imgProjectCover.Y
            ZIndex: =4

        lblProjectTheme As label:
            BorderColor: =gblAppStyles.Label.BorderColor
            BorderThickness: =gblAppStyles.Label.BorderThickness
            Color: =gblAppStyles.Label.Color
            DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
            DisabledColor: =gblAppStyles.Label.DisabledColor
            DisabledFill: =gblAppStyles.Label.DisabledFill
            Fill: =gblAppStyles.Label.Fill
            FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Bold
            Height: =40*1
            HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
            HoverColor: =gblAppStyles.Label.HoverColor
            HoverFill: =gblAppStyles.Label.HoverFill
            PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
            PressedColor: =gblAppStyles.Label.PressedColor
            PressedFill: =gblAppStyles.Label.PressedFill
            Role: =TextRole.Heading1
            Size: =gblAppStyles.Label.Size.Large
            Text: |-
                =With(
                    {
                        varDefault: "Project theme",
                        varOOBTextId: "lblProjectTheme__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Tooltip: =Self.Text
            Width: =250*1
            X: =lblProjectCoverContainer.X + 20
            Y: =lblProjectCoverContainer.Y + 20
            ZIndex: =5

        lblProjectCoverColor As label:
            BorderColor: =gblAppStyles.Label.BorderColor
            BorderThickness: =gblAppStyles.Label.BorderThickness
            Color: =gblAppStyles.Label.Color
            DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
            DisabledColor: =gblAppStyles.Label.DisabledColor
            DisabledFill: =gblAppStyles.Label.DisabledFill
            Fill: =gblAppStyles.Label.Fill
            FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Bold
            Height: =40*1
            HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
            HoverColor: =gblAppStyles.Label.HoverColor
            HoverFill: =gblAppStyles.Label.HoverFill
            PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
            PressedColor: =gblAppStyles.Label.PressedColor
            PressedFill: =gblAppStyles.Label.PressedFill
            Size: =gblAppStyles.Label.Size.Medium
            Text: |-
                =With(
                    {
                        varDefault: "Color",
                        varOOBTextId: "lblProjectCoverColor__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Tooltip: =Self.Text
            Width: =250*1
            X: =lblProjectCoverContainer.X + 20
            Y: =lblProjectTheme.Y + lblProjectTheme.Height
            ZIndex: =6

        galProjectColors As gallery.galleryHorizontal:
            AccessibleLabel: |-
                =With(
                    {
                        varDefault: "List of colors",
                        varOOBTextId: "galProjectColors__locAccessibleText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            BorderColor: =gblAppStyles.ButtonSecondary.FocusedBorderColor
            Default: |-
                =If(
                    gblThemeDark,
                    If(
                        IsBlank(
                            LookUp(
                                colProjectCoverColors,
                                Color = LookUp(
                                    Projects,
                                    Project = gblProject.Project,
                                    'Cover Color Dark'
                                )
                            )
                        ),
                        {},
                        LookUp(
                            colProjectCoverColors,
                            Color = LookUp(
                                Projects,
                                Project = gblProject.Project,
                                'Cover Color Dark'
                            )
                        )
                    ),
                    If(
                        IsBlank(
                            LookUp(
                                colProjectCoverColors,
                                Color = LookUp(
                                    Projects,
                                    Project = gblProject.Project,
                                    'Cover Color'
                                )
                            )
                        ),
                        {},
                        LookUp(
                            colProjectCoverColors,
                            Color = LookUp(
                                Projects,
                                Project = gblProject.Project,
                                'Cover Color'
                            )
                        )
                    )
                )
            Fill: =Transparent
            FocusedBorderThickness: =2
            Height: =42
            ItemAccessibleLabel: |-
                =If(
                    ThisItem.IsSelected,
                    With(
                        {
                            varDefault: "Selected",
                            varOOBTextId: "galSelected_Announcement"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    ),
                    With(
                        {
                            varDefault: "Not selected",
                            varOOBTextId: "galNotSelected_Announcement"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                )
            Items: |-
                =If(
                    gblThemeDark,
                    Filter(
                        colProjectCoverColors,
                        Theme = "dark"
                    ),
                    Filter(
                        colProjectCoverColors,
                        Theme = "default"
                    )
                )
            OnSelect: |-
                =UpdateContext(
                    {
                        locCoverImageSelected: false,
                        locCoverColorSelected: true,
                        locCoverChanged: true
                    }
                )
            TabIndex: |-
                =If(
                    locVisibleCoverSelection,
                    0,
                    -1
                )
            TemplateFill: =Transparent
            TemplatePadding: =0
            TemplateSize: =Self.Width / 14
            Visible: =locVisibleCoverSelection
            Width: =Parent.Width - (Self.X * 2)
            X: =lblProjectCoverContainer.X+25
            Y: =lblProjectCoverColor.Y + lblProjectCoverColor.Height
            ZIndex: =7

            btnProjectColorBackground As button:
                BorderColor: =RGBA(0, 0, 0, 0)
                Color: =Transparent
                DisabledBorderColor: =Transparent
                DisabledColor: =gblAppStyles.ButtonBackground.DisabledColor
                DisabledFill: =Transparent
                Fill: =ColorValue(ThisItem.Color)
                FocusedBorderColor: =gblAppStyles.ButtonSecondary.FocusedBorderColor
                FocusedBorderThickness: =2
                Font: =Font.'Segoe UI'
                Height: =Self.Width
                HoverBorderColor: =gblAppStyles.ButtonBackground.HoverBorderColor
                HoverColor: =Transparent
                HoverFill: =Self.Fill
                OnSelect: =Select(Parent)
                PressedBorderColor: =gblAppStyles.ButtonBackground.PressedBorderColor
                PressedColor: =Transparent
                PressedFill: =Self.Fill
                RadiusBottomLeft: =4
                RadiusBottomRight: =4
                RadiusTopLeft: =4
                RadiusTopRight: =4
                Size: =gblAppStyles.ButtonBackground.Size
                TabIndex: |-
                    =If(
                        locVisibleCoverSelection,
                        0,
                        -1
                    )
                Text: |-
                    =With(
                        {
                            varDefault: "Click to select the color",
                            varOOBTextId: "btnProjectColorForeground__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    ) & " " & ThisItem.Color
                Tooltip: =Self.Text
                Width: =Parent.TemplateWidth - 10
                X: =2*1
                Y: =2*1
                ZIndex: =1

            imgColorSelected As image:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Selected color",
                            varOOBTextId: "imgColorSelected__locAccessibleText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Height: =22
                Image: |
                    =With(
                        {
                            varImageRecord: LookUp(
                                staticIcons,
                                staticIconName = "Check"
                            ),
                            varColor: If(
                                Self.DisplayMode = DisplayMode.Disabled,
                                gblAppStyles.Icons.DisabledColor,
                                gblAppStyles.Icons.Color
                            )
                        },
                        With(
                            {
                                varImageData: Concatenate(
                                    "data:image/svg+xml;utf8, ",
                                    EncodeUrl(
                                        Concatenate(
                                            "<svg viewBox='",
                                            varImageRecord.staticIconViewbox,
                                            "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                            varImageRecord.staticIconPath,
                                            "' fill='#",
                                            varColor,
                                            "'/></svg>"
                                        )
                                    )
                                )
                            },
                            varImageData
                        )
                    )
                OnSelect: =Select(Parent)
                PaddingBottom: =2
                PaddingLeft: =2
                PaddingRight: =2
                PaddingTop: =2
                Tooltip: =Self.AccessibleLabel
                Visible: =ThisItem.IsSelected 
                Width: =22
                X: =btnProjectColorBackground.X + (btnProjectColorBackground.Width - Self.Width) / 2
                Y: =btnProjectColorBackground.Y + (btnProjectColorBackground.Height - Self.Height) / 2
                ZIndex: =2

        lblProjectCoverImages As label:
            BorderColor: =gblAppStyles.Label.BorderColor
            BorderThickness: =gblAppStyles.Label.BorderThickness
            Color: =gblAppStyles.Label.Color
            DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
            DisabledColor: =gblAppStyles.Label.DisabledColor
            DisabledFill: =gblAppStyles.Label.DisabledFill
            Fill: =gblAppStyles.Label.Fill
            FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Bold
            Height: =40*1
            HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
            HoverColor: =gblAppStyles.Label.HoverColor
            HoverFill: =gblAppStyles.Label.HoverFill
            PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
            PressedColor: =gblAppStyles.Label.PressedColor
            PressedFill: =gblAppStyles.Label.PressedFill
            Size: =gblAppStyles.Label.Size.Medium
            Text: |-
                =With(
                    {
                        varDefault: "Images",
                        varOOBTextId: "lblProjectCoverImages__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Tooltip: =Self.Text
            Width: =250*1
            X: =lblProjectCoverContainer.X + 20
            Y: =galProjectColors.Y + galProjectColors.Height
            ZIndex: =8

        imgCloseCoverSelection As image:
            AccessibleLabel: |-
                =With(
                    {
                        varDefault: "Click to close project cover selection",
                        varOOBTextId: "lblProjectsListDivider__locAccessibleText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Height: =22*1
            Image: |
                =With(
                    {
                        varImageRecord: LookUp(
                            staticIcons,
                            staticIconName = "Dismiss"
                        ),
                        varColor: If(
                            Self.DisplayMode = DisplayMode.Disabled,
                            gblAppStyles.Icons.DisabledColor,
                            gblAppStyles.Icons.Color
                        )
                    },
                    With(
                        {
                            varImageData: Concatenate(
                                "data:image/svg+xml;utf8, ",
                                EncodeUrl(
                                    Concatenate(
                                        "<svg viewBox='",
                                        varImageRecord.staticIconViewbox,
                                        "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                        varImageRecord.staticIconPath,
                                        "' fill='#",
                                        varColor,
                                        "'/></svg>"
                                    )
                                )
                            )
                        },
                        varImageData
                    )
                )
            OnSelect: |-
                =UpdateContext(
                    {
                        locVisibleCoverSelection: false,
                        locCoverChanged: false
                    }
                );
                //set focus start
                UpdateContext({locSetFocusTimerStart: false});
                UpdateContext({locSetFocusControlTarget: "imgProjectImage"});
                UpdateContext({locSetFocusTimerStart: true});
                //set focus end
                //screen reader start
                UpdateContext(
                    {
                        locScreenReaderAnnouncedText: With(
                            {
                                varAnnouncedText: With(
                                    {
                                        varDefault: "Closing the dialog to update project cover",
                                        varOOBTextId: "imgCloseCoverSelection_Announcement"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            },
                            If(
                                locScreenReaderAnnouncedText = varAnnouncedText,
                                Concatenate(
                                    varAnnouncedText,
                                    " "
                                ),
                                varAnnouncedText
                            )
                        )
                    }
                );
                //screen reader end
            PaddingBottom: =2
            PaddingLeft: =2
            PaddingRight: =2
            PaddingTop: =2
            TabIndex: |-
                =If(
                    locVisibleCoverSelection,
                    0,
                    -1
                )
            Tooltip: =Self.AccessibleLabel
            Width: =22*1
            X: =lblProjectCoverContainer.X + lblProjectCoverContainer.Width - Self.Width - 20
            Y: =lblProjectCoverContainer.Y + Self.Height
            ZIndex: =9

        btnDoneCoverSelection As button:
            BorderColor: =gblAppStyles.ButtonPrimary.BorderColor
            BorderThickness: =gblAppStyles.ButtonPrimary.BorderThickness
            Color: =gblAppStyles.ButtonPrimary.Color
            DisabledBorderColor: =gblAppStyles.ButtonPrimary.DisabledBorderColor
            DisabledColor: =gblAppStyles.ButtonPrimary.DisabledColor
            DisabledFill: =gblAppStyles.ButtonPrimary.DisabledFill
            DisplayMode: |-
                =If(
                    locCoverChanged,
                    DisplayMode.Edit,
                    DisplayMode.Disabled
                )
            Fill: =gblAppStyles.ButtonPrimary.Fill
            FocusedBorderColor: =gblAppStyles.ButtonPrimary.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.ButtonPrimary.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            Height: =32
            HoverBorderColor: =gblAppStyles.ButtonPrimary.HoverBorderColor
            HoverColor: =gblAppStyles.ButtonPrimary.HoverColor
            HoverFill: =gblAppStyles.ButtonPrimary.HoverFill
            OnSelect: |-
                =If(
                    locCoverImageSelected,
                    If(
                        locCustomImageSelected,
                        If(
                            IsError(
                                Patch(
                                    Projects,
                                    gblProject,
                                    {
                                        'Cover Photo': {
                                            Name: addProjectCoverImage.FileName,
                                            Value: addProjectCoverImage.Media,
                                            Full: addProjectCoverImage.Media
                                        },
                                        'Cover Icon': Blank(),
                                        'Cover Color': Blank(),
                                        'Cover Color Dark': Blank()
                                    }
                                )
                            ),
                            Notify("There was a problem saving your data. Please try again.")
                        ),
                        If(
                            IsError(
                                Patch(
                                    Projects,
                                    gblProject,
                                    {
                                        'Cover Icon': galProjectCovers.Selected.appStockImage,
                                        'Cover Photo': {
                                            Name: Blank(),
                                            Value: Blank(),
                                            Full: Blank()
                                        },
                                        'Cover Color': Blank(),
                                        'Cover Color Dark': Blank()
                                    }
                                )
                            ),
                            Notify("There was a problem saving your data. Please try again.")
                        )
                    )
                );
                If(
                    locCoverColorSelected,
                    If(
                        IsError(
                            Patch(
                                Projects,
                                gblProject,
                                {
                                    'Cover Icon': Blank(),
                                    'Cover Photo': Blank(),
                                    'Cover Color': If(
                                        !gblThemeDark,
                                        galProjectColors.Selected.Color,
                                        LookUp(
                                            colProjectCoverColors,
                                            Base = galProjectColors.Selected.Base && Theme = "default"
                                        ).Color
                                    ),
                                    'Cover Color Dark': If(
                                        gblThemeDark,
                                        galProjectColors.Selected.Color,
                                        LookUp(
                                            colProjectCoverColors,
                                            Base = galProjectColors.Selected.Base && Theme = "dark"
                                        ).Color
                                    )
                                }
                            )
                        ),
                        Notify("There was a problem saving your data. Please try again.")
                    )
                );
                UpdateContext(
                    {
                        locVisibleCoverSelection: false,
                        locResetAddProjectCoverImage: true
                    }
                );
                //screen reader start
                UpdateContext(
                    {
                        locScreenReaderAnnouncedText: With(
                            {
                                varAnnouncedText: With(
                                    {
                                        varDefault: "Project cover has been updated",
                                        varOOBTextId: "btnDoneCoverSelection_Announcement"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextID = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            },
                            If(
                                locScreenReaderAnnouncedText = varAnnouncedText,
                                Concatenate(
                                    varAnnouncedText,
                                    " "
                                ),
                                varAnnouncedText
                            )
                        )
                    }
                );
                //screen reader end
            PressedBorderColor: =gblAppStyles.ButtonPrimary.PressedBorderColor
            PressedColor: =gblAppStyles.ButtonPrimary.PressedColor
            PressedFill: =gblAppStyles.ButtonPrimary.PressedFill
            RadiusBottomLeft: =gblAppStyles.ButtonPrimary.RadiusBottomLeft
            RadiusBottomRight: =gblAppStyles.ButtonPrimary.RadiusBottomRight
            RadiusTopLeft: =gblAppStyles.ButtonPrimary.RadiusTopLeft
            RadiusTopRight: =gblAppStyles.ButtonPrimary.RadiusTopRight
            Size: =gblAppStyles.ButtonPrimary.Size
            TabIndex: |-
                =If(
                    locVisibleCoverSelection,
                    0,
                    -1
                )
            Text: |-
                =With(
                    {
                        varDefault: "Done",
                        varOOBTextId: "btnDoneCoverSelection__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextID = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Tooltip: =Self.Text
            Width: =100
            X: =lblProjectCoverContainer.X + lblProjectCoverContainer.Width - Self.Width - 25
            Y: =lblProjectCoverContainer.Y + lblProjectCoverContainer.Height - Self.Height - 28
            ZIndex: =10

    conDialogWelcome As groupContainer:
        Fill: |-
            =If(
                gblThemeDark Or gblThemeHiCo,
                gblAppColors.OverlayLight,
                gblAppColors.OverlayDark
            )
        Height: =Parent.Height
        Visible: =locShowFirstRun || locShowPowerAppsPrompt
        Width: =Parent.Width
        X: =0*0
        Y: =0*0
        ZIndex: =9

        conDialogSplash_PowerApps As groupContainer:
            Fill: =gblAppStyles.Background.Fill
            Height: =600*1
            Visible: =locShowPowerAppsPrompt
            Width: =640*1
            X: =(Parent.Width - Self.Width) / 2
            Y: =(Parent.Height - Self.Height) / 2
            ZIndex: =1

            imgSplashPowerApps_AppLogo As image:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Milestones icon",
                            varOOBTextId: "imgSplashPowerApps_AppLogo__locAccessibleText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Height: =80
                Image: =Logo_Milestones
                RadiusBottomLeft: =5
                RadiusBottomRight: =5
                RadiusTopLeft: =5
                RadiusTopRight: =5
                Tooltip: =Self.AccessibleLabel
                Width: =80
                X: =(Parent.Width - Self.Width) / 2
                Y: =40
                ZIndex: =59

            lblSplashPowerApps_Title As label:
                Align: =Align.Center
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                DisabledColor: =gblAppStyles.Label.DisabledColor
                DisabledFill: =gblAppStyles.Label.DisabledFill
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                Height: =48
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Size: =gblAppStyles.Label.Size.Large
                Text: |
                    =With(
                        {
                            varDefault: "Built with Microsoft Power Platform. Ready for you to extend.",
                            varOOBTextId: "lblSplashPowerApps_Title__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Tooltip: =Self.Text
                Width: =560
                Wrap: =false
                X: =(Parent.Width - Self.Width) / 2
                Y: =imgSplashPowerApps_AppLogo.Y + imgSplashPowerApps_AppLogo.Height + 16
                ZIndex: =60

            htmSplashPowerApps_Summary As htmlViewer:
                AutoHeight: =true
                BorderColor: =RGBA(0, 0, 0, 0)
                Color: =gblAppStyles.Label.Color
                Font: =Font.'Segoe UI'
                Height: =48
                HtmlText: |-
                    =Concatenate(
                        "<center>",
                        With(
                            {
                                varDefault: "You can edit this app right in Teams with Power Platform’s approachable, low-code tools. Add your logo, connect data sources, or adjust as needed to suit your org.",
                                varOOBTextId: "_translateCommon__Splash_Description1"
                            },
                            With(
                                {
                                    varLocalizedText: LookUp(
                                        colLocalization,
                                        OOBTextID = varOOBTextId,
                                        LocalizedText
                                    )
                                },
                                Coalesce(
                                    varLocalizedText,
                                    varDefault
                                )
                            )
                        ),
                        "</center>"
                    )
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =gblAppStyles.Label.Size.Medium
                Width: =lblSplashPowerApps_Title.Width
                X: =lblSplashPowerApps_Title.X
                Y: =lblSplashPowerApps_Title.Y + lblSplashPowerApps_Title.Height
                ZIndex: =61

            imgSplashPowerApps_Editor As image:
                AccessibleLabel: =htmSplashPowerApps_Summary.HtmlText
                Height: =256
                Image: =Image_SplashPage_PowerPlatform
                Width: =Parent.Width - 40
                X: =(Parent.Width - Self.Width) / 2
                Y: =htmSplashPowerApps_Summary.Y +htmSplashPowerApps_Summary.Height + 24
                ZIndex: =62

            chkSplashPowerApps_DoNotShowAgain As checkbox:
                BorderColor: =gblAppStyles.Checkbox.BorderColor
                BorderThickness: =gblAppStyles.Checkbox.BorderThickness
                CheckboxBackgroundFill: =gblAppStyles.Checkbox.CheckboxBackgroundFill
                CheckboxBorderColor: =gblAppStyles.Checkbox.CheckboxBorderColor
                CheckboxSize: =24
                CheckmarkFill: =gblAppStyles.Checkbox.CheckmarkFill
                Color: =gblAppStyles.Checkbox.Color
                DisabledBorderColor: =gblAppStyles.Checkbox.DisabledBorderColor
                DisabledColor: =gblAppStyles.Checkbox.DisabledColor
                DisabledFill: =gblAppStyles.Checkbox.DisabledFill
                Fill: =gblAppStyles.Checkbox.Fill
                FocusedBorderColor: =gblAppStyles.Checkbox.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Checkbox.BorderThickness
                Font: =Font.'Segoe UI'
                Height: =btnSplashPowerApps_Proceed.Height
                HoverBorderColor: =gblAppStyles.Checkbox.HoverBorderColor
                HoverColor: =gblAppStyles.Checkbox.HoverColor
                HoverFill: =gblAppStyles.Checkbox.HoverFill
                PressedBorderColor: =gblAppStyles.Checkbox.PressedBorderColor
                PressedColor: =gblAppStyles.Checkbox.PressedColor
                PressedFill: =gblAppStyles.Checkbox.PressedFill
                Size: =gblAppStyles.Checkbox.Size
                TabIndex: |-
                    =If(
                        Self.Visible,
                        0,
                        -1
                    )
                Text: |
                    =With(
                        {
                            varDefault: "Don’t show this again",
                            varOOBTextId: "chkSplashPowerApps_DoNotShowAgain__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Width: =200
                X: =20*1
                Y: =btnSplashPowerApps_Proceed.Y
                ZIndex: =63

            btnSplashPowerApps_Back As button:
                BorderColor: =gblAppStyles.ButtonSecondary.BorderColor
                BorderThickness: =gblAppStyles.ButtonSecondary.BorderThickness
                Color: =gblAppStyles.ButtonSecondary.Color
                DisabledBorderColor: =gblAppStyles.ButtonSecondary.DisabledBorderColor
                DisabledColor: =gblAppStyles.ButtonSecondary.DisabledColor
                DisabledFill: =gblAppStyles.ButtonSecondary.DisabledFill
                Fill: =gblAppStyles.ButtonSecondary.Fill
                FocusedBorderColor: =gblAppStyles.ButtonSecondary.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.ButtonSecondary.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                Height: =32
                HoverBorderColor: =gblAppStyles.ButtonSecondary.HoverBorderColor
                HoverColor: =gblAppStyles.ButtonSecondary.HoverColor
                HoverFill: =gblAppStyles.ButtonSecondary.HoverFill
                OnSelect: |-
                    =UpdateContext({locShowFirstRun:true});
                PressedBorderColor: =gblAppStyles.ButtonSecondary.PressedBorderColor
                PressedColor: =gblAppStyles.ButtonSecondary.PressedColor
                PressedFill: =gblAppStyles.ButtonSecondary.PressedFill
                RadiusBottomLeft: =gblAppStyles.ButtonSecondary.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.ButtonSecondary.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.ButtonSecondary.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.ButtonSecondary.RadiusTopRight
                Size: =gblAppStyles.ButtonSecondary.Size
                TabIndex: |-
                    =If(
                        Self.Visible,
                        0,
                        -1
                    )
                Text: |
                    =With(
                        {
                            varDefault: "Back",
                            varOOBTextId: "btnSplashPowerApps_Back__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Tooltip: =Self.Text
                Visible: =locShowFirstRun
                Width: =92
                X: =btnSplashPowerApps_Proceed.X - Self.Width - 20*1
                Y: =btnSplashPowerApps_Proceed.Y
                ZIndex: =64

            btnSplashPowerApps_Proceed As button:
                BorderColor: =gblAppStyles.ButtonPrimary.BorderColor
                BorderThickness: =gblAppStyles.ButtonPrimary.BorderThickness
                Color: =gblAppStyles.ButtonPrimary.Color
                DisabledBorderColor: =gblAppStyles.ButtonPrimary.DisabledBorderColor
                DisabledColor: =gblAppStyles.ButtonPrimary.DisabledColor
                DisabledFill: =gblAppStyles.ButtonPrimary.DisabledFill
                Fill: =gblAppStyles.ButtonPrimary.Fill
                FocusedBorderColor: =gblAppStyles.ButtonPrimary.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.ButtonPrimary.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                Height: =32
                HoverBorderColor: =gblAppStyles.ButtonPrimary.HoverBorderColor
                HoverColor: =gblAppStyles.ButtonPrimary.HoverColor
                HoverFill: =gblAppStyles.ButtonPrimary.HoverFill
                OnSelect: |
                    =If(
                        chkSplashPowerApps_DoNotShowAgain.Value,
                        IfError(Patch(
                            'Project User Settings',
                            gblRecordUserSettings,
                            {'Display Splash (Power Apps)': 'Display Splash (Power Apps) (Project User Settings)'.No}
                        ),Blank())
                    );
                    UpdateContext(
                        {
                            locShowPowerAppsPrompt: false,
                            locShowFirstRun: false
                        }
                    );
                PressedBorderColor: =gblAppStyles.ButtonPrimary.PressedBorderColor
                PressedColor: =gblAppStyles.ButtonPrimary.PressedColor
                PressedFill: =gblAppStyles.ButtonPrimary.PressedFill
                RadiusBottomLeft: =gblAppStyles.ButtonPrimary.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.ButtonPrimary.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.ButtonPrimary.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.ButtonPrimary.RadiusTopRight
                Size: =gblAppStyles.ButtonPrimary.Size
                TabIndex: |-
                    =If(
                        Self.Visible,
                        0,
                        -1
                    )
                Text: |
                    =With(
                        {
                            varDefault: "Got it",
                            varOOBTextId: "btnSplashPowerApps_Proceed__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Tooltip: =Self.Text
                Width: =120
                X: =Parent.Width - Self.Width - 20*1
                Y: =Parent.Height - Self.Height - 24
                ZIndex: =65

            btnSplashPowerApps_LearnMore As button:
                BorderColor: =gblAppStyles.ButtonSecondary.BorderColor
                BorderThickness: =gblAppStyles.ButtonSecondary.BorderThickness
                Color: =gblAppStyles.ButtonSecondary.Color
                DisabledBorderColor: =gblAppStyles.ButtonSecondary.DisabledBorderColor
                DisabledColor: =gblAppStyles.ButtonSecondary.DisabledColor
                DisabledFill: =gblAppStyles.ButtonSecondary.DisabledFill
                Fill: =gblAppStyles.ButtonSecondary.Fill
                FocusedBorderColor: =gblAppStyles.ButtonSecondary.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.ButtonSecondary.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                Height: =32
                HoverBorderColor: =gblAppStyles.ButtonSecondary.HoverBorderColor
                HoverColor: =gblAppStyles.ButtonSecondary.HoverColor
                HoverFill: =gblAppStyles.ButtonSecondary.HoverFill
                OnSelect: |-
                    =Launch(
                        "https://go.microsoft.com/fwlink/?linkid=2147034&clcid=0x409",
                        {},
                        LaunchTarget.New
                    )
                PressedBorderColor: =gblAppStyles.ButtonSecondary.PressedBorderColor
                PressedColor: =gblAppStyles.ButtonSecondary.PressedColor
                PressedFill: =gblAppStyles.ButtonSecondary.PressedFill
                RadiusBottomLeft: =gblAppStyles.ButtonSecondary.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.ButtonSecondary.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.ButtonSecondary.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.ButtonSecondary.RadiusTopRight
                Size: =gblAppStyles.ButtonSecondary.Size
                Text: |-
                    =With(
                            {
                                varDefault: "Learn more",
                                varOOBTextId: "_translateCommon__Splash_LearnMore"
                            },
                            With(
                                {
                                    varLocalizedText: LookUp(
                                        colLocalization,
                                        OOBTextID = varOOBTextId,
                                        LocalizedText
                                    )
                                },
                                Coalesce(
                                    varLocalizedText,
                                    varDefault
                                )
                            )
                        )
                Tooltip: =Self.Text
                Width: =120
                X: =btnSplashPowerApps_Proceed.X - Self.Width - 20
                Y: =btnSplashPowerApps_Proceed.Y
                ZIndex: =66

        conDialogFirstRun As groupContainer:
            Fill: =gblAppStyles.Background.Fill
            Height: =600*1
            Visible: =locShowFirstRun
            Width: =640*1
            X: =(Parent.Width - Self.Width) / 2
            Y: =(Parent.Height - Self.Height) / 2
            ZIndex: =2

            btnCustomize_Continue As button:
                BorderColor: =gblAppStyles.ButtonPrimary.BorderColor
                BorderThickness: =gblAppStyles.ButtonPrimary.BorderThickness
                Color: =gblAppStyles.ButtonPrimary.Color
                DisabledBorderColor: =gblAppStyles.ButtonPrimary.DisabledBorderColor
                DisabledColor: =gblAppStyles.ButtonPrimary.DisabledColor
                DisabledFill: =gblAppStyles.ButtonPrimary.DisabledFill
                Fill: =gblAppStyles.ButtonPrimary.Fill
                FocusedBorderColor: =gblAppStyles.ButtonPrimary.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.ButtonPrimary.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                Height: =32*1
                HoverBorderColor: =gblAppStyles.ButtonPrimary.HoverBorderColor
                HoverColor: =gblAppStyles.ButtonPrimary.HoverColor
                HoverFill: =gblAppStyles.ButtonPrimary.HoverFill
                OnSelect: |-
                    =UpdateContext({locShowFirstRun: false})
                PressedBorderColor: =gblAppStyles.ButtonPrimary.PressedBorderColor
                PressedColor: =gblAppStyles.ButtonPrimary.PressedColor
                PressedFill: =gblAppStyles.ButtonPrimary.PressedFill
                RadiusBottomLeft: =gblAppStyles.ButtonPrimary.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.ButtonPrimary.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.ButtonPrimary.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.ButtonPrimary.RadiusTopRight
                Size: =gblAppStyles.ButtonPrimary.Size
                TabIndex: |-
                    =If(
                        Self.Visible,
                        0,
                        -1
                    )
                Text: |-
                    =With(
                        {
                            varDefault: "Continue",
                            varOOBTextId: "btnCustomize_Continue__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Width: =120
                X: =Parent.Width -Self.Width - 24
                Y: =Parent.Height - Self.Height - 24
                ZIndex: =1

            lblCustomize_Line1 As label:
                Align: =Align.Center
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                DisabledColor: =gblAppStyles.Label.DisabledColor
                DisabledFill: =gblAppStyles.Label.DisabledFill
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                Height: =48
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                PaddingTop: =0
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Size: =gblAppStyles.Label.Size.Large
                Text: |-
                    =With(
                        {
                            varDefault: "Manage projects effectively by key milestones",
                            varOOBTextId: "lblCustomize_Line1__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Tooltip: =Self.Text
                Width: =550
                X: =(Parent.Width - Self.Width) / 2
                Y: =imgCustomize_AppLogo.Y+imgCustomize_AppLogo.Height+16
                ZIndex: =5

            lblCustomize_Line2 As label:
                Align: =Align.Center
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                DisabledColor: =gblAppStyles.Label.DisabledColor
                DisabledFill: =gblAppStyles.Label.DisabledFill
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                Height: =48
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Size: =gblAppStyles.Label.Size.Medium
                Text: |-
                    =With(
                        {
                            varDefault: "Plan and track projects your way, in a highly customizable, easy-to-use dashboard. At a glance, see team capacity, priority and status of work items towards milestones.",
                            varOOBTextId: "lblCustomize_Line2__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Tooltip: =Self.Text
                Width: =lblCustomize_Line1.Width
                X: =lblCustomize_Line1.X
                Y: =lblCustomize_Line1.Y + lblCustomize_Line1.Height
                ZIndex: =6

            imgCustomize_AppLogo As image:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Milestones icon",
                            varOOBTextId: "imgCustomize_AppLogo__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                CalculateOriginalDimensions: |
                    =true
                Height: =80
                Image: =Logo_Milestones
                Tooltip: =Self.AccessibleLabel
                Width: =80
                X: =(Parent.Width - Self.Width) / 2
                Y: =40
                ZIndex: =10

            lblCustomize_ProjectTracking As label:
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                DisabledColor: =gblAppStyles.Label.DisabledColor
                DisabledFill: =gblAppStyles.Label.DisabledFill
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Bold
                Height: =24
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                PaddingLeft: =0
                PaddingTop: =0
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Size: =gblAppStyles.Label.Size.Medium
                Text: |-
                    =With(
                        {
                            varDefault: "Project tracking",
                            varOOBTextId: "lblCustomize_ProjectTracking__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Tooltip: =Self.Text
                VerticalAlign: =VerticalAlign.Bottom
                Width: =125
                X: =imgCustomize_ProjectTracking.X
                Y: =425
                ZIndex: =14

            lblCustomize_InitiativePlanning As label:
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                DisabledColor: =gblAppStyles.Label.DisabledColor
                DisabledFill: =gblAppStyles.Label.DisabledFill
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Bold
                Height: =24
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                PaddingLeft: =0
                PaddingTop: =0
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Size: =gblAppStyles.Label.Size.Medium
                Text: |-
                    =With(
                        {
                            varDefault: "Initiative planning",
                            varOOBTextId: "lblCustomize_InitiativePlanning__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Tooltip: =Self.Text
                VerticalAlign: =VerticalAlign.Bottom
                Width: =180
                X: =imgCustomize_InitiativePlanning.X
                Y: =425
                ZIndex: =16

            lblCustomize_CapacityPlanning As label:
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                DisabledColor: =gblAppStyles.Label.DisabledColor
                DisabledFill: =gblAppStyles.Label.DisabledFill
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Bold
                Height: =24
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                PaddingLeft: =0
                PaddingTop: =0
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Size: =gblAppStyles.Label.Size.Medium
                Text: |-
                    =With(
                        {
                            varDefault: "Capacity planning",
                            varOOBTextId: "lblCustomize_CapacityPlanning__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Tooltip: =Self.Text
                VerticalAlign: =VerticalAlign.Bottom
                Width: =180
                X: =imgCustomize_CapacityPlanning.X
                Y: =425
                ZIndex: =18

            imgCustomize_ProjectTracking As image:
                AccessibleLabel: |-
                    =
                    With({varDefault: "Icon for project tracking",varOOBTextId: "imgCustomize_ProjectTracking__locText"},With({varLocalizedText: LookUp(colLocalization,OOBTextID = varOOBTextId,LocalizedText)},Coalesce(varLocalizedText,varDefault)))
                CalculateOriginalDimensions: |
                    =true
                Height: =162
                Image: =FirstRunImage
                RadiusBottomLeft: =10
                RadiusBottomRight: =10
                RadiusTopLeft: =10
                RadiusTopRight: =10
                Tooltip: =Self.AccessibleLabel
                Width: =162
                X: =36*1
                Y: =256
                ZIndex: =20

            imgCustomize_InitiativePlanning As image:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Icon for initiative planning",
                            varOOBTextId: "imgCustomize_InitiativePlanning__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                CalculateOriginalDimensions: |
                    =true
                Height: =162
                Image: =FirstRunImage2
                RadiusBottomLeft: =10
                RadiusBottomRight: =10
                RadiusTopLeft: =10
                RadiusTopRight: =10
                Tooltip: =Self.AccessibleLabel
                Width: =162
                X: =(Parent.Width - Self.Width) / 2
                Y: =256
                ZIndex: =21

            imgCustomize_CapacityPlanning As image:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Icon for capacity planning",
                            varOOBTextId: "imgCustomize_CapacityPlanning__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextID = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                CalculateOriginalDimensions: |
                    =true
                Height: =162
                Image: =FirstRunImage3
                RadiusBottomLeft: =10
                RadiusBottomRight: =10
                RadiusTopLeft: =10
                RadiusTopRight: =10
                Tooltip: =Self.AccessibleLabel
                Width: =162
                X: =Parent.Width - Self.Width - 36
                Y: =256
                ZIndex: =22

