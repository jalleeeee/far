"'Issue Templates Screen' As screen":
    Fill: =gblAppStyles.Background.Fill
    OnVisible: |
        =If(
            IsBlank(locScreenModeViewCategory),
            UpdateContext(
                {
                    locScreenModeCreateCategory: IsBlank(gblRecordCategory),
                    locScreenModeCreateTemplate: false,
                    locScreenModeEditCategory: false,
                    locScreenModeEditTemplate: false,
                    locScreenModeViewCategory: !IsBlank(gblRecordCategory),
                    locScreenModeViewTemplate: false
                }
            ),
            IsBlank(gblRecordCategory),
            UpdateContext(
                {
                    locScreenModeCreateCategory: true,
                    locScreenModeCreateTemplate: false,
                    locScreenModeEditCategory: false,
                    locScreenModeEditTemplate: false,
                    locScreenModeViewCategory: false,
                    locScreenModeViewTemplate: false
                }
            )
        );
        If(
            IsBlank(locSortTemplateList_Title),
            UpdateContext(
                {
                    locSortTemplateList_Title: true,
                    locSortTemplateList_Title_Ascending: true
                }
            )
        );

    tmrSetFocus_CampaignDetail As timer:
        AutoStart: =locSetFocusTimerStart
        Color: =RGBA(0, 0, 0, 0)
        DisplayMode: =DisplayMode.View
        Duration: =100
        Fill: =RGBA(0, 0, 0, 0)
        Height: =0
        HoverFill: =Transparent
        OnTimerEnd: |-
            =Switch(
                locSetFocusControlTarget,
                "txtAssignUser_Search",
                SetFocus(txtAssignUser_Search),
                "imgConfirmDelete_Cancel",
                SetFocus(imgConfirmDelete_Cancel)
            )
        Size: =0
        TabIndex: =-1
        Width: =0
        X: =Parent.Width - Self.Width
        Y: =Parent.Height - Self.Height
        ZIndex: =1

    lblScreenAnnounce_CampaignDetail As label:
        DisplayMode: =DisplayMode.View
        Height: =0*0
        Live: =Live.Assertive
        Text: =locScreenReaderAnnouncedText // This text is announced by screen readers, when the variable is updated
        Width: =0*0
        X: =0*0
        Y: =0*0
        ZIndex: =2

    comHeader_Templates As comHeader:
        Fill: =comHeader_Templates.inputStyles.Background.Fill
        Height: =60*1
        inputColors: =gblAppColors
        inputDarkTheme: =gblThemeDark
        inputExternalLinkSettings: =gblAppHeader.ViewInTasks
        inputHeaderSettings: =gblAppHeader.Main
        inputHelpIcon: |-
            =With(
                {
                    varImageRecord: LookUp(
                        staticIcons,
                        staticIconName = If(
                            App.ActiveScreen = 'About Screen',
                            "Info filled",
                            "Info"
                        )
                    ),
                    varColor: gblAppStyles.Icons.Color
                },
                With(
                    {
                        varImageData: Concatenate(
                            "data:image/svg+xml;utf8, ",
                            EncodeUrl(
                                Concatenate(
                                    "<svg viewBox='",
                                    varImageRecord.staticIconViewbox,
                                    "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                    varImageRecord.staticIconPath,
                                    "' fill='#",
                                    varColor,
                                    "'/></svg>"
                                )
                            )
                        )
                    },
                    varImageData
                )
            )
        inputHelpScreen: ='About Screen'
        inputHighContrastTheme: =gblThemeHiCo
        inputMenuItem1: =gblAppHeader.Insights
        inputMenuItem2: =gblAppHeader.IssueTemplates
        inputMenuItem3: =
        inputMenuItem4: =
        inputSettingsIcon: |
            =With(
                {
                    varImageRecord: LookUp(
                        staticIcons,
                        staticIconName = If(
                        App.ActiveScreen = 'Settings Screen',
                        "Settings filled",
                        "Settings"           
                    )
                    ),
                    varColor: 
                        gblAppStyles.Icons.Color
                },
                With(
                    {
                        varImageData: Concatenate(
                            "data:image/svg+xml;utf8, ",
                            EncodeUrl(
                                Concatenate(
                                    "<svg viewBox='",
                                    varImageRecord.staticIconViewbox,
                                    "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                    varImageRecord.staticIconPath,
                                    "' fill='#",
                                    varColor,
                                    "'/></svg>"
                                )
                            )
                        )
                    },
                    varImageData
                )
            )
        inputSettingsScreen: ='Settings Screen'
        inputStyles: =gblAppStyles
        inputTabIndex: =If(locDisplayDialog,-1,0)
        Width: =Parent.Width
        X: =0*0
        Y: =0*0
        ZIndex: =3

    conIssueDetailPane As groupContainer:
        Height: =Parent.Height - Self.Y
        Width: =Parent.Width - Self.X
        X: =conIssueNav.X + conIssueNav.Width
        Y: =conCategoryWarnings.Y + conCategoryWarnings.Height
        ZIndex: =4

        conTemplateList As groupContainer:
            Height: =Parent.Height - Self.Y
            Visible: =locScreenModeViewCategory Or locScreenModeEditCategory Or locScreenModeViewTemplate
            Width: =Parent.Width - Self.X
            X: =conCategoryForm.X
            Y: =conCategoryForm.Y + conCategoryForm.Height + gblPadding.Container
            ZIndex: =1

            lblTemplateList_Header As label:
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                DisabledColor: =gblAppStyles.Label.DisabledColor
                DisabledFill: =gblAppStyles.Label.DisabledFill
                DisplayMode: =btnTemplateList_Add.DisplayMode
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                Height: =32
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                PaddingLeft: =gblPadding.Page
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Size: =gblAppStyles.Label.Size.Medium
                Text: |-
                    =With(
                        {
                            varDefault: "Issue templates",
                            varOOBTextId: "_translateCommon__IssueTemplates"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Width: =btnTemplateList_Add.X - Self.X
                X: =0*0
                Y: =0*0
                ZIndex: =1

            shpTemplateList_Divider As rectangle:
                DisplayMode: =DisplayMode.View
                Fill: =gblAppStyles.Dividers.Elements
                Height: =1
                Width: =Parent.Width - Self.X - gblPadding.Page
                X: =lblTemplateList_Header.PaddingLeft
                Y: =lblTemplateList_Header.Y + lblTemplateList_Header.Height
                ZIndex: =2

            imgTemplateList_Add As image:
                DisabledFill: |-
                    =With(
                        {
                            varImageIsCategory: LookUp(
                                staticIcons,
                                staticIconName = "Add"
                            ).staticIconIsCategory
                        },
                        If(
                            varImageIsCategory,
                            gblAppStyles.Icons.DisabledFill_Category,
                            Transparent
                        )
                    )
                DisplayMode: =If(IsBlank(gblRecordCategory),DisplayMode.Disabled, galCategory.DisplayMode)
                Fill: |-
                    =With(
                        {
                            varImageIsCategory: LookUp(
                                staticIcons,
                                staticIconName = "Add"
                            ).staticIconIsCategory
                        },
                        If(
                            varImageIsCategory,
                            gblAppStyles.Icons.Fill_Category,
                            Transparent
                        )
                    )
                Height: =32
                Image: |-
                    =With(
                        {
                            varImageRecord: LookUp(
                                staticIcons,
                                staticIconName = "Add"
                            ),
                            varColor: If(
                                Self.DisplayMode = DisplayMode.Disabled,
                                gblAppStyles.Icons.DisabledColor,
                                gblAppStyles.Icons.Color
                            )
                        },
                        With(
                            {
                                varImageData: Concatenate(
                                    "data:image/svg+xml;utf8, ",
                                    EncodeUrl(
                                        Concatenate(
                                            "<svg viewBox='",
                                            varImageRecord.staticIconViewbox,
                                            "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                            varImageRecord.staticIconPath,
                                            "' fill='#",
                                            varColor,
                                            "'/></svg>"
                                        )
                                    )
                                )
                            },
                            varImageData
                        )
                    )
                OnSelect: =
                PaddingBottom: =6
                PaddingLeft: =6
                PaddingRight: =6
                PaddingTop: =6
                RadiusBottomLeft: =5
                RadiusBottomRight: =5
                RadiusTopLeft: =5
                RadiusTopRight: =5
                Transparency: =If(Self.DisplayMode = DisplayMode.Disabled,0.75,0)
                Width: =32
                X: =btnTemplateList_Add.X
                Y: =btnTemplateList_Add.Y
                ZIndex: =3

            galTemplateList As gallery.galleryVertical:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Gallery of issues templates, for the selected issue category",
                            varOOBTextId: "galTemplateList__locAccessibleLabel"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                BorderColor: =RGBA(0, 0, 0, 0)
                DisplayMode: =If(locScreenModeEditCategory, DisplayMode.View,DisplayMode.Edit)
                Height: =Parent.Height - Self.Y
                Items: |-
                    =With(
                        {
                            varSortBy: If(
                                locSortTemplateList_Title,
                                "msft_name",
                                locSortTemplateList_NotStarted,
                                "appIssueCount_NotStarted",
                                locSortTemplateList_InProgress,
                                "appIssueCount_InProgress",
                                locSortTemplateList_Done,
                                "appIssueCount_Done",
                                "msft_name"
                            ),
                            varSortAscending: If(
                                If(
                                    locSortTemplateList_Title,
                                    locSortTemplateList_Title_Ascending,
                                    locSortTemplateList_NotStarted,
                                    locSortTemplateList_NotStarted_Ascending,
                                    locSortTemplateList_InProgress,
                                    locSortTemplateList_InProgress_Ascending,
                                    locSortTemplateList_Done,
                                    locSortTemplateList_Done_Ascending,
                                    true
                                ),
                                SortOrder.Ascending,
                                SortOrder.Descending
                            )
                        },
                        SortByColumns(
                            Filter(
                                colCdsIssueTemplates,
                                colCdsIssueTemplates[@Category].'Issue Report Category' = gblRecordCategory.'Issue Report Category'
                            ),
                            varSortBy,
                            varSortAscending,
                            "msft_name",
                            Ascending
                        )
                    )
                Layout: =Layout.Vertical
                TemplatePadding: =0
                TemplateSize: =48
                Width: =galTemplateListHeader.Width
                X: =galTemplateListHeader.X
                Y: =galTemplateListHeader.Y + galTemplateListHeader.Height + 1
                ZIndex: =5

                lblTemplateList_Title As label:
                    BorderColor: =gblAppStyles.ButtonSecondary.BorderColor
                    BorderThickness: =gblAppStyles.ButtonSecondary.BorderThickness
                    Color: =gblAppStyles.Label.Color
                    DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                    DisabledColor: =gblAppStyles.Label.DisabledColor
                    DisabledFill: =gblAppStyles.Label.DisabledFill
                    DisplayMode: =btnTemplateList_Edit.DisplayMode
                    Fill: =gblAppStyles.Label.Fill
                    FocusedBorderThickness: =Self.BorderThickness
                    Font: =Font.'Segoe UI'
                    Height: =Parent.TemplateHeight
                    HoverColor: =gblAppStyles.Label.HoverColor
                    HoverFill: =gblAppStyles.Label.HoverFill
                    OnSelect: =Select(Parent)
                    PaddingLeft: =16
                    PressedColor: =gblAppStyles.Label.PressedColor
                    PressedFill: =gblAppStyles.Label.PressedFill
                    Size: =gblAppStyles.Label.Size.Medium
                    Text: =ThisItem.Title
                    Width: =lblTemplateList_CountNotStarted.X - Self.X
                    Wrap: =false
                    X: =gblPadding.Page
                    Y: =btnTemplateList_Edit.Y
                    ZIndex: =1

                lblTemplateList_CountNotStarted As label:
                    Align: =Align.Center
                    BorderColor: =gblAppStyles.ButtonSecondary.BorderColor
                    BorderThickness: =gblAppStyles.ButtonSecondary.BorderThickness
                    Color: =gblAppStyles.Label.Color
                    DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                    DisabledColor: =gblAppStyles.Label.DisabledColor
                    DisabledFill: =gblAppStyles.Label.Fill
                    DisplayMode: =btnTemplateList_Edit.DisplayMode
                    Fill: =gblAppStyles.Label.Fill
                    FocusedBorderThickness: =Self.BorderThickness
                    Font: =Font.'Segoe UI'
                    Height: =Parent.TemplateHeight
                    HoverColor: =gblAppStyles.Label.HoverColor
                    HoverFill: =gblAppStyles.Label.HoverFill
                    OnSelect: =Select(Parent)
                    PaddingLeft: =16
                    PaddingRight: =16
                    PressedColor: =gblAppStyles.Label.PressedColor
                    PressedFill: =gblAppStyles.Label.PressedFill
                    Size: =gblAppStyles.Label.Size.Medium
                    Text: =ThisItem.appIssueCount_NotStarted
                    Width: =Max(80,Parent.Width * .125)
                    Wrap: =false
                    X: =lblTemplateList_CountInProgress.X -Self.Width
                    Y: =btnTemplateList_Edit.Y
                    ZIndex: =2

                lblTemplateList_CountInProgress As label:
                    Align: =Align.Center
                    BorderColor: =gblAppStyles.ButtonSecondary.BorderColor
                    BorderThickness: =gblAppStyles.ButtonSecondary.BorderThickness
                    Color: =gblAppStyles.Label.Color
                    DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                    DisabledColor: =gblAppStyles.Label.DisabledColor
                    DisabledFill: =gblAppStyles.Label.Fill
                    DisplayMode: =btnTemplateList_Edit.DisplayMode
                    Fill: =gblAppStyles.Label.Fill
                    FocusedBorderThickness: =Self.BorderThickness
                    Font: =Font.'Segoe UI'
                    Height: =Parent.TemplateHeight
                    HoverColor: =gblAppStyles.Label.HoverColor
                    HoverFill: =gblAppStyles.Label.HoverFill
                    OnSelect: =Select(Parent)
                    PaddingLeft: =16
                    PaddingRight: =16
                    PressedColor: =gblAppStyles.Label.PressedColor
                    PressedFill: =gblAppStyles.Label.PressedFill
                    Size: =gblAppStyles.Label.Size.Medium
                    Text: =ThisItem.appIssueCount_InProgress
                    Width: =Max(80,Parent.Width * .125)
                    Wrap: =false
                    X: =lblTemplateList_CountDone.X - Self.Width
                    Y: =btnTemplateList_Edit.Y
                    ZIndex: =3

                lblTemplateList_CountDone As label:
                    Align: =Align.Center
                    BorderColor: =gblAppStyles.ButtonSecondary.BorderColor
                    BorderThickness: =gblAppStyles.ButtonSecondary.BorderThickness
                    Color: =gblAppStyles.Label.Color
                    DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                    DisabledColor: =gblAppStyles.Label.DisabledColor
                    DisabledFill: =gblAppStyles.Label.Fill
                    DisplayMode: =btnTemplateList_Edit.DisplayMode
                    Fill: =gblAppStyles.Label.Fill
                    FocusedBorderThickness: =Self.BorderThickness
                    Font: =Font.'Segoe UI'
                    Height: =Parent.TemplateHeight
                    HoverColor: =gblAppStyles.Label.HoverColor
                    HoverFill: =gblAppStyles.Label.HoverFill
                    OnSelect: =Select(Parent)
                    PaddingLeft: =16
                    PaddingRight: =16
                    PressedColor: =gblAppStyles.Label.PressedColor
                    PressedFill: =gblAppStyles.Label.PressedFill
                    Size: =gblAppStyles.Label.Size.Medium
                    Text: =ThisItem.appIssueCount_Done
                    Width: =Max(80,Parent.Width * .125)
                    Wrap: =false
                    X: =btnTemplateList_Edit.X - Self.Width
                    Y: =btnTemplateList_Edit.Y
                    ZIndex: =4

                imgTemplateList_Edit As image:
                    DisabledFill: |-
                        =With(
                            {
                                varImageIsCategory: LookUp(
                                    staticIcons,
                                    staticIconName = "Edit"
                                ).staticIconIsCategory
                            },
                            If(
                                varImageIsCategory,
                                gblAppStyles.Icons.DisabledFill_Category,
                                Transparent
                            )
                        )
                    Fill: |
                        =With(
                            {
                                varImageIsCategory: LookUp(
                                    staticIcons,
                                    staticIconName = "Edit"
                                ).staticIconIsCategory
                            },
                            If(
                                varImageIsCategory,
                                gblAppStyles.Icons.Fill_Category,
                                Transparent
                            )
                        )
                    Height: =48
                    Image: |-
                        =With(
                            {
                                varImageRecord: LookUp(
                                    staticIcons,
                                    staticIconName = "Edit"
                                ),
                                varColor: If(
                                    Self.DisplayMode = DisplayMode.Disabled,
                                    gblAppStyles.Icons.DisabledColor,
                                    gblAppStyles.Icons.Color
                                )
                            },
                            With(
                                {
                                    varImageData: Concatenate(
                                        "data:image/svg+xml;utf8, ",
                                        EncodeUrl(
                                            Concatenate(
                                                "<svg viewBox='",
                                                varImageRecord.staticIconViewbox,
                                                "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                varImageRecord.staticIconPath,
                                                "' fill='#",
                                                varColor,
                                                "'/></svg>"
                                            )
                                        )
                                    )
                                },
                                varImageData
                            )
                        )
                    OnSelect: =Select(Parent)
                    PaddingBottom: =12
                    PaddingLeft: =Self.Width * .25
                    PaddingRight: =Self.Width * .25
                    PaddingTop: =12
                    RadiusBottomLeft: =5
                    RadiusBottomRight: =5
                    RadiusTopLeft: =5
                    RadiusTopRight: =5
                    Visible: =!ThisItem.appStatsOnlyRecord And locScreenModeViewCategory
                    Width: =btnTemplateList_Edit.Width * .4
                    X: =btnTemplateList_Edit.X
                    Y: =btnTemplateList_Edit.Y
                    ZIndex: =5

                btnTemplateList_Edit As button:
                    AutoDisableOnSelect: =false
                    BorderColor: =gblAppStyles.ButtonSecondary.BorderColor
                    BorderThickness: =gblAppStyles.ButtonSecondary.BorderThickness
                    Color: =gblAppStyles.ButtonTransparent.Color
                    DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                    DisabledColor: =gblAppStyles.ButtonTransparent.DisabledColor
                    DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
                    DisplayMode: =If(ThisItem.appStatsOnlyRecord Or locScreenModeEditCategory,DisplayMode.Disabled,DisplayMode.Edit)
                    Fill: =gblAppStyles.ButtonTransparent.Fill
                    FocusedBorderColor: =gblAppStyles.ButtonPrimary.FocusedBorderColor
                    FocusedBorderThickness: =1
                    Font: =Font.'Segoe UI'
                    Height: =Parent.TemplateHeight
                    HoverBorderColor: =gblAppStyles.ButtonSecondary.HoverBorderColor
                    HoverColor: =gblAppStyles.ButtonTransparent.HoverColor
                    HoverFill: =gblAppStyles.Gallery.HoverFill
                    OnSelect: |
                        =UpdateContext({locBlockUserInput: true});
                        Set(
                            gblRecordTemplate,
                            ThisItem
                        );
                        Concurrent(
                            ClearCollect(
                                colCdsIssueQuestions,
                                AddColumns(
                                    Filter(
                                        'Issue Report Questions',
                                        'Issue Report Questions'[@Template].'Issue Report Template' = gblRecordTemplate.'Issue Report Template'
                                    ),
                                    "appRecordUpdated",
                                    false,
                                    "appFields",
                                    Sequence,
                                    "appRef",
                                    'Issue Report Question'
                                )
                            ),
                            If(
                                IsBlank(gblRecordTemplate.'Task Assignments'),
                                Clear(colCdsIssueAssignments),
                                ClearCollect(
                                    colCdsIssueAssignments,
                                    RenameColumns(
                                        Split(
                                            gblRecordTemplate.'Task Assignments',
                                            ";"
                                        ),
                                        "Result",
                                        "appEmailAddress"
                                    )
                                )
                            )
                        );
                        ForAll(
                            colCdsIssueAssignments,
                            If(
                                Not(appEmailAddress in colUserProfiles.appEmail),
                                With(
                                    {
                                        varProfile: If(
                                            !IsBlank(appEmailAddress),
                                            Office365Users.UserProfileV2(appEmailAddress)
                                        )
                                    },
                                    Collect(
                                        colUserProfiles,
                                        {
                                            appRef: varProfile.id,
                                            appEmail: appEmailAddress,
                                            appImg: Office365Users.UserPhotoV2(appEmailAddress),
                                            appDisplayName: varProfile.displayName
                                        }
                                    )
                                )
                            );
                            
                        );
                        UpdateContext({locFieldTemplatePrimaryContact: gblRecordTemplate.'Primary Contact'});
                        If(
                            Not(locFieldTemplatePrimaryContact in colUserProfiles.appEmail) && !IsBlank(locFieldTemplatePrimaryContact),
                            With(
                                {
                                    varProfile: If(
                                        !IsBlank(locFieldTemplatePrimaryContact),
                                        Office365Users.UserProfileV2(locFieldTemplatePrimaryContact)
                                    )
                                },
                                Collect(
                                    colUserProfiles,
                                    {
                                        appRef: varProfile.id,
                                        appEmail: locFieldTemplatePrimaryContact,
                                        appImg: If(
                                            !IsBlank(locFieldTemplatePrimaryContact),
                                            Office365Users.UserPhotoV2(locFieldTemplatePrimaryContact)
                                        ),
                                        appDisplayName: varProfile.displayName
                                    }
                                )
                            )
                        );
                        UpdateContext(
                            {
                                locScreenModeCreateCategory: false,
                                locScreenModeCreateTemplate: false,
                                locScreenModeEditCategory: false,
                                locScreenModeEditTemplate: true,
                                locScreenModeViewCategory: false,
                                locScreenModeViewTemplate: false,
                                locBusinessDays: gblRecordTemplate.'Business Days until Due'
                            }
                        );
                        UpdateContext({locBlockUserInput: false});
                    PaddingBottom: =0
                    PaddingLeft: =16
                    PaddingRight: =0
                    PaddingTop: =0
                    PressedBorderColor: =gblAppStyles.ButtonSecondary.PressedBorderColor
                    PressedColor: =gblAppStyles.ButtonTransparent.PressedColor
                    PressedFill: =gblAppStyles.Gallery.PressedFill
                    RadiusBottomLeft: =gblAppStyles.ButtonTransparent.RadiusBottomLeft
                    RadiusBottomRight: =gblAppStyles.ButtonTransparent.RadiusBottomRight
                    RadiusTopLeft: =gblAppStyles.ButtonTransparent.RadiusTopLeft
                    RadiusTopRight: =gblAppStyles.ButtonTransparent.RadiusTopRight
                    Size: =gblAppStyles.Label.Size.Small
                    TabIndex: =If(locDisplayDialog || locBlockUserInput ||locDisplayDialogDelete ||locDisplayAssignmentSelect ||locSelectIcon,-1,0)
                    Text: |-
                        =With(
                            {
                                varDefault: "Edit",
                                varOOBTextId: "_translateCommon__Edit"
                            },
                            With(
                                {
                                    varLocalizedText: LookUp(
                                        colLocalization,
                                        OOBTextId = varOOBTextId,
                                        LocalizedText
                                    )
                                },
                                Coalesce(
                                    varLocalizedText,
                                    varDefault
                                )
                            )
                        )
                    Width: =Max(60,Parent.Width * .1)
                    X: =Parent.Width - Self.Width - gblPadding.Page
                    Y: =1
                    ZIndex: =6

            galTemplateListHeader As gallery.galleryVertical:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Gallery of the template grid column headers",
                            varOOBTextId: "galTemplateListHeader__locAccessibleLabel"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                BorderColor: =RGBA(0, 0, 0, 0)
                DisplayMode: =If(locScreenModeEditCategory, DisplayMode.View,DisplayMode.Edit)
                Height: =48
                Items: =[1]
                Layout: =Layout.Vertical
                TabIndex: =If(locDisplayDialog || locBlockUserInput ||locDisplayDialogDelete ||locDisplayAssignmentSelect ||locSelectIcon,-1,0)
                TemplatePadding: =0
                TemplateSize: =Self.Height
                Width: =Parent.Width
                X: =0 * 0
                Y: =shpTemplateList_Divider.Y
                ZIndex: =6

                imgTemplateListHeader_Title As image:
                    DisabledFill: =Transparent
                    DisplayMode: =btnTemplateList_Add.DisplayMode
                    Height: =btnTemplateListHeader_Title.Height
                    Image: |
                        =With(
                            {
                                varImageRecord: LookUp(
                                    staticIcons,
                                    staticIconName = "Long text"
                                ),
                                varColor: If(
                                    Self.DisplayMode = DisplayMode.Disabled,
                                    gblAppStyles.Icons.DisabledColor,
                                    gblAppStyles.Icons.Color
                                )
                            },
                            With(
                                {
                                    varImageData: Concatenate(
                                        "data:image/svg+xml;utf8, ",
                                        EncodeUrl(
                                            Concatenate(
                                                "<svg viewBox='",
                                                varImageRecord.staticIconViewbox,
                                                "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                varImageRecord.staticIconPath,
                                                "' fill='#",
                                                varColor,
                                                "'/></svg>"
                                            )
                                        )
                                    )
                                },
                                varImageData
                            )
                        )
                    OnSelect: =Select(Parent)
                    PaddingBottom: =8
                    PaddingLeft: =8
                    PaddingRight: =8
                    PaddingTop: =8
                    Width: =32
                    X: =btnTemplateListHeader_Title.X + 4
                    Y: =btnTemplateListHeader_Title.Y
                    ZIndex: =1

                imgTemplateListHeader_TitleSort As image:
                    DisabledFill: |-
                        =With(
                            {
                                varImageIsCategory: LookUp(
                                    staticIcons,
                                    staticIconName = "Chevron up"
                                ).staticIconIsCategory
                            },
                            If(
                                varImageIsCategory,
                                gblAppStyles.Icons.DisabledFill_Category,
                                Transparent
                            )
                        )
                    DisplayMode: =btnTemplateList_Add.DisplayMode
                    Fill: |-
                        =With(
                            {
                                varImageIsCategory: LookUp(
                                    staticIcons,
                                    staticIconName = "Chevron up"
                                ).staticIconIsCategory
                            },
                            If(
                                varImageIsCategory,
                                gblAppStyles.Icons.Fill_Category,
                                Transparent
                            )
                        )
                    Height: =btnTemplateListHeader_Title.Height
                    Image: |-
                        =With(
                            {
                                varImageRecord: LookUp(
                                    staticIcons,
                                    staticIconName = "Chevron up"
                                ),
                                varColor: If(
                                    Self.DisplayMode = DisplayMode.Disabled,
                                    gblAppStyles.Icons.DisabledColor,
                                    gblAppStyles.Icons.Color
                                )
                            },
                            With(
                                {
                                    varImageData: Concatenate(
                                        "data:image/svg+xml;utf8, ",
                                        EncodeUrl(
                                            Concatenate(
                                                "<svg viewBox='",
                                                varImageRecord.staticIconViewbox,
                                                "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                varImageRecord.staticIconPath,
                                                "' fill='#",
                                                varColor,
                                                "'/></svg>"
                                            )
                                        )
                                    )
                                },
                                varImageData
                            )
                        )
                    ImageRotation: |-
                        =If(
                            locSortTemplateList_Title_Ascending,
                            ImageRotation.Rotate180,
                            ImageRotation.None
                        )
                    OnSelect: =Select(Parent)
                    PaddingBottom: =4
                    PaddingLeft: =2
                    PaddingRight: =2
                    PaddingTop: =4
                    Visible: =locSortTemplateList_Title
                    Width: =16
                    X: =btnTemplateListHeader_Title.X + 28
                    Y: =btnTemplateListHeader_Title.Y
                    ZIndex: =2

                btnTemplateListHeader_Title As button:
                    Align: =Align.Left
                    AutoDisableOnSelect: =false
                    BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
                    BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
                    Color: =gblAppStyles.ButtonTransparent.Color
                    DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                    DisabledColor: =gblAppStyles.ButtonTransparent.DisabledColor
                    DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
                    DisplayMode: =btnTemplateList_Add.DisplayMode
                    Fill: =gblAppStyles.ButtonTransparent.Fill
                    FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
                    FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
                    Font: =Font.'Segoe UI'
                    FontWeight: |-
                        =If(
                            locSortTemplateList_Title Or locSortTemplateList_Title,
                            FontWeight.Semibold,
                            FontWeight.Normal
                        )
                    Height: =Parent.TemplateHeight
                    HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
                    HoverColor: =gblAppStyles.ButtonTransparent.HoverColor
                    HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
                    OnSelect: |-
                        =UpdateContext(
                            {
                                locSortTemplateList_Title: true,
                                locSortTemplateList_Title_Ascending: !locSortTemplateList_Title_Ascending,
                                locSortTemplateList_NotStarted: false,
                                locSortTemplateList_NotStarted_Ascending: false,
                                locSortTemplateList_InProgress: false,
                                locSortTemplateList_InProgress_Ascending: false,
                                locSortTemplateList_Done: false,
                                locSortTemplateList_Done_Ascending: false
                            }
                        )
                    PaddingBottom: =0
                    PaddingLeft: =48
                    PaddingRight: =0
                    PaddingTop: =0
                    PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
                    PressedColor: =gblAppStyles.ButtonTransparent.PressedColor
                    PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
                    RadiusBottomLeft: =gblAppStyles.ButtonTransparent.RadiusBottomLeft
                    RadiusBottomRight: =gblAppStyles.ButtonTransparent.RadiusBottomRight
                    RadiusTopLeft: =gblAppStyles.ButtonTransparent.RadiusTopLeft
                    RadiusTopRight: =gblAppStyles.ButtonTransparent.RadiusTopRight
                    Size: =gblAppStyles.Label.Size.Small
                    TabIndex: =If(locDisplayDialog || locBlockUserInput ||locDisplayDialogDelete ||locDisplayAssignmentSelect ||locSelectIcon,-1,0)
                    Text: |-
                        =With(
                            {
                                varDefault: "Title",
                                varOOBTextId: "_translateCommon__Title"
                            },
                            With(
                                {
                                    varLocalizedText: LookUp(
                                        colLocalization,
                                        OOBTextId = varOOBTextId,
                                        LocalizedText
                                    )
                                },
                                Coalesce(
                                    varLocalizedText,
                                    varDefault
                                )
                            )
                        )
                    Width: =btnTemplateListHeader_NotStarted.X - Self.X
                    X: =gblPadding.Page
                    ZIndex: =4

                imgTemplateListHeader_NotStarted As image:
                    DisabledFill: |-
                        =With(
                            {
                                varImageIsCategory: LookUp(
                                    staticIcons,
                                    staticIconName = "Not started"
                                ).staticIconIsCategory
                            },
                            If(
                                varImageIsCategory,
                                gblAppStyles.Icons.DisabledFill_Category,
                                Transparent
                            )
                        )
                    DisplayMode: =btnTemplateList_Add.DisplayMode
                    Fill: |-
                        =With(
                            {
                                varImageIsCategory: LookUp(
                                    staticIcons,
                                    staticIconName = "Not started"
                                ).staticIconIsCategory
                            },
                            If(
                                varImageIsCategory,
                                gblAppStyles.Icons.Fill_Category,
                                Transparent
                            )
                        )
                    Height: =btnTemplateListHeader_NotStarted.Height
                    Image: |-
                        =With(
                            {
                                varImageRecord: LookUp(
                                    staticIcons,
                                    staticIconName = "Not started"
                                ),
                                varColor: If(
                                    Self.DisplayMode = DisplayMode.Disabled,
                                    gblAppStyles.Icons.DisabledColor,
                                    gblAppStyles.Icons.Color
                                )
                            },
                            With(
                                {
                                    varImageData: Concatenate(
                                        "data:image/svg+xml;utf8, ",
                                        EncodeUrl(
                                            Concatenate(
                                                "<svg viewBox='",
                                                varImageRecord.staticIconViewbox,
                                                "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                varImageRecord.staticIconPath,
                                                "' fill='#",
                                                varColor,
                                                "'/></svg>"
                                            )
                                        )
                                    )
                                },
                                varImageData
                            )
                        )
                    OnSelect: =Select(Parent)
                    PaddingBottom: =6
                    PaddingLeft: =6
                    PaddingRight: =6
                    PaddingTop: =6
                    RadiusBottomLeft: =5
                    RadiusBottomRight: =5
                    RadiusTopLeft: =5
                    RadiusTopRight: =5
                    Width: =Min(32,Parent.Width * 0.05)
                    X: =btnTemplateListHeader_NotStarted.X
                    Y: =btnTemplateListHeader_NotStarted.Y
                    ZIndex: =5

                imgTemplateListHeader_NotStartedSort As image:
                    DisabledFill: |-
                        =With(
                            {
                                varImageIsCategory: LookUp(
                                    staticIcons,
                                    staticIconName = "Chevron up"
                                ).staticIconIsCategory
                            },
                            If(
                                varImageIsCategory,
                                gblAppStyles.Icons.DisabledFill_Category,
                                Transparent
                            )
                        )
                    DisplayMode: =btnTemplateList_Add.DisplayMode
                    Fill: |-
                        =With(
                            {
                                varImageIsCategory: LookUp(
                                    staticIcons,
                                    staticIconName = "Chevron up"
                                ).staticIconIsCategory
                            },
                            If(
                                varImageIsCategory,
                                gblAppStyles.Icons.Fill_Category,
                                Transparent
                            )
                        )
                    Height: =btnTemplateListHeader_NotStarted.Height
                    Image: |-
                        =With(
                            {
                                varImageRecord: LookUp(
                                    staticIcons,
                                    staticIconName = "Chevron up"
                                ),
                                varColor: If(
                                    Self.DisplayMode = DisplayMode.Disabled,
                                    gblAppStyles.Icons.DisabledColor,
                                    gblAppStyles.Icons.Color
                                )
                            },
                            With(
                                {
                                    varImageData: Concatenate(
                                        "data:image/svg+xml;utf8, ",
                                        EncodeUrl(
                                            Concatenate(
                                                "<svg viewBox='",
                                                varImageRecord.staticIconViewbox,
                                                "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                varImageRecord.staticIconPath,
                                                "' fill='#",
                                                varColor,
                                                "'/></svg>"
                                            )
                                        )
                                    )
                                },
                                varImageData
                            )
                        )
                    ImageRotation: |-
                        =If(
                            locSortTemplateList_NotStarted_Ascending,
                            ImageRotation.Rotate180,
                            ImageRotation.None
                        )
                    OnSelect: =Select(Parent)
                    PaddingBottom: =4
                    PaddingLeft: =2
                    PaddingRight: =2
                    PaddingTop: =4
                    RadiusBottomLeft: =5
                    RadiusBottomRight: =5
                    RadiusTopLeft: =5
                    RadiusTopRight: =5
                    Visible: =locSortTemplateList_NotStarted
                    Width: =16
                    X: =btnTemplateListHeader_NotStarted.X + 28
                    Y: =btnTemplateListHeader_NotStarted.Y
                    ZIndex: =6

                btnTemplateListHeader_NotStarted As button:
                    Align: =Align.Left
                    AutoDisableOnSelect: =false
                    BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
                    BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
                    Color: =gblAppStyles.ButtonTransparent.Color
                    DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                    DisabledColor: =gblAppStyles.ButtonTransparent.DisabledColor
                    DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
                    DisplayMode: =btnTemplateList_Add.DisplayMode
                    Fill: =gblAppStyles.ButtonTransparent.Fill
                    FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
                    FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
                    Font: =Font.'Segoe UI'
                    FontWeight: |-
                        =If(
                            locSortTemplateList_NotStarted Or locSortTemplateList_NotStarted_Ascending,
                            FontWeight.Semibold,
                            FontWeight.Normal
                        )
                    Height: =Parent.TemplateHeight
                    HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
                    HoverColor: =gblAppStyles.ButtonTransparent.HoverColor
                    HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
                    OnSelect: |-
                        =UpdateContext(
                            {
                                locSortTemplateList_Title: false,
                                locSortTemplateList_Title_Ascending: false,
                                locSortTemplateList_NotStarted: true,
                                locSortTemplateList_NotStarted_Ascending: !locSortTemplateList_NotStarted_Ascending,
                                locSortTemplateList_InProgress: false,
                                locSortTemplateList_InProgress_Ascending: false,
                                locSortTemplateList_Done: false,
                                locSortTemplateList_Done_Ascending: false
                            }
                        )
                    PaddingBottom: =0
                    PaddingLeft: =36*1
                    PaddingRight: =0
                    PaddingTop: =0
                    PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
                    PressedColor: =gblAppStyles.ButtonTransparent.PressedColor
                    PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
                    RadiusBottomLeft: =gblAppStyles.ButtonTransparent.RadiusBottomLeft
                    RadiusBottomRight: =gblAppStyles.ButtonTransparent.RadiusBottomRight
                    RadiusTopLeft: =gblAppStyles.ButtonTransparent.RadiusTopLeft
                    RadiusTopRight: =gblAppStyles.ButtonTransparent.RadiusTopRight
                    Size: =gblAppStyles.Label.Size.Small
                    TabIndex: =If(locDisplayDialog || locBlockUserInput ||locDisplayDialogDelete ||locDisplayAssignmentSelect ||locSelectIcon,-1,0)
                    Text: |-
                        =With(
                            {
                                varDefault: "Not started",
                                varOOBTextId: "_translateCommon_PlannerStatusNotStarted"
                            },
                            With(
                                {
                                    varLocalizedText: LookUp(
                                        colLocalization,
                                        OOBTextId = varOOBTextId,
                                        LocalizedText
                                    )
                                },
                                Coalesce(
                                    varLocalizedText,
                                    varDefault
                                )
                            )
                        )
                    Width: =Max(80,Parent.Width * .125)
                    X: =btnTemplateListHeader_InProgress.X -Self.Width
                    ZIndex: =7

                imgTemplateListHeader_InProgress As image:
                    DisabledFill: |-
                        =With(
                            {
                                varImageIsCategory: LookUp(
                                    staticIcons,
                                    staticIconName = "In progress"
                                ).staticIconIsCategory
                            },
                            If(
                                varImageIsCategory,
                                gblAppStyles.Icons.DisabledFill_Category,
                                Transparent
                            )
                        )
                    DisplayMode: =btnTemplateList_Add.DisplayMode
                    Fill: |-
                        =With(
                            {
                                varImageIsCategory: LookUp(
                                    staticIcons,
                                    staticIconName = "In progress"
                                ).staticIconIsCategory
                            },
                            If(
                                varImageIsCategory,
                                gblAppStyles.Icons.Fill_Category,
                                Transparent
                            )
                        )
                    Height: =btnTemplateListHeader_InProgress.Height
                    Image: |-
                        =With(
                            {
                                varImageRecord: LookUp(
                                    staticIcons,
                                    staticIconName = "In progress"
                                ),
                                varColor: If(
                                    Self.DisplayMode = DisplayMode.Disabled,
                                    gblAppStyles.Icons.DisabledColor,
                                    gblAppStyles.Icons.Color
                                )
                            },
                            With(
                                {
                                    varImageData: Concatenate(
                                        "data:image/svg+xml;utf8, ",
                                        EncodeUrl(
                                            Concatenate(
                                                "<svg viewBox='",
                                                varImageRecord.staticIconViewbox,
                                                "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                varImageRecord.staticIconPath,
                                                "' fill='#",
                                                varColor,
                                                "'/></svg>"
                                            )
                                        )
                                    )
                                },
                                varImageData
                            )
                        )
                    OnSelect: =Select(Parent)
                    PaddingBottom: =6
                    PaddingLeft: =6
                    PaddingRight: =6
                    PaddingTop: =6
                    RadiusBottomLeft: =5
                    RadiusBottomRight: =5
                    RadiusTopLeft: =5
                    RadiusTopRight: =5
                    Width: =Min(32,Parent.Width * 0.05)
                    X: =btnTemplateListHeader_InProgress.X
                    Y: =btnTemplateListHeader_InProgress.Y
                    ZIndex: =8

                imgTemplateListHeader_InProgressSort As image:
                    DisabledFill: |-
                        =With(
                            {
                                varImageIsCategory: LookUp(
                                    staticIcons,
                                    staticIconName = "Chevron up"
                                ).staticIconIsCategory
                            },
                            If(
                                varImageIsCategory,
                                gblAppStyles.Icons.DisabledFill_Category,
                                Transparent
                            )
                        )
                    DisplayMode: =btnTemplateList_Add.DisplayMode
                    Fill: |-
                        =With(
                            {
                                varImageIsCategory: LookUp(
                                    staticIcons,
                                    staticIconName = "Chevron up"
                                ).staticIconIsCategory
                            },
                            If(
                                varImageIsCategory,
                                gblAppStyles.Icons.Fill_Category,
                                Transparent
                            )
                        )
                    Height: =btnTemplateListHeader_InProgress.Height
                    Image: |-
                        =With(
                            {
                                varImageRecord: LookUp(
                                    staticIcons,
                                    staticIconName = "Chevron up"
                                ),
                                varColor: If(
                                    Self.DisplayMode = DisplayMode.Disabled,
                                    gblAppStyles.Icons.DisabledColor,
                                    gblAppStyles.Icons.Color
                                )
                            },
                            With(
                                {
                                    varImageData: Concatenate(
                                        "data:image/svg+xml;utf8, ",
                                        EncodeUrl(
                                            Concatenate(
                                                "<svg viewBox='",
                                                varImageRecord.staticIconViewbox,
                                                "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                varImageRecord.staticIconPath,
                                                "' fill='#",
                                                varColor,
                                                "'/></svg>"
                                            )
                                        )
                                    )
                                },
                                varImageData
                            )
                        )
                    ImageRotation: |-
                        =If(
                            locSortTemplateList_InProgress_Ascending,
                            ImageRotation.Rotate180,
                            ImageRotation.None
                        )
                    OnSelect: =Select(Parent)
                    PaddingBottom: =4
                    PaddingLeft: =2
                    PaddingRight: =2
                    PaddingTop: =4
                    Visible: =locSortTemplateList_InProgress
                    Width: =16
                    X: =btnTemplateListHeader_InProgress.X + 28
                    Y: =btnTemplateListHeader_InProgress.Y
                    ZIndex: =9

                btnTemplateListHeader_InProgress As button:
                    Align: =Align.Left
                    AutoDisableOnSelect: =false
                    BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
                    BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
                    Color: =gblAppStyles.ButtonTransparent.Color
                    DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                    DisabledColor: =gblAppStyles.ButtonTransparent.DisabledColor
                    DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
                    DisplayMode: =btnTemplateList_Add.DisplayMode
                    Fill: =gblAppStyles.ButtonTransparent.Fill
                    FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
                    FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
                    Font: =Font.'Segoe UI'
                    FontWeight: |-
                        =If(
                            locSortTemplateList_InProgress Or locSortTemplateList_InProgress_Ascending,
                            FontWeight.Semibold,
                            FontWeight.Normal
                        )
                    Height: =Parent.TemplateHeight
                    HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
                    HoverColor: =gblAppStyles.ButtonTransparent.HoverColor
                    HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
                    OnSelect: |-
                        =UpdateContext(
                            {
                                locSortTemplateList_Title: false,
                                locSortTemplateList_Title_Ascending: false,
                                locSortTemplateList_NotStarted: false,
                                locSortTemplateList_NotStarted_Ascending: false,
                                locSortTemplateList_InProgress: true,
                                locSortTemplateList_InProgress_Ascending: !locSortTemplateList_InProgress_Ascending,
                                locSortTemplateList_Done: false,
                                locSortTemplateList_Done_Ascending: false
                            }
                        )
                    PaddingBottom: =0
                    PaddingLeft: =36*1
                    PaddingRight: =0
                    PaddingTop: =0
                    PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
                    PressedColor: =gblAppStyles.ButtonTransparent.PressedColor
                    PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
                    RadiusBottomLeft: =gblAppStyles.ButtonTransparent.RadiusBottomLeft
                    RadiusBottomRight: =gblAppStyles.ButtonTransparent.RadiusBottomRight
                    RadiusTopLeft: =gblAppStyles.ButtonTransparent.RadiusTopLeft
                    RadiusTopRight: =gblAppStyles.ButtonTransparent.RadiusTopRight
                    Size: =gblAppStyles.Label.Size.Small
                    TabIndex: =If(locDisplayDialog || locBlockUserInput ||locDisplayDialogDelete ||locDisplayAssignmentSelect ||locSelectIcon,-1,0)
                    Text: |-
                        =With(
                            {
                                varDefault: "In progress",
                                varOOBTextId: "_translateCommon_PlannerStatusInProgress"
                            },
                            With(
                                {
                                    varLocalizedText: LookUp(
                                        colLocalization,
                                        OOBTextId = varOOBTextId,
                                        LocalizedText
                                    )
                                },
                                Coalesce(
                                    varLocalizedText,
                                    varDefault
                                )
                            )
                        )
                    Width: =Max(80,Parent.Width * .125)
                    X: =btnTemplateListHeader_Done.X -Self.Width
                    ZIndex: =10

                imgTemplateListHeader_Done As image:
                    DisabledFill: |-
                        =With(
                            {
                                varImageIsCategory: LookUp(
                                    staticIcons,
                                    staticIconName = "Completed"
                                ).staticIconIsCategory
                            },
                            If(
                                varImageIsCategory,
                                gblAppStyles.Icons.DisabledFill_Category,
                                Transparent
                            )
                        )
                    DisplayMode: =btnTemplateList_Add.DisplayMode
                    Fill: |-
                        =With(
                            {
                                varImageIsCategory: LookUp(
                                    staticIcons,
                                    staticIconName = "Completed"
                                ).staticIconIsCategory
                            },
                            If(
                                varImageIsCategory,
                                gblAppStyles.Icons.Fill_Category,
                                Transparent
                            )
                        )
                    Height: =btnTemplateListHeader_Done.Height
                    Image: |-
                        =With(
                            {
                                varImageRecord: LookUp(
                                    staticIcons,
                                    staticIconName = "Completed"
                                ),
                                varColor: If(
                                    Self.DisplayMode = DisplayMode.Disabled,
                                    gblAppStyles.Icons.DisabledColor,
                                    gblAppStyles.Icons.Color
                                )
                            },
                            With(
                                {
                                    varImageData: Concatenate(
                                        "data:image/svg+xml;utf8, ",
                                        EncodeUrl(
                                            Concatenate(
                                                "<svg viewBox='",
                                                varImageRecord.staticIconViewbox,
                                                "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                varImageRecord.staticIconPath,
                                                "' fill='#",
                                                varColor,
                                                "'/></svg>"
                                            )
                                        )
                                    )
                                },
                                varImageData
                            )
                        )
                    OnSelect: =Select(Parent)
                    PaddingBottom: =6
                    PaddingLeft: =6
                    PaddingRight: =6
                    PaddingTop: =6
                    RadiusBottomLeft: =5
                    RadiusBottomRight: =5
                    RadiusTopLeft: =5
                    RadiusTopRight: =5
                    Width: =Min(32,Parent.Width * 0.05)
                    X: =btnTemplateListHeader_Done.X
                    Y: =btnTemplateListHeader_Done.Y
                    ZIndex: =11

                imgTemplateListHeader_DoneSort As image:
                    DisabledFill: |-
                        =With(
                            {
                                varImageIsCategory: LookUp(
                                    staticIcons,
                                    staticIconName = "Chevron up"
                                ).staticIconIsCategory
                            },
                            If(
                                varImageIsCategory,
                                gblAppStyles.Icons.DisabledFill_Category,
                                Transparent
                            )
                        )
                    DisplayMode: =btnTemplateList_Add.DisplayMode
                    Fill: |-
                        =With(
                            {
                                varImageIsCategory: LookUp(
                                    staticIcons,
                                    staticIconName = "Chevron up"
                                ).staticIconIsCategory
                            },
                            If(
                                varImageIsCategory,
                                gblAppStyles.Icons.Fill_Category,
                                Transparent
                            )
                        )
                    Height: =btnTemplateListHeader_Done.Height
                    Image: |-
                        =With(
                            {
                                varImageRecord: LookUp(
                                    staticIcons,
                                    staticIconName = "Chevron up"
                                ),
                                varColor: If(
                                    Self.DisplayMode = DisplayMode.Disabled,
                                    gblAppStyles.Icons.DisabledColor,
                                    gblAppStyles.Icons.Color
                                )
                            },
                            With(
                                {
                                    varImageData: Concatenate(
                                        "data:image/svg+xml;utf8, ",
                                        EncodeUrl(
                                            Concatenate(
                                                "<svg viewBox='",
                                                varImageRecord.staticIconViewbox,
                                                "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                varImageRecord.staticIconPath,
                                                "' fill='#",
                                                varColor,
                                                "'/></svg>"
                                            )
                                        )
                                    )
                                },
                                varImageData
                            )
                        )
                    ImageRotation: |-
                        =If(
                            locSortTemplateList_Done_Ascending,
                            ImageRotation.Rotate180,
                            ImageRotation.None
                        )
                    OnSelect: =Select(Parent)
                    PaddingBottom: =4
                    PaddingLeft: =2
                    PaddingRight: =2
                    PaddingTop: =4
                    RadiusBottomLeft: =5
                    RadiusBottomRight: =5
                    RadiusTopLeft: =5
                    RadiusTopRight: =5
                    Visible: =locSortTemplateList_Done
                    Width: =16
                    X: =btnTemplateListHeader_Done.X + 28
                    Y: =btnTemplateListHeader_Done.Y
                    ZIndex: =12

                btnTemplateListHeader_Done As button:
                    Align: =Align.Left
                    AutoDisableOnSelect: =false
                    BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
                    BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
                    Color: =gblAppStyles.ButtonTransparent.Color
                    DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                    DisabledColor: =gblAppStyles.ButtonTransparent.DisabledColor
                    DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
                    DisplayMode: =btnTemplateList_Add.DisplayMode
                    Fill: =gblAppStyles.ButtonTransparent.Fill
                    FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
                    FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
                    Font: =Font.'Segoe UI'
                    FontWeight: |-
                        =If(
                            locSortTemplateList_Done Or locSortTemplateList_Done,
                            FontWeight.Semibold,
                            FontWeight.Normal
                        )
                    Height: =Parent.TemplateHeight
                    HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
                    HoverColor: =gblAppStyles.ButtonTransparent.HoverColor
                    HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
                    OnSelect: |-
                        =UpdateContext(
                            {
                                locSortTemplateList_Title: false,
                                locSortTemplateList_Title_Ascending: false,
                                locSortTemplateList_NotStarted: false,
                                locSortTemplateList_NotStarted_Ascending: false,
                                locSortTemplateList_InProgress: false,
                                locSortTemplateList_InProgress_Ascending: false,
                                locSortTemplateList_Done: true,
                                locSortTemplateList_Done_Ascending: !locSortTemplateList_Done_Ascending
                            }
                        )
                    PaddingBottom: =0
                    PaddingLeft: =36*1
                    PaddingRight: =0
                    PaddingTop: =0
                    PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
                    PressedColor: =gblAppStyles.ButtonTransparent.PressedColor
                    PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
                    RadiusBottomLeft: =gblAppStyles.ButtonTransparent.RadiusBottomLeft
                    RadiusBottomRight: =gblAppStyles.ButtonTransparent.RadiusBottomRight
                    RadiusTopLeft: =gblAppStyles.ButtonTransparent.RadiusTopLeft
                    RadiusTopRight: =gblAppStyles.ButtonTransparent.RadiusTopRight
                    Size: =gblAppStyles.Label.Size.Small
                    TabIndex: =If(locDisplayDialog || locBlockUserInput ||locDisplayDialogDelete ||locDisplayAssignmentSelect ||locSelectIcon,-1,0)
                    Text: |-
                        =With(
                            {
                                varDefault: "Completed",
                                varOOBTextId: "_translateCommon_PlannerStatusCompleted"
                            },
                            With(
                                {
                                    varLocalizedText: LookUp(
                                        colLocalization,
                                        OOBTextId = varOOBTextId,
                                        LocalizedText
                                    )
                                },
                                Coalesce(
                                    varLocalizedText,
                                    varDefault
                                )
                            )
                        )
                    Width: =Max(80,Parent.Width * .125)
                    X: =btnTemplateListHeader_HiddenEditWidth.X -Self.Width
                    ZIndex: =13

                btnTemplateListHeader_HiddenEditWidth As button:
                    Align: =Align.Left
                    AutoDisableOnSelect: =false
                    BorderThickness: =0
                    Color: =Transparent
                    DisabledBorderColor: =Transparent
                    DisabledColor: =Transparent
                    DisabledFill: =Transparent
                    Fill: =Transparent
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Normal
                    Height: =Parent.TemplateHeight
                    HoverBorderColor: =Transparent
                    HoverColor: =Self.Color
                    HoverFill: =Transparent
                    OnSelect: =
                    PaddingBottom: =0
                    PaddingLeft: =32
                    PaddingRight: =0
                    PaddingTop: =0
                    PressedBorderColor: =Transparent
                    PressedColor: =Self.Color
                    PressedFill: =Transparent
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =11
                    TabIndex: =If(locDisplayDialog || locBlockUserInput ||locDisplayDialogDelete ||locDisplayAssignmentSelect ||locSelectIcon,-1,0)
                    Text: =""
                    Visible: =false
                    Width: =Max(60,Parent.Width * .1)    
                    X: =Parent.Width - Self.Width - gblPadding.Page
                    ZIndex: =14

            comZeroStateTemplate As comZeroState:
                Fill: =gblAppStyles.Background.Fill
                Height: =240
                inputImage: =Image_ZeroState_Templates
                inputSizePercent: =60
                inputTextColor: =gblAppStyles.Label.Color
                inputTextToDisplay: |-
                    =With(
                        {
                            varDefault: "Issue templates will appear here",
                            varOOBTextId: "comZeroStateTemplate__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Visible: =IsEmpty(galTemplateList.AllItems)
                Width: =galTemplateList.Width
                X: =galTemplateList.X
                Y: =shpTemplateList_Divider.Y +shpTemplateList_Divider.Height
                ZIndex: =7

            btnTemplateList_Add As button:
                Align: =Align.Left
                BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
                BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
                Color: =gblAppStyles.ButtonTransparent.Color
                DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                DisabledColor: =gblAppStyles.ButtonTransparent.DisabledColor
                DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
                DisplayMode: =If(IsBlank(gblRecordCategory),DisplayMode.Disabled, galCategory.DisplayMode)
                Fill: =gblAppStyles.ButtonTransparent.Fill
                FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Normal
                Height: =32
                HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
                HoverColor: =gblAppStyles.ButtonTransparent.HoverColor
                HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
                OnSelect: |
                    =Clear(colCdsIssueQuestions);
                    Clear(colCdsIssueAssignments);
                    Set(
                        gblRecordTemplate,
                        Blank()
                    );
                    Select(imgQuestionList_Add);
                    UpdateContext(
                        {
                            locScreenModeCreateCategory: false,
                            locScreenModeCreateTemplate: true,
                            locScreenModeEditCategory: false,
                            locScreenModeEditTemplate: false,
                            locScreenModeViewCategory: false,
                            locScreenModeViewTemplate: false
                        }
                    );
                PaddingLeft: =32
                PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
                PressedColor: =gblAppStyles.ButtonTransparent.PressedColor
                PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
                RadiusBottomLeft: =gblAppStyles.ButtonTransparent.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.ButtonTransparent.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.ButtonTransparent.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.ButtonTransparent.RadiusTopRight
                Size: =gblAppStyles.ButtonTransparent.Size
                TabIndex: =If(locDisplayDialog || locBlockUserInput ||locDisplayDialogDelete ||locDisplayAssignmentSelect ||locSelectIcon,-1,0)
                Text: |-
                    =With(
                        {
                            varDefault: "Add issue template",
                            varOOBTextId: "btnTemplateList_Add__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Width: |-
                    =Switch(
                        gblUserLanguage,
                        "de-DE",
                        220,
                        "en-US",
                        170,
                        "es-ES",
                        240,
                        "fr-FR",
                        245,
                        "it-IT",
                        220,
                        "ja-JP",
                        205,
                        "nl-NL",
                        230,
                        "pt-BR",
                        245,
                        170
                    )
                X: =Parent.Width - Self.Width - gblPadding.Page
                Y: =0*0
                ZIndex: =8

        conTemplateQuestionHelp As groupContainer:
            Height: =Parent.Height - Self.Y
            Visible: =locScreenModeCreateTemplate Or locScreenModeEditTemplate
            Width: =Parent.Width
            Y: =conTemplateForm.Y + conTemplateForm.Height
            ZIndex: =2

            cnvQuestionHelp As fluidGrid.fluidGridWithBlankCard:
                BorderThickness: =0
                Height: =Parent.Height - Self.Y
                Width: =Parent.Width
                Y: =shpQuestion_Divider.Y + shpQuestion_Divider.Height
                ZIndex: =2

                dtcQuestion As dataCard:
                    BorderColor: =RGBA(0, 0, 0, 1)
                    BorderStyle: =BorderStyle.Solid
                    BorderThickness: =0
                    DisplayMode: =DisplayMode.Edit
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =galQuestionList.Height
                    Width: =Parent.Width
                    X: =0
                    Y: =0
                    ZIndex: =1

                    galQuestionList As gallery.galleryVertical:
                        AccessibleLabel: ="Gallery of questions which will be asked when creating an issue with this template"
                        BorderColor: =RGBA(0, 0, 0, 0)
                        Height: =(CountRows(colCdsIssueQuestions) * (Self.TemplateHeight + Self.TemplatePadding)) + Self.TemplatePadding
                        Items: =SortByColumns( colCdsIssueQuestions,"msft_sequence",Ascending)
                        Layout: =Layout.Vertical
                        TabIndex: =If(locDisplayDialog || locBlockUserInput ||locDisplayDialogDelete ||locDisplayAssignmentSelect ||locSelectIcon,-1,0)
                        TemplatePadding: =gblPadding.Page
                        TemplateSize: =72
                        Width: =Parent.Width
                        X: =0 * 0
                        Y: =0 * 0
                        ZIndex: =1

                        shpQuestionList_Divider As rectangle:
                            DisplayMode: =DisplayMode.View
                            Fill: =gblAppStyles.Dividers.Elements
                            Height: =0.5
                            Width: =Parent.TemplateWidth - (Self.X * 2)
                            X: =gblPadding.Page
                            Y: =Parent.TemplateHeight - Self.Height
                            ZIndex: =1

                        btnQuestionList_Background As button:
                            AutoDisableOnSelect: =false
                            BorderColor: =gblAppStyles.ButtonBackground.BorderColor
                            BorderThickness: =gblAppStyles.ButtonBackground.BorderThickness
                            Color: =gblAppStyles.ButtonBackground.Color
                            DisabledBorderColor: =gblAppStyles.ButtonBackground.DisabledBorderColor
                            DisabledColor: =gblAppStyles.ButtonBackground.DisabledColor
                            DisabledFill: =gblAppStyles.ButtonBackground.DisabledFill
                            DisplayMode: =DisplayMode.Disabled
                            Fill: =gblAppStyles.ButtonBackground.Fill
                            FocusedBorderColor: =gblAppStyles.ButtonBackground.FocusedBorderColor
                            FocusedBorderThickness: =gblAppStyles.ButtonBackground.FocusedBorderThickness
                            Height: =Parent.TemplateHeight
                            HoverBorderColor: =gblAppStyles.ButtonBackground.HoverBorderColor
                            HoverColor: =gblAppStyles.ButtonBackground.HoverColor
                            HoverFill: =gblAppStyles.ButtonBackground.HoverFill
                            OnSelect: =Select(Parent)
                            PressedBorderColor: =gblAppStyles.ButtonBackground.PressedBorderColor
                            PressedColor: =gblAppStyles.ButtonBackground.PressedColor
                            PressedFill: =gblAppStyles.ButtonBackground.PressedFill
                            RadiusBottomLeft: =gblAppStyles.ButtonBackground.RadiusBottomLeft
                            RadiusBottomRight: =gblAppStyles.ButtonBackground.RadiusBottomRight
                            RadiusTopLeft: =gblAppStyles.ButtonBackground.RadiusTopLeft
                            RadiusTopRight: =gblAppStyles.ButtonBackground.RadiusTopRight
                            Size: =gblAppStyles.ButtonBackground.Size
                            TabIndex: =-1
                            Text: =Blank()
                            Visible: =false
                            Width: =Parent.TemplateWidth
                            X: =0*0
                            Y: =0*0
                            ZIndex: =2

                        txtQuestionList_Instructions As text:
                            AccessibleLabel: |-
                                =With(
                                    {
                                        varDefault: "Text input for the question instructions",
                                        varOOBTextId: "txtQuestionList_Instructions__locAccessibleLabel"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextId = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            BorderColor: =gblAppStyles.TextInput.BorderColor
                            BorderThickness: =gblAppStyles.TextInput.BorderThickness
                            Color: =gblAppStyles.TextInput.Color
                            Default: =ThisItem.Instructions
                            DisabledBorderColor: =gblAppStyles.TextInput.DisabledBorderColor
                            DisabledColor: =gblAppStyles.TextInput.DisabledColor
                            DisabledFill: =gblAppStyles.TextInput.DisabledFill
                            DisplayMode: =If(locScreenModeEditTemplate Or locScreenModeCreateTemplate, DisplayMode.Edit,DisplayMode.View)
                            Fill: =gblAppStyles.TextInput.Fill
                            FocusedBorderColor: =gblAppStyles.TextInput.FocusedBorderColor
                            FocusedBorderThickness: =gblAppStyles.TextInput.FocusedBorderThickness
                            Font: ='Segoe UI'
                            Height: =28
                            HintText: |-
                                =With(
                                    {
                                        varDefault: "Enter a question to ask the user",
                                        varOOBTextId: "txtQuestionList_Instructions__locText"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextId = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            HoverBorderColor: =gblAppStyles.TextInput.HoverBorderColor
                            HoverColor: =gblAppStyles.TextInput.HoverColor
                            HoverFill: =gblAppStyles.TextInput.HoverFill
                            OnChange: |-
                                =UpdateIf(
                                    colCdsIssueQuestions,
                                    ThisItem.appRef = appRef,
                                    {
                                        msft_name: Self.Text,
                                        appRecordUpdated: true
                                    }
                                )
                            PaddingBottom: =4
                            PaddingLeft: =8
                            PaddingRight: =8
                            PaddingTop: =4
                            PressedBorderColor: =gblAppStyles.TextInput.PressedBorderColor
                            PressedColor: =gblAppStyles.TextInput.PressedColor
                            PressedFill: =gblAppStyles.TextInput.PressedFill
                            RadiusBottomLeft: =gblAppStyles.TextInput.RadiusBottomLeft
                            RadiusBottomRight: =gblAppStyles.TextInput.RadiusBottomRight
                            RadiusTopLeft: =gblAppStyles.TextInput.RadiusTopLeft
                            RadiusTopRight: =gblAppStyles.TextInput.RadiusTopRight
                            Size: =gblAppStyles.TextInput.Size
                            TabIndex: =If(locDisplayDialog || locBlockUserInput ||locDisplayDialogDelete ||locDisplayAssignmentSelect ||locSelectIcon,-1,0)
                            Width: =Max(Parent.Width * .6,300)
                            X: =gblPadding.Page
                            Y: =lblQuestionList_Sequence.Y + lblQuestionList_Sequence.Height
                            ZIndex: =3

                        lblQuestionList_Sequence As label:
                            BorderColor: =gblAppStyles.Label.BorderColor
                            BorderThickness: =gblAppStyles.Label.BorderThickness
                            Color: =gblAppStyles.Label.Color
                            DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                            DisabledColor: =gblAppStyles.Label.DisabledColor
                            DisabledFill: =gblAppStyles.Label.DisabledFill
                            Fill: =gblAppStyles.Label.Fill
                            FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                            FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Semibold
                            Height: =24
                            HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                            HoverColor: =gblAppStyles.Label.HoverColor
                            HoverFill: =gblAppStyles.Label.HoverFill
                            OnSelect: =Select(Parent)
                            PaddingBottom: =0
                            PaddingLeft: =0
                            PaddingRight: =0
                            PaddingTop: =0
                            PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                            PressedColor: =gblAppStyles.Label.PressedColor
                            PressedFill: =gblAppStyles.Label.PressedFill
                            Size: =gblAppStyles.Label.Size.Medium
                            Text: ="Question " & ThisItem.Sequence
                            VerticalAlign: =VerticalAlign.Top
                            X: =gblPadding.Page
                            Y: =0*0
                            ZIndex: =4

                        imgQuestionSequenceDown As image:
                            AccessibleLabel: |-
                                =With(
                                    {
                                        varDefault: "Down icon, to move the order of this question down in the list",
                                        varOOBTextId: "imgQuestionSequenceDown__locAccessibleLabel"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextId = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            DisabledFill: |-
                                =With(
                                    {
                                        varImageIsCategory: LookUp(
                                            staticIcons,
                                            staticIconName = "Down"
                                        ).staticIconIsCategory
                                    },
                                    If(
                                        varImageIsCategory,
                                        gblAppStyles.Icons.DisabledFill_Category,
                                        Transparent
                                    )
                                )
                            DisplayMode: =If(ThisItem.msft_sequence = Max(colCdsIssueQuestions,msft_sequence), DisplayMode.Disabled, DisplayMode.Edit)
                            Fill: |-
                                =With(
                                    {
                                        varImageIsCategory: LookUp(
                                            staticIcons,
                                            staticIconName = "Down"
                                        ).staticIconIsCategory
                                    },
                                    If(
                                        varImageIsCategory,
                                        gblAppStyles.Icons.Fill_Category,
                                        Transparent
                                    )
                                )
                            Height: =24
                            HoverFill: |
                                =If(
                                    gblThemeDark Or gblThemeHiCo,
                                    gblAppColors.OverlayDark,
                                    gblAppColors.OverlayLight
                                )
                            Image: |-
                                =With(
                                    {
                                        varImageRecord: LookUp(
                                            staticIcons,
                                            staticIconName = "Down"
                                        ),
                                        varColor: If(
                                            Self.DisplayMode = DisplayMode.Disabled,
                                            gblAppStyles.Icons.DisabledColor,
                                            gblAppStyles.Icons.Color
                                        )
                                    },
                                    With(
                                        {
                                            varImageData: Concatenate(
                                                "data:image/svg+xml;utf8, ",
                                                EncodeUrl(
                                                    Concatenate(
                                                        "<svg viewBox='",
                                                        varImageRecord.staticIconViewbox,
                                                        "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                        varImageRecord.staticIconPath,
                                                        "' fill='#",
                                                        varColor,
                                                        "'/></svg>"
                                                    )
                                                )
                                            )
                                        },
                                        varImageData
                                    )
                                )
                            OnSelect: |-
                                =// Set variables for update
                                UpdateContext({locSequenceCurrent: ThisItem.msft_sequence});
                                UpdateContext(
                                    {
                                        locSequenceNew: First(
                                            SortByColumns(
                                                Filter(
                                                    colCdsIssueQuestions,
                                                    msft_sequence > locSequenceCurrent
                                                ),
                                                "msft_sequence",
                                                Ascending
                                            )
                                        ).msft_sequence// Revise to lookup next # in Collection
                                    }
                                );
                                // Find existing with 'New', swap with 'Current'
                                UpdateIf(
                                    colCdsIssueQuestions,
                                    colCdsIssueQuestions[@msft_sequence] = locSequenceNew,
                                    {
                                        msft_sequence: locSequenceCurrent,
                                        appRecordUpdated: true
                                    }
                                );
                                // Update this with 'New', value
                                UpdateIf(
                                    colCdsIssueQuestions,
                                    ThisItem.appRef = colCdsIssueQuestions[@appRef],
                                    {
                                        msft_sequence: locSequenceNew,
                                        appRecordUpdated: true
                                    }
                                )
                            PaddingBottom: =4
                            PaddingLeft: =4
                            PaddingRight: =4
                            PaddingTop: =4
                            RadiusBottomLeft: =5
                            RadiusBottomRight: =5
                            RadiusTopLeft: =5
                            RadiusTopRight: =5
                            TabIndex: =If(locDisplayDialog || locBlockUserInput ||locDisplayDialogDelete ||locDisplayAssignmentSelect ||locSelectIcon,-1,0)
                            Tooltip: =Self.AccessibleLabel
                            Width: =24
                            X: =Parent.TemplateWidth - Self.Width - gblPadding.Page
                            Y: =lblQuestionList_Sequence.Y
                            ZIndex: =5

                        imgQuestionSequenceUp As image:
                            AccessibleLabel: |-
                                =With(
                                    {
                                        varDefault: "Up icon, to move the order of this question up in the list",
                                        varOOBTextId: "imgQuestionSequenceUp__locAccessibleLabel"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextId = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            DisabledFill: |-
                                =With(
                                    {
                                        varImageIsCategory: LookUp(
                                            staticIcons,
                                            staticIconName = "Up"
                                        ).staticIconIsCategory
                                    },
                                    If(
                                        varImageIsCategory,
                                        gblAppStyles.Icons.DisabledFill_Category,
                                        Transparent
                                    )
                                )
                            DisplayMode: |-
                                =If(
                                    ThisItem.msft_sequence = Min(
                                        colCdsIssueQuestions,
                                        msft_sequence
                                    ),
                                    DisplayMode.Disabled,
                                    DisplayMode.Edit
                                )
                            Fill: |-
                                =With(
                                    {
                                        varImageIsCategory: LookUp(
                                            staticIcons,
                                            staticIconName = "Up"
                                        ).staticIconIsCategory
                                    },
                                    If(
                                        varImageIsCategory,
                                        gblAppStyles.Icons.Fill_Category,
                                        Transparent
                                    )
                                )
                            Height: =24
                            HoverFill: |
                                =If(
                                    gblThemeDark Or gblThemeHiCo,
                                    gblAppColors.OverlayDark,
                                    gblAppColors.OverlayLight
                                )
                            Image: |-
                                =With(
                                    {
                                        varImageRecord: LookUp(
                                            staticIcons,
                                            staticIconName = "Up"
                                        ),
                                        varColor: If(
                                            Self.DisplayMode = DisplayMode.Disabled,
                                            gblAppStyles.Icons.DisabledColor,
                                            gblAppStyles.Icons.Color
                                        )
                                    },
                                    With(
                                        {
                                            varImageData: Concatenate(
                                                "data:image/svg+xml;utf8, ",
                                                EncodeUrl(
                                                    Concatenate(
                                                        "<svg viewBox='",
                                                        varImageRecord.staticIconViewbox,
                                                        "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                        varImageRecord.staticIconPath,
                                                        "' fill='#",
                                                        varColor,
                                                        "'/></svg>"
                                                    )
                                                )
                                            )
                                        },
                                        varImageData
                                    )
                                )
                            OnSelect: |-
                                =// Set variables for update
                                UpdateContext({locSequenceCurrent: ThisItem.msft_sequence});
                                UpdateContext(
                                    {
                                        locSequenceNew: Last(
                                            SortByColumns(
                                                Filter(
                                                    colCdsIssueQuestions,
                                                    msft_sequence < locSequenceCurrent
                                                ),
                                                "msft_sequence",
                                                Ascending
                                            )
                                        ).msft_sequence// Revise to lookup next # in Collection
                                    }
                                );
                                // Find existing with 'New', swap with 'Current'
                                UpdateIf(
                                    colCdsIssueQuestions,
                                    colCdsIssueQuestions[@Sequence] = locSequenceNew,
                                    {
                                        msft_sequence: locSequenceCurrent,
                                        appRecordUpdated: true
                                    }
                                );
                                // Update this with 'New', value
                                UpdateIf(
                                    colCdsIssueQuestions,
                                    ThisItem.appRef = colCdsIssueQuestions[@appRef],
                                    {
                                        Sequence: locSequenceNew,
                                        appRecordUpdated: true
                                    }
                                )
                            PaddingBottom: =4
                            PaddingLeft: =4
                            PaddingRight: =4
                            PaddingTop: =4
                            RadiusBottomLeft: =5
                            RadiusBottomRight: =5
                            RadiusTopLeft: =5
                            RadiusTopRight: =5
                            TabIndex: =If(locDisplayDialog || locBlockUserInput ||locDisplayDialogDelete ||locDisplayAssignmentSelect ||locSelectIcon,-1,0)
                            Tooltip: =Self.AccessibleLabel
                            Width: =24
                            X: =imgQuestionSequenceDown.X - Self.Width - 12
                            Y: =lblQuestionList_Sequence.Y
                            ZIndex: =6

                        imgQuestionDelete As image:
                            AccessibleLabel: |-
                                =With(
                                    {
                                        varDefault: "Delete icon, to remove this question from the issue template",
                                        varOOBTextId: "imgQuestionDelete__locAccessibleLabel"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextId = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            DisabledFill: |-
                                =With(
                                    {
                                        varImageIsCategory: LookUp(
                                            staticIcons,
                                            staticIconName = "Delete"
                                        ).staticIconIsCategory
                                    },
                                    If(
                                        varImageIsCategory,
                                        gblAppStyles.Icons.DisabledFill_Category,
                                        Transparent
                                    )
                                )
                            Fill: |
                                =With(
                                    {
                                        varImageIsCategory: LookUp(
                                            staticIcons,
                                            staticIconName = "Delete"
                                        ).staticIconIsCategory
                                    },
                                    If(
                                        varImageIsCategory,
                                        gblAppStyles.Icons.Fill_Category,
                                        Transparent
                                    )
                                )
                            Height: =24
                            HoverFill: |
                                =If(
                                    gblThemeDark Or gblThemeHiCo,
                                    gblAppColors.OverlayDark,
                                    gblAppColors.OverlayLight
                                )
                            Image: |-
                                =With(
                                    {
                                        varImageRecord: LookUp(
                                            staticIcons,
                                            staticIconName = "Delete"
                                        ),
                                        varColor: If(
                                            Self.DisplayMode = DisplayMode.Disabled,
                                            gblAppStyles.Icons.DisabledColor,
                                            gblAppStyles.Icons.Color_Red
                                        )
                                    },
                                    With(
                                        {
                                            varImageData: Concatenate(
                                                "data:image/svg+xml;utf8, ",
                                                EncodeUrl(
                                                    Concatenate(
                                                        "<svg viewBox='",
                                                        varImageRecord.staticIconViewbox,
                                                        "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                        varImageRecord.staticIconPath,
                                                        "' fill='#",
                                                        varColor,
                                                        "'/></svg>"
                                                    )
                                                )
                                            )
                                        },
                                        varImageData
                                    )
                                )
                            OnSelect: |
                                =UpdateContext({locSequenceCurrent: ThisItem.Sequence});
                                UpdateIf(
                                    colCdsIssueQuestions,
                                    colCdsIssueQuestions[@Sequence] > locSequenceCurrent,
                                    {
                                        Sequence: colCdsIssueQuestions[@Sequence] - 1,
                                        appRecordUpdated: true
                                    }
                                );
                                Remove(
                                    colCdsIssueQuestions,
                                    ThisItem
                                );
                                If(
                                    !ThisItem.appIsNewRecord,
                                    Collect(
                                        colQuestionsToDelete,
                                        ThisItem.'Issue Report Question'
                                    )
                                );
                            PaddingBottom: =4
                            PaddingLeft: =4
                            PaddingRight: =4
                            PaddingTop: =4
                            RadiusBottomLeft: =5
                            RadiusBottomRight: =5
                            RadiusTopLeft: =5
                            RadiusTopRight: =5
                            TabIndex: =If(locDisplayDialog || locBlockUserInput ||locDisplayDialogDelete ||locDisplayAssignmentSelect ||locSelectIcon,-1,0)
                            Tooltip: =Self.AccessibleLabel
                            Width: =24
                            X: =imgQuestionSequenceUp.X - Self.Width - 12
                            Y: =lblQuestionList_Sequence.Y
                            ZIndex: =7

                dtcHelp As dataCard.blankCard:
                    BorderColor: =RGBA(0, 0, 0, 1)
                    BorderStyle: =BorderStyle.Solid
                    DisplayMode: =DisplayMode.Edit
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =160
                    Width: =Parent.Width
                    X: =0
                    Y: =1
                    ZIndex: =2

                    lblHelpPane_Header As label:
                        BorderColor: =gblAppStyles.Label.BorderColor
                        BorderThickness: =gblAppStyles.Label.BorderThickness
                        Color: =gblAppStyles.Label.Color
                        DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                        DisabledColor: =gblAppStyles.Label.DisabledColor
                        DisabledFill: =gblAppStyles.Label.DisabledFill
                        Fill: =gblAppStyles.Label.Fill
                        FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                        FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                        Font: =Font.'Segoe UI'
                        FontWeight: =FontWeight.Semibold
                        Height: =32
                        HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                        HoverColor: =gblAppStyles.Label.HoverColor
                        HoverFill: =gblAppStyles.Label.HoverFill
                        PaddingLeft: =gblPadding.Page
                        PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                        PressedColor: =gblAppStyles.Label.PressedColor
                        PressedFill: =gblAppStyles.Label.PressedFill
                        Size: =gblAppStyles.Label.Size.Medium
                        Text: |-
                            =With(
                                {
                                    varDefault: "Additional help",
                                    varOOBTextId: "lblHelpPane_Header__locText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextId = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        Width: =160
                        X: =0*0
                        Y: =0*0
                        ZIndex: =2

                    shpHelpPane_Divider As rectangle:
                        DisplayMode: =DisplayMode.View
                        Fill: =gblAppStyles.Dividers.Elements
                        Height: =1
                        Width: =Parent.Width - Self.X - gblPadding.Page
                        X: =lblHelpPane_Header.PaddingLeft
                        Y: =lblHelpPane_Header.Y + lblHelpPane_Header.Height
                        ZIndex: =3

                    lblHelpPane_PrimaryContact As label:
                        BorderColor: =gblAppStyles.Label.BorderColor
                        BorderThickness: =gblAppStyles.Label.BorderThickness
                        Color: =gblAppStyles.Label.Color
                        DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                        DisabledColor: =gblAppStyles.Label.DisabledColor
                        DisabledFill: =gblAppStyles.Label.DisabledFill
                        Fill: =gblAppStyles.Label.Fill
                        FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                        FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                        Font: =Font.'Segoe UI'
                        FontWeight: =FontWeight.Semibold
                        Height: =32
                        HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                        HoverColor: =gblAppStyles.Label.HoverColor
                        HoverFill: =gblAppStyles.Label.HoverFill
                        PaddingLeft: =0
                        PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                        PressedColor: =gblAppStyles.Label.PressedColor
                        PressedFill: =gblAppStyles.Label.PressedFill
                        Size: =gblAppStyles.Label.Size.Medium
                        Text: |-
                            =With(
                                {
                                    varDefault: "Primary contact",
                                    varOOBTextId: "lblHelpPane_PrimaryContact__locText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextId = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        Width: =Parent.Width * .35
                        X: =gblPadding.Page
                        Y: =shpHelpPane_Divider.Y + shpHelpPane_Divider.Height + gblPadding.Page
                        ZIndex: =4

                    lblHelpPane_SupportingInformation As label:
                        BorderColor: =gblAppStyles.Label.BorderColor
                        BorderThickness: =gblAppStyles.Label.BorderThickness
                        Color: =gblAppStyles.Label.Color
                        DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                        DisabledColor: =gblAppStyles.Label.DisabledColor
                        DisabledFill: =gblAppStyles.Label.DisabledFill
                        Fill: =gblAppStyles.Label.Fill
                        FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                        FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                        Font: =Font.'Segoe UI'
                        FontWeight: =FontWeight.Semibold
                        Height: =lblHelpPane_PrimaryContact.Height
                        HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                        HoverColor: =gblAppStyles.Label.HoverColor
                        HoverFill: =gblAppStyles.Label.HoverFill
                        PaddingLeft: =0
                        PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                        PressedColor: =gblAppStyles.Label.PressedColor
                        PressedFill: =gblAppStyles.Label.PressedFill
                        Size: =gblAppStyles.Label.Size.Medium
                        Text: |-
                            =With(
                                {
                                    varDefault: "Supporting information",
                                    varOOBTextId: "lblHelpPane_SupportingInformation__locText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextId = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        Width: =Parent.Width - Self.X - gblPadding.Page
                        X: =lblHelpPane_PrimaryContact.X + lblHelpPane_PrimaryContact.Width + gblPadding.Page
                        Y: =lblHelpPane_PrimaryContact.Y
                        ZIndex: =5

                    txtSupportingInformation As text:
                        AccessibleLabel: |-
                            =With(
                                {
                                    varDefault: "Text input for supporting information, which is shown to user after using issue template",
                                    varOOBTextId: "txtSupportingInformation__locAccessibleLabel"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextId = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        BorderColor: =gblAppStyles.TextInput.BorderColor
                        BorderThickness: =gblAppStyles.TextInput.BorderThickness
                        Color: =gblAppStyles.TextInput.Color
                        Default: |-
                            =If(
                                locScreenModeCreateTemplate,
                                Blank(),
                                gblRecordTemplate.'Supporting Information'
                            )
                        DisabledBorderColor: =gblAppStyles.TextInput.DisabledBorderColor
                        DisabledColor: =gblAppStyles.TextInput.DisabledColor
                        DisabledFill: =gblAppStyles.TextInput.DisabledFill
                        Fill: =gblAppStyles.TextInput.Fill
                        FocusedBorderColor: =gblAppStyles.TextInput.FocusedBorderColor
                        FocusedBorderThickness: =gblAppStyles.TextInput.FocusedBorderThickness
                        Font: ='Segoe UI'
                        Height: =48
                        HintText: |-
                            =With(
                                {
                                    varDefault: "Enter additional supporting information to help resolve the issue",
                                    varOOBTextId: "txtSupportingInformation__locHintText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextId = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        HoverBorderColor: =gblAppStyles.TextInput.HoverBorderColor
                        HoverColor: =gblAppStyles.TextInput.HoverColor
                        HoverFill: =gblAppStyles.TextInput.HoverFill
                        Mode: =TextMode.MultiLine
                        PaddingBottom: =4
                        PaddingLeft: =8
                        PaddingRight: =8
                        PaddingTop: =4
                        PressedBorderColor: =gblAppStyles.TextInput.PressedBorderColor
                        PressedColor: =gblAppStyles.TextInput.PressedColor
                        PressedFill: =gblAppStyles.TextInput.PressedFill
                        RadiusBottomLeft: =gblAppStyles.TextInput.RadiusBottomLeft
                        RadiusBottomRight: =gblAppStyles.TextInput.RadiusBottomRight
                        RadiusTopLeft: =gblAppStyles.TextInput.RadiusTopLeft
                        RadiusTopRight: =gblAppStyles.TextInput.RadiusTopRight
                        Size: =gblAppStyles.TextInput.Size
                        TabIndex: =If(locDisplayDialog || locBlockUserInput ||locDisplayDialogDelete ||locDisplayAssignmentSelect ||locSelectIcon,-1,0)
                        Width: =lblHelpPane_SupportingInformation.Width
                        X: =lblHelpPane_SupportingInformation.X
                        Y: =lblHelpPane_SupportingInformation.Y + lblHelpPane_SupportingInformation.Height
                        ZIndex: =6

                    conPrimaryContact As groupContainer:
                        Fill: =gblAppStyles.ButtonBackground.Fill
                        Height: =48
                        Width: =lblHelpPane_PrimaryContact.Width
                        X: =lblHelpPane_PrimaryContact.X
                        Y: =lblHelpPane_PrimaryContact.Y + lblHelpPane_PrimaryContact.Height
                        ZIndex: =11

                        lblPrimaryContactSelect As label:
                            BorderColor: =gblAppStyles.Label.BorderColor
                            BorderThickness: =gblAppStyles.Label.BorderThickness
                            Color: =If(IsBlank(lblPrimaryContactName.Text),gblAppStyles.Label.Color,Transparent)
                            DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                            DisabledColor: =gblAppStyles.Label.DisabledColor
                            DisabledFill: =gblAppStyles.Label.DisabledFill
                            Fill: =gblAppStyles.Label.Fill
                            FocusedBorderColor: =gblAppStyles.TextInput.FocusedBorderColor
                            FocusedBorderThickness: =gblAppStyles.TextInput.FocusedBorderThickness
                            Font: =Font.'Segoe UI'
                            Height: =Parent.Height
                            HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                            HoverColor: =gblAppStyles.Label.HoverColor
                            HoverFill: =gblAppStyles.Label.HoverFill
                            OnSelect: |-
                                =UpdateContext(
                                    {
                                        locDisplayDialog: true,
                                        locDisplayAssignmentSelect: true,
                                        locSelectPrimaryContact: true
                                    }
                                );
                                // [Set Focus Start]
                                UpdateContext({locSetFocusTimerStart: false});
                                UpdateContext({locSetFocusControlTarget: "txtAssignUser_Search"});
                                UpdateContext({locSetFocusTimerStart: true});
                                // [Set Focus End]
                            PaddingLeft: =20
                            PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                            PressedColor: =gblAppStyles.Label.PressedColor
                            PressedFill: =gblAppStyles.Label.PressedFill
                            Size: =gblAppStyles.Label.Size.Medium
                            TabIndex: =If(locDisplayDialog || locBlockUserInput ||locDisplayDialogDelete ||locDisplayAssignmentSelect ||locSelectIcon,-1,0)
                            Text: |-
                                =With(
                                    {
                                        varDefault: "Click to add user",
                                        varOOBTextId: "lblPrimaryContactSelect__locText"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextId = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            Width: =Parent.Width
                            X: =0*0
                            Y: =0*0
                            ZIndex: =1

                        btnPrimaryContactBackground As button:
                            BorderThickness: =0
                            DisabledBorderColor: =Transparent
                            DisabledColor: =Transparent
                            DisabledFill: =gblAppStyles.Background.Fill
                            DisplayMode: =DisplayMode.Disabled
                            Font: =Font.'Segoe UI'
                            Height: =32
                            OnSelect: =
                            TabIndex: =-1
                            Text: =lblPrimaryContactName.Text
                            Visible: =!IsBlank(locFieldTemplatePrimaryContact)
                            Width: =Parent.Width - (2* Self.X)
                            X: =gblPadding.Page
                            Y: =(Parent.Height - Self.Height) / 2
                            ZIndex: =2

                        lblPrimaryContactName As label:
                            BorderColor: =gblAppStyles.Label.BorderColor
                            BorderThickness: =gblAppStyles.Label.BorderThickness
                            Color: =gblAppStyles.Label.Color
                            DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                            DisabledColor: =gblAppStyles.Label.DisabledColor
                            DisabledFill: =gblAppStyles.Label.DisabledFill
                            Fill: =gblAppStyles.Label.Fill
                            FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                            FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                            Height: =btnPrimaryContactBackground.Height
                            HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                            HoverColor: =gblAppStyles.Label.HoverColor
                            HoverFill: =gblAppStyles.Label.HoverFill
                            OnSelect: =
                            PaddingLeft: =0
                            PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                            PressedColor: =gblAppStyles.Label.PressedColor
                            PressedFill: =gblAppStyles.Label.PressedFill
                            Size: =gblAppStyles.Label.Size.Medium
                            Text: |-
                                =LookUp(
                                    colUserProfiles,
                                    locFieldTemplatePrimaryContact = appEmail,
                                    appDisplayName
                                )
                            Visible: =btnPrimaryContactBackground.Visible
                            Width: =icnPrimaryContactRemove.X - Self.X
                            Wrap: =false
                            X: =btnPrimaryContactBackground.X + imgPrimaryContact.Width
                            Y: =btnPrimaryContactBackground.Y
                            ZIndex: =3

                        icnPrimaryContactRemove As icon.Cancel:
                            AccessibleLabel: |-
                                =With(
                                    {
                                        varDefault: "Delete icon, to remove this user as the primary contact for this issue template",
                                        varOOBTextId: "icnPrimaryContactRemove__locAccessibleLabel"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextId = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            Color: =gblAppStyles.Label.Color
                            Height: =btnPrimaryContactBackground.Height
                            Icon: =Icon.Cancel
                            OnSelect: |-
                                =UpdateContext({locFieldTemplatePrimaryContact: ""})
                            PaddingBottom: =8
                            PaddingLeft: =8
                            PaddingRight: =8
                            PaddingTop: =8
                            TabIndex: =If(locDisplayDialog || locBlockUserInput ||locDisplayDialogDelete ||locDisplayAssignmentSelect ||locSelectIcon,-1,0)
                            Visible: =btnPrimaryContactBackground.Visible
                            Width: =Self.Height
                            X: =btnPrimaryContactBackground.X + btnPrimaryContactBackground.Width - Self.Width
                            Y: =btnPrimaryContactBackground.Y
                            ZIndex: =4

                        btnPrimaryContactInitials As button:
                            BorderThickness: =0
                            Color: =gblAppStyles.ButtonPrimary.Color
                            DisabledBorderColor: =Transparent
                            DisabledFill: =Transparent
                            Fill: =gblAppStyles.ButtonPrimary.Fill
                            Font: =Font.'Segoe UI'
                            Height: =imgPrimaryContact.Height
                            OnSelect: =
                            PaddingBottom: =0
                            PaddingLeft: =0
                            PaddingRight: =0
                            PaddingTop: =0
                            RadiusBottomLeft: =32
                            RadiusBottomRight: =32
                            RadiusTopLeft: =32
                            RadiusTopRight: =32
                            Size: =11
                            TabIndex: =-1
                            Text: |-
                                =With(
                                    {
                                        varName: LookUp(
                                            colUserProfiles,
                                            locFieldTemplatePrimaryContact = appEmail,
                                            appDisplayName
                                        )
                                    },
                                    Left(
                                        varName,
                                        1
                                    ) & Right(
                                        Mid(
                                            varName,
                                            Find(
                                                " ",
                                                varName
                                            ),
                                            2
                                        ),
                                        1
                                    )
                                )
                            Visible: =imgPrimaryContact.Visible
                            Width: =imgPrimaryContact.Width
                            X: =imgPrimaryContact.X
                            Y: =imgPrimaryContact.Y
                            ZIndex: =5

                        imgPrimaryContact As image:
                            DisplayMode: =DisplayMode.View
                            Height: =btnPrimaryContactBackground.Height
                            Image: |-
                                =If(
                                    IsBlankOrError(
                                        LookUp(
                                            colUserProfiles,
                                            locFieldTemplatePrimaryContact = appEmail,
                                            appImg
                                        )
                                    ),
                                    Icon.Edit,
                                    LookUp(
                                        colUserProfiles,
                                        locFieldTemplatePrimaryContact = appEmail,
                                        appImg
                                    )
                                )
                            OnSelect: =
                            RadiusBottomLeft: =Self.Height
                            RadiusBottomRight: =Self.Height
                            RadiusTopLeft: =Self.Height
                            RadiusTopRight: =Self.Height
                            Visible: =btnPrimaryContactBackground.Visible
                            Width: =Self.Height
                            X: =10 * 1
                            Y: =btnPrimaryContactBackground.Y
                            ZIndex: =6

            lblQuestionList_Header As label:
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                DisabledColor: =gblAppStyles.Label.DisabledColor
                DisabledFill: =gblAppStyles.Label.DisabledFill
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                Height: =32
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                PaddingLeft: =gblPadding.Page
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Size: =gblAppStyles.Label.Size.Medium
                Text: |-
                    =With(
                        {
                            varDefault: "Issue questions",
                            varOOBTextId: "lblQuestionList_Header__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Width: =btnQuestionList_Add.X - Self.X
                X: =0*0
                Y: =0*0
                ZIndex: =3

            shpQuestion_Divider As rectangle:
                DisplayMode: =DisplayMode.View
                Fill: =gblAppStyles.Dividers.Elements
                Height: =1
                Width: =Parent.Width - Self.X - gblPadding.Page
                X: =gblPadding.Page
                Y: =33
                ZIndex: =4

            imgQuestionList_Add As image:
                AccessibleLabel: =btnQuestionList_Add.Text
                DisabledFill: |-
                    =With(
                        {
                            varImageIsCategory: LookUp(
                                staticIcons,
                                staticIconName = "Add"
                            ).staticIconIsCategory
                        },
                        If(
                            varImageIsCategory,
                            gblAppStyles.Icons.DisabledFill_Category,
                            Transparent
                        )
                    )
                Fill: |-
                    =With(
                        {
                            varImageIsCategory: LookUp(
                                staticIcons,
                                staticIconName = "Add"
                            ).staticIconIsCategory
                        },
                        If(
                            varImageIsCategory,
                            gblAppStyles.Icons.Fill_Category,
                            Transparent
                        )
                    )
                Height: =32
                Image: |-
                    =With(
                        {
                            varImageRecord: LookUp(
                                staticIcons,
                                staticIconName = "Add"
                            ),
                            varColor: If(
                                Self.DisplayMode = DisplayMode.Disabled,
                                gblAppStyles.Icons.DisabledColor,
                                gblAppStyles.Icons.Color
                            )
                        },
                        With(
                            {
                                varImageData: Concatenate(
                                    "data:image/svg+xml;utf8, ",
                                    EncodeUrl(
                                        Concatenate(
                                            "<svg viewBox='",
                                            varImageRecord.staticIconViewbox,
                                            "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                            varImageRecord.staticIconPath,
                                            "' fill='#",
                                            varColor,
                                            "'/></svg>"
                                        )
                                    )
                                )
                            },
                            varImageData
                        )
                    )
                OnSelect: =
                PaddingBottom: =6
                PaddingLeft: =6
                PaddingRight: =6
                PaddingTop: =6
                RadiusBottomLeft: =5
                RadiusBottomRight: =5
                RadiusTopLeft: =5
                RadiusTopRight: =5
                Width: =32
                X: =btnQuestionList_Add.X
                Y: =btnQuestionList_Add.Y
                ZIndex: =5

            btnQuestionList_Add As button:
                Align: =Align.Left
                BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
                BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
                Color: =gblAppStyles.ButtonTransparent.Color
                DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                DisabledColor: =gblAppStyles.ButtonTransparent.DisabledColor
                DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
                Fill: =gblAppStyles.ButtonTransparent.Fill
                FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Normal
                Height: =32
                HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
                HoverColor: =gblAppStyles.ButtonTransparent.HoverColor
                HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
                OnSelect: |-
                    =Collect(
                        colCdsIssueQuestions,
                        {
                            appRef: GUID(),
                            appIsNewRecord: true,
                            msft_name: Blank(),
                            msft_IssueReport_TemplateId: If(
                                locScreenModeEditTemplate,
                                gblRecordTemplate
                            ),
                            msft_sequence: Max(
                                colCdsIssueQuestions,
                                msft_sequence
                            ) + 1
                        }
                    )
                PaddingLeft: =32
                PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
                PressedColor: =gblAppStyles.ButtonTransparent.PressedColor
                PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
                RadiusBottomLeft: =gblAppStyles.ButtonTransparent.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.ButtonTransparent.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.ButtonTransparent.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.ButtonTransparent.RadiusTopRight
                Size: =gblAppStyles.ButtonTransparent.Size
                TabIndex: =If(locDisplayDialog || locBlockUserInput ||locDisplayDialogDelete ||locDisplayAssignmentSelect ||locSelectIcon,-1,0)
                Text: |-
                    =With(
                        {
                            varDefault: "Add question",
                            varOOBTextId: "btnQuestionList_Add__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Width: |-
                    =Switch(
                        gblUserLanguage,
                        "de-DE",
                        160,
                        "en-US",
                        170,
                        "es-ES",
                        160,
                        "fr-FR",
                        175,
                        "it-IT",
                        170,
                        "ja-JP",
                        115,
                        "nl-NL",
                        150,
                        "pt-BR",
                        165,
                        170
                    )
                X: =Parent.Width - Self.Width - gblPadding.Page
                Y: =0*0
                ZIndex: =7

        conTemplateForm As groupContainer:
            Height: =Max(galAssignments.Y + galAssignments.Height + gblPadding.Page,conBusinessDaysDue.Y + conBusinessDaysDue.Height + gblPadding.Page)
            Visible: =locScreenModeCreateTemplate Or locScreenModeEditTemplate
            Width: =Parent.Width
            X: =conCategoryActions.X
            Y: =conCategoryActions.Y + conCategoryActions.Height
            ZIndex: =3

            galAssignments As gallery.galleryVertical:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Gallery of users who will be automatically assigned to this issue template",
                            varOOBTextId: "galAssignments__locAccessibleLabel"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                BorderColor: =RGBA(0, 0, 0, 0)
                Fill: =gblAppStyles.ButtonBackground.Fill
                Height: =Max(RoundUp((CountRows(colCdsIssueAssignments) / RoundUp(Self.Width / 200,0)),0) * Self.TemplateHeight,Self.TemplateHeight)
                Items: =colCdsIssueAssignments
                Layout: =Layout.Vertical
                OnSelect: |-
                    =UpdateContext(
                        {
                            locDisplayDialog: true,
                            locDisplayAssignmentSelect: true,
                            locSelectPrimaryContact: false
                        }
                    )
                TemplatePadding: =0
                TemplateSize: =48
                Width: =Max(Parent.Width - Self.X -gblPadding.Page,150)
                WrapCount: =RoundUp(Self.Width / 200,0)
                X: =conBusinessDaysDue.X + conBusinessDaysDue.Width + gblPadding.Page
                Y: =txtTemplateForm_Title.Y
                ZIndex: =1

                btnGalAssignments_Background As button:
                    BorderThickness: =0
                    DisabledBorderColor: =Transparent
                    DisabledColor: =Transparent
                    DisabledFill: =gblAppStyles.Background.Fill
                    DisplayMode: =DisplayMode.Disabled
                    Font: =Font.'Segoe UI'
                    Height: =32
                    OnSelect: =Select(Parent)
                    RadiusBottomLeft: =0
                    RadiusTopLeft: =0
                    TabIndex: =-1
                    Text: =lblGalAssignments_FullName.Text
                    Width: =Parent.TemplateWidth - Self.X - imgGalAssignments_User.X
                    X: =imgGalAssignments_User.X + (imgGalAssignments_User.Width / 2)
                    Y: =(Parent.TemplateHeight - Self.Height) / 2
                    ZIndex: =1

                lblGalAssignments_FullName As label:
                    BorderColor: =gblAppStyles.Label.BorderColor
                    BorderThickness: =gblAppStyles.Label.BorderThickness
                    Color: =gblAppStyles.Label.Color
                    DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                    DisabledColor: =gblAppStyles.Label.DisabledColor
                    DisabledFill: =gblAppStyles.Label.DisabledFill
                    Fill: =gblAppStyles.Label.Fill
                    FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                    FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                    Height: =btnGalAssignments_Background.Height
                    HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                    HoverColor: =gblAppStyles.Label.HoverColor
                    HoverFill: =gblAppStyles.Label.HoverFill
                    OnSelect: =
                    PaddingLeft: =0
                    PressedBorderColor: =gblAppStyles.Label.PressedColor
                    PressedFill: =gblAppStyles.Label.PressedFill
                    Size: =gblAppStyles.Label.Size.Small
                    Text: |-
                        =LookUp(
                            colUserProfiles,
                            ThisItem.appEmailAddress = appEmail,
                            appDisplayName
                        )
                    Width: =icnGalAssignments_Remove.X - Self.X
                    Wrap: =false
                    X: =btnGalAssignments_Background.X + imgGalAssignments_User.Width
                    Y: =btnGalAssignments_Background.Y
                    ZIndex: =2

                icnGalAssignments_Remove As icon.Cancel:
                    AccessibleLabel: |-
                        =With(
                            {
                                varDefault: "Delete icon, to remove this user from the list of auto-assigned users",
                                varOOBTextId: "icnGalAssignments_Remove__locAccessibleLabel"
                            },
                            With(
                                {
                                    varLocalizedText: LookUp(
                                        colLocalization,
                                        OOBTextId = varOOBTextId,
                                        LocalizedText
                                    )
                                },
                                Coalesce(
                                    varLocalizedText,
                                    varDefault
                                )
                            )
                        )
                    Color: =gblAppStyles.Label.Color
                    Height: =btnGalAssignments_Background.Height
                    Icon: =Icon.Cancel
                    OnSelect: |
                        =Remove(
                            colCdsIssueAssignments,
                            ThisItem
                        );
                    PaddingBottom: =8
                    PaddingLeft: =8
                    PaddingRight: =8
                    PaddingTop: =8
                    TabIndex: =If(locDisplayDialog || locBlockUserInput ||locDisplayDialogDelete ||locDisplayAssignmentSelect ||locSelectIcon,-1,0)
                    Width: =Self.Height
                    X: =btnGalAssignments_Background.X + btnGalAssignments_Background.Width - Self.Width
                    Y: =btnGalAssignments_Background.Y
                    ZIndex: =3

                btnGalAssignment_UserInitials As button:
                    BorderThickness: =0
                    Color: =gblAppStyles.ButtonPrimary.Color
                    DisabledBorderColor: =Transparent
                    DisabledFill: =Transparent
                    Fill: =gblAppStyles.ButtonPrimary.Fill
                    Font: =Font.'Segoe UI'
                    Height: =imgGalAssignments_User.Height
                    OnSelect: =
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    RadiusBottomLeft: =36
                    RadiusBottomRight: =36
                    RadiusTopLeft: =36
                    RadiusTopRight: =36
                    Size: =11
                    TabIndex: =If(locDisplayDialog || locBlockUserInput ||locDisplayDialogDelete ||locDisplayAssignmentSelect ||locSelectIcon,-1,0)
                    Text: |-
                        =With(
                            {
                                varName: LookUp(
                                    colUserProfiles,
                                    ThisItem.appEmailAddress = appEmail,
                                    appDisplayName
                                )
                            },
                            Left(
                                varName,
                                1
                            ) & Right(
                                Mid(
                                    varName,
                                    Find(
                                        " ",
                                        varName
                                    ),
                                    2
                                ),
                                1
                            )
                        )
                    Width: =imgGalAssignments_User.Width
                    X: =imgGalAssignments_User.X
                    Y: =imgGalAssignments_User.Y
                    ZIndex: =4

                imgGalAssignments_User As image:
                    DisplayMode: =DisplayMode.View
                    Height: =btnGalAssignments_Background.Height
                    Image: |-
                        =LookUp(
                            colUserProfiles,
                            ThisItem.appEmailAddress = appEmail,
                            appImg
                        )
                    OnSelect: =
                    RadiusBottomLeft: =Self.Height
                    RadiusBottomRight: =Self.Height
                    RadiusTopLeft: =Self.Height
                    RadiusTopRight: =Self.Height
                    Width: =Self.Height
                    X: =10 * 1
                    Y: =btnGalAssignments_Background.Y
                    ZIndex: =5

            lblOverlayGalAssignments_Select As label:
                Color: |-
                    =If(
                        CountRows(colCdsIssueAssignments) = 0,
                        gblAppStyles.Label.Color,
                        Transparent
                    )
                DisabledColor: |-
                    =If(
                        CountRows(colCdsIssueAssignments) = 0,
                        gblAppStyles.Label.DisabledColor,
                        Transparent
                    )
                FocusedBorderColor: =gblAppStyles.TextInput.FocusedBorderColor
                FocusedBorderThickness: =0.25
                Font: =Font.'Segoe UI'
                Height: =galAssignments.TemplateHeight
                HoverColor: |-
                    =If(
                        CountRows(colCdsIssueAssignments) = 0,
                        gblAppStyles.Label.HoverColor,
                        Transparent
                    )
                HoverFill: =gblAppStyles.Label.HoverFill
                OnSelect: |-
                    =UpdateContext(
                        {
                            locDisplayDialog: true,
                            locDisplayAssignmentSelect: true,
                            locSelectPrimaryContact: false
                        }
                    );
                    // [Set Focus Start]
                    UpdateContext({locSetFocusTimerStart: false});
                    UpdateContext(
                        {
                            locSetFocusControlTarget: "txtAssignUser_Search"
                        }
                    );
                    UpdateContext({locSetFocusTimerStart: true});
                    // [Set Focus End]
                PaddingLeft: =20
                PressedColor: |-
                    =If(
                        CountRows(colCdsIssueAssignments) = 0,
                        gblAppStyles.Label.PressedColor,
                        Transparent
                    )
                Size: =gblAppStyles.Label.Size.Medium
                TabIndex: =If(locDisplayDialog || locBlockUserInput ||locDisplayDialogDelete ||locDisplayAssignmentSelect ||locSelectIcon,-1,0)
                Text: |-
                    =With(
                        {
                            varDefault: "Click to add users",
                            varOOBTextId: "lblOverlayGalAssignments_Select__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Visible: |-
                    =(RoundUp(galAssignments.Width / 200,0) > CountRows(colCdsIssueAssignments))
                    Or
                    ((CountRows(colCdsIssueAssignments) - RoundUp(galAssignments.Width / 200,0)) = 1)
                Width: |-
                    =If(
                        CountRows(colCdsIssueAssignments) = 0,
                        galAssignments.Width,
                        galAssignments.TemplateWidth * ((RoundUp(
                            galAssignments.Width / 200,
                            0
                        ) * (galAssignments.Height / 48)) - CountRows(colCdsIssueAssignments))
                    )
                X: =galAssignments.X + galAssignments.Width - Self.Width
                Y: =galAssignments.Y + galAssignments.Height - Self.Height
                ZIndex: =2

            lblTemplateForm_AssignIssuesTo As label:
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                DisabledColor: =gblAppStyles.Label.DisabledColor
                DisabledFill: =gblAppStyles.Label.DisabledFill
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                Height: =32
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                PaddingLeft: =0
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Size: =gblAppStyles.Label.Size.Medium
                Text: |-
                    =With(
                        {
                            varDefault: "Auto assign issues to",
                            varOOBTextId: "lblTemplateForm_AssignIssuesTo__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Width: =galAssignments.Width
                Wrap: =false
                X: =conBusinessDaysDue.X + conBusinessDaysDue.Width + gblPadding.Page
                Y: =lblTemplateTitle.Y + lblTemplateTitle.Height + gblPadding.Page
                ZIndex: =3

            txtTemplateForm_Title As text:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Text input for issue template title",
                            varOOBTextId: "txtTemplateForm_Title__locAccessibleLabel"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                BorderColor: =gblAppStyles.TextInput.BorderColor
                BorderThickness: =gblAppStyles.TextInput.BorderThickness
                Color: =gblAppStyles.TextInput.Color
                Default: |-
                    =If(
                        !IsBlank(locRecordDuplicateTemplate),
                        Concatenate(
                            locRecordDuplicateTemplate.Title,
                            " (Copy)"
                        ),
                        locScreenModeCreateTemplate,
                        Blank(),
                        gblRecordTemplate.Title
                    )
                DisabledBorderColor: =gblAppStyles.TextInput.DisabledBorderColor
                DisabledColor: =gblAppStyles.TextInput.DisabledColor
                DisabledFill: =gblAppStyles.TextInput.DisabledFill
                DisplayMode: =If(locScreenModeEditTemplate Or locScreenModeCreateTemplate, DisplayMode.Edit,DisplayMode.View)
                Fill: =gblAppStyles.TextInput.Fill
                FocusedBorderColor: =gblAppStyles.TextInput.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.TextInput.FocusedBorderThickness
                Font: ='Segoe UI'
                Height: =32
                HintText: |-
                    =With(
                        {
                            varDefault: "Enter a template title",
                            varOOBTextId: "txtTemplateForm_Title__locHintText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                HoverBorderColor: =gblAppStyles.TextInput.HoverBorderColor
                HoverColor: =gblAppStyles.TextInput.HoverColor
                HoverFill: =gblAppStyles.TextInput.HoverFill
                MaxLength: =100
                OnChange: =
                PaddingBottom: =4
                PaddingLeft: =8
                PaddingRight: =8
                PaddingTop: =4
                PressedBorderColor: =gblAppStyles.TextInput.PressedBorderColor
                PressedColor: =gblAppStyles.TextInput.PressedColor
                PressedFill: =gblAppStyles.TextInput.PressedFill
                RadiusBottomLeft: =gblAppStyles.TextInput.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.TextInput.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.TextInput.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.TextInput.RadiusTopRight
                Size: =gblAppStyles.TextInput.Size
                TabIndex: =If(locDisplayDialog || locBlockUserInput ||locDisplayDialogDelete ||locDisplayAssignmentSelect ||locSelectIcon,-1,0)
                Width: =Min(200,Parent.Width * .35)
                X: =gblPadding.Page
                Y: =lblTemplateForm_Title.Y + lblTemplateForm_Title.Height
                ZIndex: =5

            lblTemplateForm_Title As label:
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                DisabledColor: =gblAppStyles.Label.DisabledColor
                DisabledFill: =gblAppStyles.Label.DisabledFill
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                Height: =32
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                PaddingLeft: =0
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Size: =gblAppStyles.Label.Size.Medium
                Text: |-
                    =With(
                        {
                            varDefault: "Title",
                            varOOBTextId: "_translateCommon__Title"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Width: =txtTemplateForm_Title.Width
                X: =txtTemplateForm_Title.X
                Y: =lblTemplateTitle.Y + lblTemplateTitle.Height + gblPadding.Page
                ZIndex: =6

            lblTemplateTitle As label:
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                DisabledColor: =gblAppStyles.Label.DisabledColor
                DisabledFill: =gblAppStyles.Label.DisabledFill
                DisplayMode: =DisplayMode.View
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                Height: =32
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                PaddingBottom: =8
                PaddingLeft: =gblPadding.Page
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Size: =gblAppStyles.Label.Size.ExtraLarge
                Text: |-
                    =If(
                        IsBlank(txtTemplateForm_Title.Text),
                        With(
                            {
                                varDefault: "New template",
                                varOOBTextId: "lblTemplateTitle__locText"
                            },
                            With(
                                {
                                    varLocalizedText: LookUp(
                                        colLocalization,
                                        OOBTextId = varOOBTextId,
                                        LocalizedText
                                    )
                                },
                                Coalesce(
                                    varLocalizedText,
                                    varDefault
                                )
                            )
                        ),
                        txtTemplateForm_Title.Text
                    )
                Width: =Parent.Width - Self.X
                Wrap: =false
                X: =0 * 0
                Y: =0 * 0
                ZIndex: =7

            conBusinessDaysDue As groupContainer:
                Height: =64
                Width: =200
                X: |-
                    =If(
                        Parent.Width > 560,
                        lblTemplateForm_Title.X + lblTemplateForm_Title.Width + gblPadding.Page,
                        lblTemplateForm_Title.X
                    )
                Y: |
                    =If(
                        Parent.Width > 560,
                        lblTemplateForm_Title.Y,
                        txtTemplateForm_Title.Y + txtTemplateForm_Title.Height + gblPadding.Page
                    )
                ZIndex: =8

                txtHiddenBackground_BusinessDays As text:
                    AccessibleLabel: ="Business days until due"
                    BorderThickness: =0
                    Default: =""
                    DisabledBorderColor: =gblAppStyles.ButtonSecondary.DisabledFill
                    DisabledFill: =gblAppStyles.ButtonSecondary.DisabledFill
                    DisplayMode: =DisplayMode.Disabled
                    Fill: =gblAppStyles.ButtonSecondary.DisabledFill
                    Height: =lblBusinessDaysDue_BusinessDays.Height
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =4
                    RadiusTopLeft: =0
                    RadiusTopRight: =4
                    TabIndex: =-1
                    Width: =lblBusinessDaysDue_BusinessDays.Width
                    X: =lblBusinessDaysDue_BusinessDays.X
                    Y: =lblBusinessDaysDue_BusinessDays.Y
                    ZIndex: =1

                txtHiddenBackground_DayValue As text:
                    AccessibleLabel: ="Business days until due"
                    BorderThickness: =0
                    Default: =""
                    DisabledBorderColor: =Self.DisabledFill
                    DisabledFill: =gblAppStyles.ButtonSecondary.Fill
                    DisplayMode: =DisplayMode.Disabled
                    Fill: =gblAppStyles.ButtonSecondary.Fill
                    Height: =lblBusinessDaysDue_DayValue.Height
                    RadiusBottomLeft: =4
                    RadiusBottomRight: =0
                    RadiusTopLeft: =4
                    RadiusTopRight: =0
                    TabIndex: =-1
                    Width: =imgBusinessDaysDue_Increment.Width + imgBusinessDaysDue_Increment.X
                    X: =0*0
                    Y: =imgBusinessDaysDue_Increment.Y
                    ZIndex: =2

                lblBusinessDaysDue_Header As label:
                    Color: =gblAppStyles.Label.Color
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Semibold
                    Height: =32
                    Size: =11
                    Text: |-
                        =With(
                            {
                                varDefault: "Due within",
                                varOOBTextId: "lblBusinessDaysDue_Header__locText"
                            },
                            With(
                                {
                                    varLocalizedText: LookUp(
                                        colLocalization,
                                        OOBTextId = varOOBTextId,
                                        LocalizedText
                                    )
                                },
                                Coalesce(
                                    varLocalizedText,
                                    varDefault
                                )
                            )
                        )
                    Width: =Parent.Width
                    X: =0*0
                    Y: =0*0
                    ZIndex: =3

                lblBusinessDaysDue_DayValue As label:
                    Align: =Align.Center
                    Color: =gblAppStyles.Label.Color
                    Font: =Font.'Segoe UI'
                    Height: =Parent.Height - Self.Y
                    Size: =11
                    Text: |-
                        =If(
                            locScreenModeCreateTemplate,
                            2,
                            gblRecordTemplate.'Business Days until Due'
                        )
                    Width: =32
                    X: =lblBusinessDaysDue_Header.X
                    Y: =lblBusinessDaysDue_Header.Height
                    ZIndex: =4

                imgBusinessDaysDue_Increment As image:
                    AccessibleLabel: ="Increases the business days due by 1"
                    DisplayMode: =If(locBusinessDays < 61, DisplayMode.Edit,DisplayMode.Disabled)
                    Fill: =gblAppStyles.ButtonSecondary.Fill
                    FocusedBorderThickness: =0.5
                    Height: =lblBusinessDaysDue_DayValue.Height / 2
                    HoverFill: =ColorFade(Self.Fill, -05%)
                    Image: |-
                        =With(
                            {
                                varImageRecord: LookUp(
                                    staticIcons,
                                    staticIconName = "Chevron down"
                                ),
                                varColor: gblAppStyles.Icons.Color
                            },
                            With(
                                {
                                    varImageData: Concatenate(
                                        "data:image/svg+xml;utf8, ",
                                        EncodeUrl(
                                            Concatenate(
                                                "<svg viewBox='",
                                                varImageRecord.staticIconViewbox,
                                                "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                varImageRecord.staticIconPath,
                                                "' fill='#",
                                                varColor,
                                                "'/></svg>"
                                            )
                                        )
                                    )
                                },
                                varImageData
                            )
                        )
                    ImageRotation: =ImageRotation.Rotate180
                    OnSelect: |-
                        =UpdateContext({locBusinessDays: locBusinessDays + 1})
                    PaddingBottom: =2
                    PaddingTop: =2
                    PressedFill: =ColorFade(Self.Fill, -15%)
                    TabIndex: =If(locDisplayDialog,-1,0)
                    Tooltip: |-
                        =Coalesce(
                            With(
                                {
                                    varDefault: "Increase business day due by 1",
                                    varOOBTextId: "imgBusinessDaysDue_Increment__locTooltip"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextId = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            ),
                            "Increase business day due by 1"
                        )
                    Width: =24
                    X: =lblBusinessDaysDue_DayValue.Width
                    Y: =lblBusinessDaysDue_DayValue.Y
                    ZIndex: =5

                imgBusinessDaysDue_Decrement As image:
                    AccessibleLabel: |-
                        =Coalesce(
                            With(
                                {
                                    varDefault: "Decreases the business days due by one",
                                    varOOBTextId: "imgBusinessDaysDue_Decrement__locAccessibleLabel"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextId = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            ),
                            "Decreases the business days due by 1"
                        )
                    DisplayMode: =If(locBusinessDays > 1, DisplayMode.Edit,DisplayMode.Disabled)
                    Fill: =gblAppStyles.ButtonSecondary.Fill
                    FocusedBorderThickness: =0.5
                    Height: =lblBusinessDaysDue_DayValue.Height / 2
                    HoverFill: =ColorFade(Self.Fill, -05%)
                    Image: |-
                        =With(
                            {
                                varImageRecord: LookUp(
                                    staticIcons,
                                    staticIconName = "Chevron down"
                                ),
                                varColor: gblAppStyles.Icons.Color
                            },
                            With(
                                {
                                    varImageData: Concatenate(
                                        "data:image/svg+xml;utf8, ",
                                        EncodeUrl(
                                            Concatenate(
                                                "<svg viewBox='",
                                                varImageRecord.staticIconViewbox,
                                                "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                varImageRecord.staticIconPath,
                                                "' fill='#",
                                                varColor,
                                                "'/></svg>"
                                            )
                                        )
                                    )
                                },
                                varImageData
                            )
                        )
                    OnSelect: |-
                        =UpdateContext({locBusinessDays: locBusinessDays - 1})
                    PaddingBottom: =2
                    PaddingTop: =2
                    PressedFill: =ColorFade(Self.Fill, -15%)
                    TabIndex: =If(locDisplayDialog,-1,0)
                    Tooltip: |-
                        =Coalesce(
                            With(
                                {
                                    varDefault: "Decrease business day due by 1",
                                    varOOBTextId: "imgBusinessDaysDue_Decrement__locTooltip"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextId = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            ),
                            "Decrease business day due by 1"
                        )
                    Visible: =locBusinessDays > 1
                    Width: =24
                    X: =lblBusinessDaysDue_DayValue.Width
                    Y: =lblBusinessDaysDue_DayValue.Y + (lblBusinessDaysDue_DayValue.Height / 2)
                    ZIndex: =6

                lblBusinessDaysDue_BusinessDays As label:
                    Color: =gblAppStyles.Label.Color
                    Fill: =gblAppStyles.ButtonSecondary.DisabledFill
                    Font: =Font.'Segoe UI'
                    Height: =lblBusinessDaysDue_DayValue.Height
                    PaddingLeft: =12
                    Size: |-
                        =If(
                            gblUserLanguage <> "en-US",
                            9,
                            10.5
                        )
                    Text: |-
                        =If(
                            gblUserLanguage <> "en-US",
                            With(
                                {
                                    varDefault: "Business days until due",
                                    varOOBTextId: "txtHiddenBackground_DayValue__locAccessibleLabel"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextId = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            ),
                            If(
                                locBusinessDays = 1,
                                "Business day",
                                "Business days"
                            )
                        )
                    Width: =Parent.Width - Self.X
                    X: =imgBusinessDaysDue_Increment.X + imgBusinessDaysDue_Increment.Width
                    Y: =imgBusinessDaysDue_Increment.Y
                    ZIndex: =7

        conTemplateActions As groupContainer:
            Height: =72
            Visible: =locScreenModeCreateTemplate Or locScreenModeEditTemplate
            Width: =Parent.Width - Self.X
            X: =0*0
            Y: =0*0
            ZIndex: =4

            btnTemplateAction_Cancel As button:
                BorderColor: =gblAppStyles.ButtonSecondary.BorderColor
                BorderThickness: =gblAppStyles.ButtonSecondary.BorderThickness
                Color: =gblAppStyles.ButtonSecondary.Color
                DisabledBorderColor: =gblAppStyles.ButtonSecondary.DisabledBorderColor
                DisabledColor: =gblAppStyles.ButtonSecondary.DisabledColor
                DisabledFill: =gblAppStyles.ButtonSecondary.DisabledFill
                Fill: =gblAppStyles.ButtonSecondary.Fill
                FocusedBorderColor: =gblAppStyles.ButtonSecondary.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.ButtonSecondary.FocusedBorderThickness
                Font: ='Segoe UI'
                Height: =32
                HoverBorderColor: =gblAppStyles.ButtonSecondary.HoverBorderColor
                HoverColor: =gblAppStyles.ButtonSecondary.HoverColor
                HoverFill: =gblAppStyles.ButtonSecondary.HoverFill
                OnSelect: |
                    =// Set Screen Mode
                    UpdateContext(
                        {
                            locScreenModeCreateCategory: false,
                            locScreenModeCreateTemplate: false,
                            locScreenModeEditCategory: false,
                            locScreenModeEditTemplate: false,
                            locScreenModeViewCategory: true,
                            locScreenModeViewTemplate: false,
                            locDisplayAssignmentSelect: false,
                            locRecordDuplicateTemplate: Blank(),
                            locFieldTemplatePrimaryContact: Blank()
                        }
                    );
                    Clear(colQuestionsToDelete);
                    Reset(txtTemplateForm_Title);
                    Reset(txtSupportingInformation);
                PaddingBottom: =4
                PaddingLeft: =4
                PaddingRight: =4
                PaddingTop: =4
                PressedBorderColor: =gblAppStyles.ButtonSecondary.PressedBorderColor
                PressedColor: =gblAppStyles.ButtonSecondary.PressedColor
                PressedFill: =gblAppStyles.ButtonSecondary.PressedFill
                RadiusBottomLeft: =gblAppStyles.ButtonSecondary.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.ButtonSecondary.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.ButtonSecondary.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.ButtonSecondary.RadiusTopRight
                Size: =gblAppStyles.ButtonSecondary.Size
                TabIndex: =If(locDisplayDialog || locBlockUserInput ||locDisplayDialogDelete ||locDisplayAssignmentSelect ||locSelectIcon,-1,0)
                Text: |-
                    =With(
                        {
                            varDefault: "Cancel",
                            varOOBTextId: "_translateCommon__Cancel"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Visible: =locScreenModeEditTemplate Or locScreenModeCreateTemplate
                Width: =100
                X: =Parent.Width - Self.Width - gblPadding.Page
                Y: =(Parent.Height - Self.Height) / 2
                ZIndex: =1

            btnTemplateAction_Save As button:
                BorderColor: =gblAppStyles.ButtonPrimary.BorderColor
                BorderThickness: =gblAppStyles.ButtonPrimary.BorderThickness
                Color: =gblAppStyles.ButtonPrimary.Color
                DisabledBorderColor: =gblAppStyles.ButtonPrimary.DisabledBorderColor
                DisabledColor: =gblAppStyles.ButtonPrimary.DisabledColor
                DisabledFill: =gblAppStyles.ButtonPrimary.DisabledFill
                DisplayMode: |-
                    =If(
                        locScreenModeCreateTemplate,
                        If(
                            IsBlank(txtTemplateForm_Title.Text) Or (txtTemplateForm_Title.Text in colCdsIssueTemplates.Title),
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        ),
                        If(
                            IsBlank(txtTemplateForm_Title.Text),
                            DisplayMode.Disabled,
                            Or(
                                (Not (txtTemplateForm_Title.Text = gblRecordTemplate.Title)),
                                CountRows(
                                    Filter(
                                        colCdsIssueQuestions,
                                        (appIsNewRecord Or appRecordUpdated) And !IsBlank(msft_name)
                                    )
                                ) > 0,
                                (gblRecordTemplate.'Business Days until Due' <> locBusinessDays),
                                gblRecordTemplate.'Task Assignments' <> Concat(
                                    colCdsIssueAssignments,
                                    appEmailAddress,
                                    ";"
                                ),
                                gblRecordTemplate.'Primary Contact' <> locFieldTemplatePrimaryContact,
                                gblRecordTemplate.'Supporting Information' <> txtSupportingInformation.Text,
                                CountRows(colQuestionsToDelete) > 0
                            ),
                            DisplayMode.Edit,
                            DisplayMode.Disabled
                        )
                    )
                Fill: =gblAppStyles.ButtonPrimary.Fill
                FocusedBorderColor: =gblAppStyles.ButtonPrimary.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.ButtonPrimary.FocusedBorderThickness
                Font: ='Segoe UI'
                Height: =32
                HoverBorderColor: =gblAppStyles.ButtonPrimary.HoverBorderColor
                HoverColor: =gblAppStyles.ButtonPrimary.HoverColor
                HoverFill: =gblAppStyles.ButtonPrimary.HoverFill
                OnSelect: |
                    =UpdateContext({locBlockUserInput: true});
                    If(
                        locScreenModeCreateTemplate,
                        // CREATE NEW TEMPLATE    
                        // Create CDS Template record, linked to Category
                        UpdateContext(
                            {
                                locRecordCdsTemplate: IfError(
                                    Patch(
                                        'Issue Report Templates',
                                        Defaults('Issue Report Templates'),
                                        {
                                            Title: txtTemplateForm_Title.Text,
                                            Category: gblRecordCategory,
                                            'Business Days until Due': locBusinessDays,
                                            'Task Assignments': Concat(
                                                colCdsIssueAssignments,
                                                appEmailAddress,
                                                ";"
                                            ),
                                            'Primary Contact': locFieldTemplatePrimaryContact,
                                            'Supporting Information': txtSupportingInformation.Text
                                        }
                                    ),
                                    Blank()
                                )
                            }
                        );
                        
                    // Collect Template locally
                    Collect(
                            colCdsIssueTemplates,
                            locRecordCdsTemplate
                        );
                        // Update Template locally
                        // Update Locally (for 0 Stats)
                    UpdateIf(
                            colCdsIssueTemplates,
                            colCdsIssueTemplates[@'Issue Report Template'] = locRecordCdsTemplate.'Issue Report Template',
                            {
                                Category: gblRecordCategory,
                                appIssueCount_Done: 0,
                                appIssueCount_InProgress: 0,
                                appIssueCount_NotStarted: 0
                            }
                        );
                        ,
                        // UPDATE TEMPLATE
                    // Update CDS Template record
                        UpdateContext(
                            {
                                locRecordCdsTemplate: IfError(
                                    Patch(
                                        'Issue Report Templates',
                                        {
                                            'Issue Report Template': gblRecordTemplate.'Issue Report Template',
                                            Title: txtTemplateForm_Title.Text,
                                            'Business Days until Due': locBusinessDays,
                                            'Task Assignments': Concat(
                                                colCdsIssueAssignments,
                                                appEmailAddress,
                                                ";"
                                            ),
                                            'Primary Contact': locFieldTemplatePrimaryContact,
                                            'Supporting Information': txtSupportingInformation.Text
                                        }
                                    ),
                                    Blank()
                                )
                            }
                        );
                        // Update Locally
                    UpdateIf(
                            colCdsIssueTemplates,
                            colCdsIssueTemplates[@'Issue Report Template'] = gblRecordTemplate.'Issue Report Template',
                            {
                                Title: txtTemplateForm_Title.Text,
                                'Business Days until Due': locBusinessDays,
                                'Task Assignments': Concat(
                                    colCdsIssueAssignments,
                                    appEmailAddress,
                                    ";"
                                ),
                                'Primary Contact': locFieldTemplatePrimaryContact,
                                'Supporting Information': txtSupportingInformation.Text
                            }
                        );
                        
                    );
                    // Create New Questions
                    ForAll(
                        Filter(
                            colCdsIssueQuestions,
                            appIsNewRecord
                        ),
                        IfError(
                            Patch(
                                'Issue Report Questions',
                                Defaults('Issue Report Questions'),
                                {
                                    msft_name: ThisRecord.msft_name,
                                    msft_IssueReport_TemplateId: locRecordCdsTemplate,
                                    msft_sequence: ThisRecord.msft_sequence
                                }
                            ),
                            Blank()
                        )
                    );
                    // Update Questions
                    ForAll(
                        Filter(
                            colCdsIssueQuestions,
                            appRecordUpdated && !appIsNewRecord
                        ),
                        IfError(
                            Patch(
                                'Issue Report Questions',
                                {
                                    'Issue Report Question': ThisRecord.appRef,
                                    Instructions: ThisRecord.msft_name,
                                    Sequence: ThisRecord.msft_sequence
                                }
                            ),
                            Blank()
                        )
                    );
                    // Delete Questions
                    ForAll(
                        colQuestionsToDelete,
                        RemoveIf(
                            'Issue Report Questions',
                            'Issue Report Question' = colQuestionsToDelete[@Value]
                        )
                    );
                    // Navigate and Reset
                    UpdateContext(
                        {
                            locScreenModeCreateCategory: false,
                            locScreenModeCreateTemplate: false,
                            locScreenModeEditCategory: false,
                            locScreenModeEditTemplate: false,
                            locScreenModeViewCategory: true,
                            locScreenModeViewTemplate: false,
                            locDisplayAssignmentSelect: false,
                            locRecordDuplicateTemplate: Blank(),
                            locFieldTemplatePrimaryContact: Blank()
                        }
                    );
                    UpdateContext({locBlockUserInput: false});
                    Reset(txtTemplateForm_Title);
                    Reset(txtSupportingInformation);
                PaddingBottom: =4
                PaddingLeft: =4
                PaddingRight: =4
                PaddingTop: =4
                PressedBorderColor: =gblAppStyles.ButtonPrimary.PressedBorderColor
                PressedColor: =gblAppStyles.ButtonPrimary.PressedColor
                PressedFill: =gblAppStyles.ButtonPrimary.PressedFill
                RadiusBottomLeft: =gblAppStyles.ButtonPrimary.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.ButtonPrimary.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.ButtonPrimary.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.ButtonPrimary.RadiusTopRight
                Size: =gblAppStyles.ButtonPrimary.Size
                TabIndex: =If(locDisplayDialog || locBlockUserInput ||locDisplayDialogDelete ||locDisplayAssignmentSelect ||locSelectIcon,-1,0)
                Text: |-
                    =With(
                        {
                            varDefault: "Save",
                            varOOBTextId: "btnSettingsSave__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Visible: =locScreenModeEditTemplate Or locScreenModeCreateTemplate
                Width: =100
                X: =btnTemplateAction_Cancel.X - Self.Width - gblPadding.ButtonShape
                Y: =btnTemplateAction_Cancel.Y
                ZIndex: =2

            imgTemplateAction_Back As image:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Icon of a back arrow",
                            varOOBTextId: "imgTemplateAction_Back__locAccessibleLabel"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                DisabledFill: |-
                    =With(
                        {
                            varImageIsCategory: LookUp(
                                staticIcons,
                                staticIconName = "Back"
                            ).staticIconIsCategory
                        },
                        If(
                            varImageIsCategory,
                            gblAppStyles.Icons.DisabledFill_Category,
                            Transparent
                        )
                    )
                Fill: |-
                    =With(
                        {
                            varImageIsCategory: LookUp(
                                staticIcons,
                                staticIconName = "Back"
                            ).staticIconIsCategory
                        },
                        If(
                            varImageIsCategory,
                            gblAppStyles.Icons.Fill_Category,
                            Transparent
                        )
                    )
                Height: =24
                Image: |-
                    =With(
                        {
                            varImageRecord: LookUp(
                                staticIcons,
                                staticIconName = "Back"
                            ),
                            varColor: If(
                                Self.DisplayMode = DisplayMode.Disabled,
                                gblAppStyles.Icons.DisabledColor,
                                gblAppStyles.Icons.Color
                            )
                        },
                        With(
                            {
                                varImageData: Concatenate(
                                    "data:image/svg+xml;utf8, ",
                                    EncodeUrl(
                                        Concatenate(
                                            "<svg viewBox='",
                                            varImageRecord.staticIconViewbox,
                                            "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                            varImageRecord.staticIconPath,
                                            "' fill='#",
                                            varColor,
                                            "'/></svg>"
                                        )
                                    )
                                )
                            },
                            varImageData
                        )
                    )
                OnSelect: =Select(btnTemplateAction_Cancel)
                PaddingBottom: =2
                PaddingRight: =4
                PaddingTop: =2
                Width: =24
                X: =If(imgTemplateAction_Duplicate.X - btnTemplateAction_Back.Width < 50,imgTemplateAction_Duplicate.X -100,gblPadding.Page) 
                Y: =(Parent.Height - Self.Height) / 2
                ZIndex: =3

            btnTemplateAction_Back As button:
                Align: =Align.Left
                BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
                BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
                Color: =gblAppStyles.ButtonTransparent.Color
                DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                DisabledColor: =gblAppStyles.ButtonTransparent.DisabledColor
                DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
                Fill: =gblAppStyles.ButtonTransparent.Fill
                FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                Height: =imgTemplateAction_Back.Height
                HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
                HoverColor: =gblAppStyles.ButtonTransparent.HoverColor
                HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
                OnSelect: =Select(btnTemplateAction_Cancel)
                PaddingLeft: =24
                PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
                PressedColor: =gblAppStyles.ButtonTransparent.PressedColor
                PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
                RadiusBottomLeft: =gblAppStyles.ButtonTransparent.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.ButtonTransparent.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.ButtonTransparent.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.ButtonTransparent.RadiusTopRight
                Size: =gblAppStyles.Label.Size.Large
                TabIndex: =If(locDisplayDialog || locBlockUserInput ||locDisplayDialogDelete ||locDisplayAssignmentSelect ||locSelectIcon,-1,0)
                Text: |-
                    =With(
                        {
                            varDefault: "Back",
                            varOOBTextId: "btnSetupBack__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Width: =140
                X: =imgTemplateAction_Back.X
                Y: =imgTemplateAction_Back.Y
                ZIndex: =4

            imgTemplateAction_Delete As image:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Click to delete the template",
                            varOOBTextId: "imgTemplateAction_Delete__locAccessibleLabel"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                DisabledFill: |-
                    =With(
                        {
                            varImageIsCategory: LookUp(
                                staticIcons,
                                staticIconName = "Delete"
                            ).staticIconIsCategory
                        },
                        If(
                            varImageIsCategory,
                            gblAppStyles.Icons.DisabledFill_Category,
                            Transparent
                        )
                    )
                Fill: |-
                    =With(
                        {
                            varImageIsCategory: LookUp(
                                staticIcons,
                                staticIconName = "Delete"
                            ).staticIconIsCategory
                        },
                        If(
                            varImageIsCategory,
                            gblAppStyles.Icons.Fill_Category,
                            Transparent
                        )
                    )
                Height: =btnTemplateAction_Delete.Height
                Image: |-
                    =With(
                        {
                            varImageRecord: LookUp(
                                staticIcons,
                                staticIconName = "Delete"
                            ),
                            varColor: If(
                                Self.DisplayMode = DisplayMode.Disabled,
                                gblAppStyles.Icons.DisabledColor,
                                gblAppStyles.Icons.Color_Red
                            )
                        },
                        With(
                            {
                                varImageData: Concatenate(
                                    "data:image/svg+xml;utf8, ",
                                    EncodeUrl(
                                        Concatenate(
                                            "<svg viewBox='",
                                            varImageRecord.staticIconViewbox,
                                            "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                            varImageRecord.staticIconPath,
                                            "' fill='#",
                                            varColor,
                                            "'/></svg>"
                                        )
                                    )
                                )
                            },
                            varImageData
                        )
                    )
                OnSelect: =
                PaddingBottom: =4
                PaddingLeft: =4
                PaddingRight: =4
                PaddingTop: =4
                Visible: =locScreenModeEditTemplate
                Width: =24
                X: =btnTemplateAction_Delete.X
                Y: =btnTemplateAction_Delete.Y
                ZIndex: =6

            imgTemplateAction_Duplicate As image:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Icon for duplicating the issue category",
                            varOOBTextId: "imgTemplateAction_Duplicate__locAccessibleLabel"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                DisabledFill: |-
                    =With(
                        {
                            varImageIsCategory: LookUp(
                                staticIcons,
                                staticIconName = "Duplicate"
                            ).staticIconIsCategory
                        },
                        If(
                            varImageIsCategory,
                            gblAppStyles.Icons.DisabledFill_Category,
                            Transparent
                        )
                    )
                DisplayMode: =If(btnTemplateAction_Save.DisplayMode = DisplayMode.Edit,DisplayMode.Disabled, DisplayMode.Edit)
                Fill: |-
                    =With(
                        {
                            varImageIsCategory: LookUp(
                                staticIcons,
                                staticIconName = "Duplicate"
                            ).staticIconIsCategory
                        },
                        If(
                            varImageIsCategory,
                            gblAppStyles.Icons.Fill_Category,
                            Transparent
                        )
                    )
                Height: =btnTemplateAction_Duplicate.Height
                Image: |-
                    =With(
                        {
                            varImageRecord: LookUp(
                                staticIcons,
                                staticIconName = "Duplicate"
                            ),
                            varColor: If(
                                Self.DisplayMode = DisplayMode.Disabled,
                                gblAppStyles.Icons.DisabledColor,
                                gblAppStyles.Icons.Color
                            )
                        },
                        With(
                            {
                                varImageData: Concatenate(
                                    "data:image/svg+xml;utf8, ",
                                    EncodeUrl(
                                        Concatenate(
                                            "<svg viewBox='",
                                            varImageRecord.staticIconViewbox,
                                            "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                            varImageRecord.staticIconPath,
                                            "' fill='#",
                                            varColor,
                                            "'/></svg>"
                                        )
                                    )
                                )
                            },
                            varImageData
                        )
                    )
                OnSelect: =
                PaddingBottom: =4
                PaddingLeft: =4
                PaddingRight: =4
                PaddingTop: =4
                RadiusBottomLeft: =5
                RadiusBottomRight: =5
                RadiusTopLeft: =5
                RadiusTopRight: =5
                Visible: =locScreenModeEditTemplate
                Width: =24
                X: =btnTemplateAction_Duplicate.X
                Y: =btnTemplateAction_Duplicate.Y
                ZIndex: =7

            btnTemplateAction_Duplicate As button:
                Align: =Align.Right
                BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
                BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
                Color: =gblAppStyles.ButtonTransparent.Color
                DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                DisabledColor: =gblAppStyles.ButtonTransparent.DisabledColor
                DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
                DisplayMode: =If(btnTemplateAction_Save.DisplayMode = DisplayMode.Edit,DisplayMode.Disabled, DisplayMode.Edit)
                Fill: =gblAppStyles.ButtonTransparent.Fill
                FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Normal
                Height: =btnTemplateAction_Save.Height
                HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
                HoverColor: =gblAppStyles.ButtonTransparent.HoverColor
                HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
                OnSelect: |-
                    =UpdateContext(
                        {
                            locScreenModeCreateTemplate: true,
                            locRecordDuplicateTemplate: gblRecordTemplate
                        }
                    );
                    Set(
                        gblRecordTemplate,
                        Blank()
                    );
                    UpdateIf(
                        colCdsIssueQuestions,
                        !appIsNewRecord,
                        {appIsNewRecord: true}
                    );
                    // [Screen Reader Start]
                    UpdateContext(
                        {
                            locScreenReaderAnnouncedText: With(
                                {varAnnouncedText: "A duplicate template is created"},
                                If(
                                    locScreenReaderAnnouncedText = varAnnouncedText,
                                    Concatenate(
                                        varAnnouncedText,
                                        " "
                                    ),
                                    varAnnouncedText
                                )
                            )
                        }
                    );
                    // [Screen Reader End]
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
                PressedColor: =gblAppStyles.ButtonTransparent.PressedColor
                PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
                RadiusBottomLeft: =gblAppStyles.ButtonTransparent.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.ButtonTransparent.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.ButtonTransparent.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.ButtonTransparent.RadiusTopRight
                Size: =gblAppStyles.ButtonTransparent.Size
                TabIndex: =If(locDisplayDialog || locBlockUserInput ||locDisplayDialogDelete ||locDisplayAssignmentSelect ||locSelectIcon,-1,0)
                Text: |-
                    =With(
                        {
                            varDefault: "Duplicate",
                            varOOBTextId: "_translateCommon__Duplicate"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Visible: =locScreenModeEditTemplate
                Width: |-
                    =Switch(
                        gblUserLanguage,
                        "de-DE",
                        108,
                        "en-US",
                        96,
                        "es-ES",
                        90,
                        "fr-FR",
                        102,
                        "it-IT",
                        96,
                        "ja-JP",
                        72,
                        "nl-NL",
                        108,
                        "pt-BR",
                        84,
                        96
                    )
                X: =imgTemplateAction_Delete.X - Self.Width - gblPadding.ButtonText
                Y: =btnTemplateAction_Save.Y
                ZIndex: =8

            btnTemplateAction_Delete As button:
                Align: =Align.Right
                BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
                BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
                Color: =gblAppStyles.ButtonTransparent.Color
                DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                DisabledColor: =gblAppStyles.ButtonTransparent.DisabledColor
                DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
                DisplayMode: =If(btnTemplateAction_Save.DisplayMode = DisplayMode.Edit,DisplayMode.Disabled, DisplayMode.Edit)
                Fill: =gblAppStyles.ButtonTransparent.Fill
                FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Normal
                Height: =btnTemplateAction_Save.Height
                HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
                HoverColor: =gblAppStyles.ButtonTransparent.HoverColor
                HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
                OnSelect: |-
                    =UpdateContext(
                        {
                            locDisplayDialog: true,
                            locDisplayDialogDelete: true
                        }
                    );
                    // [Set Focus Start]
                    UpdateContext({locSetFocusTimerStart: false});
                    UpdateContext({locSetFocusControlTarget: "imgConfirmDelete_Cancel"});
                    UpdateContext({locSetFocusTimerStart: true});
                    // [Set Focus End]
                PaddingBottom: =4
                PaddingLeft: =32
                PaddingRight: =4
                PaddingTop: =4
                PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
                PressedColor: =gblAppStyles.ButtonTransparent.PressedColor
                PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
                RadiusBottomLeft: =gblAppStyles.ButtonTransparent.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.ButtonTransparent.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.ButtonTransparent.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.ButtonTransparent.RadiusTopRight
                Size: =gblAppStyles.ButtonTransparent.Size
                TabIndex: =If(locDisplayDialog || locBlockUserInput ||locDisplayDialogDelete ||locDisplayAssignmentSelect ||locSelectIcon,-1,0)
                Text: |-
                    =With(
                        {
                            varDefault: "Delete",
                            varOOBTextId: "btnConfirmDelete_Confirm__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Visible: =locScreenModeEditTemplate
                Width: |-
                    =Switch(
                        gblUserLanguage,
                        "de-DE",
                        96,
                        "en-US",
                        84,
                        "es-ES",
                        98,
                        "fr-FR",
                        110,
                        "it-IT",
                        84,
                        "ja-JP",
                        72,
                        "nl-NL",
                        120,
                        "pt-BR",
                        84,
                        84
                    )
                X: =btnTemplateAction_Save.X - Self.Width - gblPadding.ButtonText
                Y: =btnTemplateAction_Save.Y
                ZIndex: =9

        conCategoryForm As groupContainer:
            Height: =txtCategoryForm_Title.Y + txtCategoryForm_Title.Height + gblPadding.Page + If(btnUpdateTitle.Visible,8,0)
            Visible: =locScreenModeViewCategory Or locScreenModeEditCategory Or locScreenModeCreateCategory
            Width: =conCategoryActions.Width
            X: =conCategoryActions.X
            Y: =conCategoryActions.Y + conCategoryActions.Height
            ZIndex: =5

            imgCategoryForm_Icon As image:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Icon selected for the issue category",
                            varOOBTextId: "imgCategoryForm_Icon__locAccessibleLabel"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                BorderThickness: =0.25
                DisplayMode: =DisplayMode.Disabled
                Fill: =gblAppStyles.Gallery.SelectedItem
                Height: =32
                Image: |
                    =If(
                        !IsBlank(locDialogIconNew),
                        locDialogIconNew,
                        !IsBlank(locFieldCategoryIcon),
                        locFieldCategoryIcon,
                        gblRecordCategory.Icon
                    )
                OnSelect: =Select(btnUpdateIcon)
                RadiusBottomLeft: =4
                RadiusBottomRight: =4
                RadiusTopLeft: =4
                RadiusTopRight: =4
                TabIndex: =0
                Tooltip: =Self.AccessibleLabel
                Width: =32
                X: =lblCategoryForm_Icon.X
                Y: =txtCategoryForm_Title.Y
                ZIndex: =2

            lblCategoryForm_Icon As label:
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                DisabledColor: =gblAppStyles.Label.DisabledColor
                DisabledFill: =gblAppStyles.Label.DisabledFill
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                Height: =lblCategoryForm_Title.Height
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                PaddingLeft: =0
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Size: =gblAppStyles.Label.Size.Small
                Text: |-
                    =With(
                        {
                            varDefault: "Icon",
                            varOOBTextId: "lblCategoryForm_Icon__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Width: =lblCategoryForm_Title.Width
                X: =lblCategoryForm_Title.X + lblCategoryForm_Title.Width + 16
                Y: =lblCategoryForm_Title.Y
                ZIndex: =3

            txtCategoryForm_Title As text:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Text input for issue report category title",
                            varOOBTextId: "txtCategoryForm_Title__locAccessibleLabel"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                BorderColor: =gblAppStyles.TextInput.BorderColor
                BorderThickness: =gblAppStyles.TextInput.BorderThickness
                Color: =gblAppStyles.TextInput.Color
                Default: =If(locScreenModeCreateCategory,Blank(),gblRecordCategory.Name)
                DisabledBorderColor: =gblAppStyles.TextInput.DisabledBorderColor
                DisabledColor: =gblAppStyles.TextInput.DisabledColor
                DisabledFill: =gblAppStyles.TextInput.DisabledFill
                DisplayMode: =If(locScreenModeCreateCategory, DisplayMode.Edit,DisplayMode.Disabled)
                Fill: =gblAppStyles.TextInput.Fill
                FocusedBorderColor: =gblAppStyles.TextInput.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.TextInput.FocusedBorderThickness
                Font: ='Segoe UI'
                Height: =32
                HintText: |-
                    =With(
                        {
                            varDefault: "Enter a category title",
                            varOOBTextId: "txtCategoryForm_Title__locHintText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                HoverBorderColor: =gblAppStyles.TextInput.HoverBorderColor
                HoverColor: =gblAppStyles.TextInput.HoverColor
                HoverFill: =gblAppStyles.TextInput.HoverFill
                MaxLength: =100
                PaddingBottom: =4
                PaddingLeft: =8
                PaddingRight: =8
                PaddingTop: =4
                PressedBorderColor: =gblAppStyles.TextInput.PressedBorderColor
                PressedColor: =gblAppStyles.TextInput.PressedColor
                PressedFill: =gblAppStyles.TextInput.PressedFill
                RadiusBottomLeft: =gblAppStyles.TextInput.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.TextInput.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.TextInput.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.TextInput.RadiusTopRight
                Size: =gblAppStyles.TextInput.Size
                TabIndex: =If(locDisplayDialog || locBlockUserInput ||locDisplayDialogDelete ||locDisplayAssignmentSelect ||locSelectIcon,-1,0)
                Width: =Max(200,App.Width * .2)
                X: =gblPadding.Page
                Y: =lblCategoryForm_Title.Y + lblCategoryForm_Title.Height + 8
                ZIndex: =4

            lblCategoryForm_Title As label:
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                DisabledColor: =gblAppStyles.Label.DisabledColor
                DisabledFill: =gblAppStyles.Label.DisabledFill
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                Height: =16
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                PaddingLeft: =If(locScreenModeEditCategory,20,0)
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Size: =gblAppStyles.Label.Size.Small
                Text: |-
                    =With(
                        {
                            varDefault: "Title",
                            varOOBTextId: "_translateCommon__Title"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Width: =txtCategoryForm_Title.Width
                X: =txtCategoryForm_Title.X
                ZIndex: =5

            btnUpdateIcon As button:
                BorderColor: =gblAppStyles.ButtonSecondary.BorderColor
                BorderThickness: =gblAppStyles.ButtonSecondary.BorderThickness
                Color: =gblAppStyles.ButtonSecondary.Color
                DisabledBorderColor: =gblAppStyles.ButtonSecondary.DisabledBorderColor
                DisabledColor: =gblAppStyles.ButtonSecondary.DisabledColor
                DisabledFill: =gblAppStyles.ButtonSecondary.DisabledFill
                Fill: =gblAppStyles.ButtonSecondary.Fill
                FocusedBorderColor: =gblAppStyles.ButtonSecondary.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.ButtonSecondary.FocusedBorderThickness
                Font: ='Segoe UI'
                Height: =imgCategoryForm_Icon.Height
                HoverBorderColor: =gblAppStyles.ButtonSecondary.HoverBorderColor
                HoverColor: =gblAppStyles.ButtonSecondary.HoverColor
                HoverFill: =gblAppStyles.ButtonSecondary.HoverFill
                OnSelect: |-
                    =UpdateContext(
                        {
                            locFieldCategoryIcon: gblRecordCategory.Icon,
                            locDisplayDialog: true,
                            locSelectIcon: true
                        }
                    )
                PaddingBottom: =4
                PaddingLeft: =4
                PaddingRight: =4
                PaddingTop: =4
                PressedBorderColor: =gblAppStyles.ButtonSecondary.PressedBorderColor
                PressedColor: =gblAppStyles.ButtonSecondary.PressedColor
                PressedFill: =gblAppStyles.ButtonSecondary.PressedFill
                RadiusBottomLeft: =gblAppStyles.ButtonSecondary.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.ButtonSecondary.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.ButtonSecondary.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.ButtonSecondary.RadiusTopRight
                Size: =gblAppStyles.ButtonSecondary.Size
                TabIndex: =If(locDisplayDialog || locBlockUserInput ||locDisplayDialogDelete ||locDisplayAssignmentSelect ||locSelectIcon,-1,0)
                Text: |-
                    =With(
                        {
                            varDefault: "Update icon",
                            varOOBTextId: "btnUpdateIcon__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Tooltip: =Self.Text
                Visible: =locScreenModeEditCategory Or locScreenModeCreateCategory
                Width: |-
                    =Switch(
                        gblUserLanguage,
                        "de-DE",
                        190,
                        "en-US",
                        140,
                        "es-ES",
                        140,
                        "fr-FR",
                        175,
                        "it-IT",
                        140,
                        "ja-JP",
                        125,
                        "nl-NL",
                        170,
                        "pt-BR",
                        140,
                        140
                    )
                X: =imgCategoryForm_Icon.X +imgCategoryForm_Icon.Width + gblPadding.Page
                Y: =imgCategoryForm_Icon.Y
                ZIndex: =6

            lblCategoryForm_NameError As label:
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                DisabledColor: =gblAppStyles.Label.DisabledColor
                DisabledFill: =gblAppStyles.Label.DisabledFill
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                Height: =24
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                PaddingLeft: =8
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Size: =gblAppStyles.Label.Size.Small
                Text: |-
                    =With(
                        {
                            varDefault: "This name already exists.",
                            varOOBTextId: "lblCategoryForm_NameError__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Visible: |-
                    =txtCategoryForm_Title.Text in Filter(
                        colCdsIssueCategories,
                        colCdsIssueCategories[@'Issue Report Category'] <> gblRecordCategory.'Issue Report Category'
                    ).Name
                Width: =txtCategoryForm_Title.Width
                X: =txtCategoryForm_Title.X
                Y: =txtCategoryForm_Title.Y + txtCategoryForm_Title.Height
                ZIndex: =7

            btnUpdateTitle As button:
                Align: =Align.Left
                BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
                BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
                Color: =gblAppStyles.ButtonTransparent.Color
                DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                DisabledColor: =gblAppStyles.ButtonTransparent.DisabledColor
                DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
                Fill: =gblAppStyles.ButtonTransparent.Fill
                FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
                Font: ='Segoe UI'
                FontWeight: =FontWeight.Normal
                Height: =28
                HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
                HoverColor: =gblAppStyles.ButtonTransparent.HoverColor
                HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
                OnSelect: |
                    =UpdateContext(
                        {
                            locFieldCategoryTitleNew: LookUp(
                                colPlannerBuckets,
                                gblRecordCategory.'Planner Bucket Id' = id
                            ).name
                        }
                    );
                    // Update CDS Category record
                    IfError(
                        Patch(
                            'Issue Report Categories',
                            {
                                'Issue Report Category': gblRecordCategory.'Issue Report Category',
                                Name: locFieldCategoryTitleNew
                            }
                        ),
                        Blank()
                    );
                        // Update Locally
                    UpdateIf(
                        colCdsIssueCategories,
                        colCdsIssueCategories[@'Issue Report Category'] = gblRecordCategory.'Issue Report Category',
                        {Name: locFieldCategoryTitleNew}
                    );
                            // Reset Variable
                    Set(
                        gblRecordCategory,
                        LookUp(
                            colCdsIssueCategories,
                            colCdsIssueCategories[@'Issue Report Category'] = gblRecordCategory.'Issue Report Category'
                        )
                    );
                PaddingBottom: =4
                PaddingLeft: =4
                PaddingRight: =4
                PaddingTop: =4
                PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
                PressedColor: =gblAppStyles.ButtonTransparent.PressedColor
                PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
                RadiusBottomLeft: =gblAppStyles.ButtonTransparent.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.ButtonTransparent.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.ButtonTransparent.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.ButtonTransparent.RadiusTopRight
                Size: =gblAppStyles.ButtonTransparent.Size
                TabIndex: =If(locDisplayDialog || locBlockUserInput ||locDisplayDialogDelete ||locDisplayAssignmentSelect ||locSelectIcon,-1,0)
                Text: |-
                    =With(
                        {
                            varDefault: "Update title",
                            varOOBTextId: "btnUpdateTitle__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Tooltip: =Self.Text
                Underline: =true
                Visible: |-
                    =(LookUp(
                        colPlannerBuckets,
                        gblRecordCategory.'Planner Bucket Id' = id
                    ).name <> gblRecordCategory.Name) And gblRecordCategory.'Planner Bucket Id' in colPlannerBuckets.id
                Width: =lblCategoryForm_NameError.Width / 2
                X: =lblCategoryForm_NameError.X
                Y: =lblCategoryForm_NameError.Y
                ZIndex: =8

            imgUpdateTitlePrompt As image:
                AccessibleLabel: =Self.Tooltip
                DisabledFill: |-
                    =With(
                        {
                            varImageIsCategory: LookUp(
                                staticIcons,
                                staticIconName = "Help"
                            ).staticIconIsCategory
                        },
                        If(
                            varImageIsCategory,
                            gblAppStyles.Icons.DisabledFill_Category,
                            Transparent
                        )
                    )
                DisplayMode: =DisplayMode.View
                Fill: |-
                    =With(
                        {
                            varImageIsCategory: LookUp(
                                staticIcons,
                                staticIconName = "Help"
                            ).staticIconIsCategory
                        },
                        If(
                            varImageIsCategory,
                            gblAppStyles.Icons.Fill_Category,
                            Transparent
                        )
                    )
                Height: =lblCategoryForm_Title.Height
                Image: |-
                    =With(
                        {
                            varImageRecord: LookUp(
                                staticIcons,
                                staticIconName = "Help"
                            ),
                            varColor: If(
                                Self.DisplayMode = DisplayMode.Disabled,
                                gblAppStyles.Icons.DisabledColor,
                                gblAppStyles.Icons.Color
                            )
                        },
                        With(
                            {
                                varImageData: Concatenate(
                                    "data:image/svg+xml;utf8, ",
                                    EncodeUrl(
                                        Concatenate(
                                            "<svg viewBox='",
                                            varImageRecord.staticIconViewbox,
                                            "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                            varImageRecord.staticIconPath,
                                            "' fill='#",
                                            varColor,
                                            "'/></svg>"
                                        )
                                    )
                                )
                            },
                            varImageData
                        )
                    )
                RadiusBottomLeft: =5
                RadiusBottomRight: =5
                RadiusTopLeft: =5
                RadiusTopRight: =5
                Tooltip: |-
                    =With(
                        {
                            varDefault: "You can update the name of this category in Tasks",
                            varOOBTextId: "imgUpdateTitlePrompt__LocAccessibleLabel"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Visible: =locScreenModeEditCategory
                Width: =16
                X: =lblCategoryForm_Title.X
                Y: =lblCategoryForm_Title.Y
                ZIndex: =9

        conCategoryActions As groupContainer:
            Height: =72
            Visible: =locScreenModeViewCategory Or locScreenModeEditCategory Or locScreenModeCreateCategory
            Width: =Parent.Width - Self.X
            X: =0*0
            Y: =0*0
            ZIndex: =6

            btnCategoryAction_Edit As button:
                BorderColor: =gblAppStyles.ButtonSecondary.BorderColor
                BorderThickness: =gblAppStyles.ButtonSecondary.BorderThickness
                Color: =gblAppStyles.ButtonSecondary.Color
                DisabledBorderColor: =gblAppStyles.ButtonSecondary.DisabledBorderColor
                DisabledColor: =gblAppStyles.ButtonSecondary.DisabledColor
                DisabledFill: =gblAppStyles.ButtonSecondary.DisabledFill
                DisplayMode: |-
                    =If(
                        IsBlank(gblRecordCategory),
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                Fill: =gblAppStyles.ButtonSecondary.Fill
                FocusedBorderColor: =gblAppStyles.ButtonPrimary.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.ButtonSecondary.FocusedBorderThickness
                Font: ='Segoe UI'
                Height: =32
                HoverBorderColor: =gblAppStyles.ButtonSecondary.HoverBorderColor
                HoverColor: =gblAppStyles.ButtonSecondary.HoverColor
                HoverFill: =gblAppStyles.ButtonSecondary.HoverFill
                OnSelect: |-
                    =UpdateContext(
                        {
                            locScreenModeCreateCategory: false,
                            locScreenModeCreateTemplate: false,
                            locScreenModeEditCategory: true,
                            locScreenModeEditTemplate: false,
                            locScreenModeViewCategory: false,
                            locScreenModeViewTemplate: false,
                            locRecordCurrentCategory: gblRecordCategory,
                            locFieldCategoryIcon: gblRecordCategory.Icon
                        }
                    );
                    Reset(txtCategoryForm_Title);
                PaddingBottom: =4
                PaddingLeft: =4
                PaddingRight: =4
                PaddingTop: =4
                PressedBorderColor: =gblAppStyles.ButtonSecondary.PressedBorderColor
                PressedColor: =gblAppStyles.ButtonSecondary.PressedColor
                PressedFill: =gblAppStyles.ButtonSecondary.PressedFill
                RadiusBottomLeft: =gblAppStyles.ButtonSecondary.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.ButtonSecondary.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.ButtonSecondary.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.ButtonSecondary.RadiusTopRight
                Size: =gblAppStyles.ButtonSecondary.Size
                TabIndex: =If(locDisplayDialog || locBlockUserInput ||locDisplayDialogDelete ||locDisplayAssignmentSelect ||locSelectIcon,-1,0)
                Text: |-
                    =With(
                        {
                            varDefault: "Edit",
                            varOOBTextId: "_translateCommon__Edit"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Tooltip: =Self.Text
                Visible: =locScreenModeViewCategory And !IsBlank(gblRecordCategory)
                Width: =96
                X: =Parent.Width - Self.Width - gblPadding.Page
                Y: =(Parent.Height - Self.Height) / 2
                ZIndex: =1

            btnCategoryAction_Cancel As button:
                BorderColor: =gblAppStyles.ButtonSecondary.BorderColor
                BorderThickness: =gblAppStyles.ButtonSecondary.BorderThickness
                Color: =gblAppStyles.ButtonSecondary.Color
                DisabledBorderColor: =gblAppStyles.ButtonSecondary.DisabledBorderColor
                DisabledColor: =gblAppStyles.ButtonSecondary.DisabledColor
                DisabledFill: =gblAppStyles.ButtonSecondary.DisabledFill
                Fill: =gblAppStyles.ButtonSecondary.Fill
                FocusedBorderColor: =gblAppStyles.ButtonSecondary.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.ButtonSecondary.FocusedBorderThickness
                Font: ='Segoe UI'
                Height: =32
                HoverBorderColor: =gblAppStyles.ButtonSecondary.HoverBorderColor
                HoverColor: =gblAppStyles.ButtonSecondary.HoverColor
                HoverFill: =gblAppStyles.ButtonSecondary.HoverFill
                OnSelect: |
                    =Reset(txtCategoryForm_Title);
                    // Set Screen Mode
                    UpdateContext(
                        {
                            locScreenModeCreateCategory: false,
                            locScreenModeCreateTemplate: false,
                            locScreenModeEditCategory: false,
                            locScreenModeEditTemplate: false,
                            locScreenModeViewCategory: true,
                            locScreenModeViewTemplate: false,
                            locFieldCategoryIcon: gblRecordCategory.Icon
                        }
                    );
                    Set(
                        gblRecordCategory,
                        locRecordCurrentCategory
                    );
                PaddingBottom: =4
                PaddingLeft: =4
                PaddingRight: =4
                PaddingTop: =4
                PressedBorderColor: =gblAppStyles.ButtonSecondary.PressedBorderColor
                PressedColor: =gblAppStyles.ButtonSecondary.PressedColor
                PressedFill: =gblAppStyles.ButtonSecondary.PressedFill
                RadiusBottomLeft: =gblAppStyles.ButtonSecondary.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.ButtonSecondary.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.ButtonSecondary.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.ButtonSecondary.RadiusTopRight
                Size: =gblAppStyles.ButtonSecondary.Size
                TabIndex: =If(locDisplayDialog || locBlockUserInput ||locDisplayDialogDelete ||locDisplayAssignmentSelect ||locSelectIcon,-1,0)
                Text: |-
                    =With(
                        {
                            varDefault: "Cancel",
                            varOOBTextId: "_translateCommon__Cancel"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Tooltip: =Self.Text
                Visible: =locScreenModeEditCategory Or locScreenModeCreateCategory
                Width: =108
                X: =Parent.Width - Self.Width - gblPadding.Page
                Y: =(Parent.Height - Self.Height) / 2
                ZIndex: =2

            btnCategoryAction_Save As button:
                BorderColor: =gblAppStyles.ButtonPrimary.BorderColor
                BorderThickness: =gblAppStyles.ButtonPrimary.BorderThickness
                Color: =gblAppStyles.ButtonPrimary.Color
                DisabledBorderColor: =gblAppStyles.ButtonPrimary.DisabledBorderColor
                DisabledColor: =gblAppStyles.ButtonPrimary.DisabledColor
                DisabledFill: =gblAppStyles.ButtonPrimary.DisabledFill
                DisplayMode: |-
                    =If(
                        (IsBlank(txtCategoryForm_Title.Text) Or (txtCategoryForm_Title.Text in Filter(
                            colCdsIssueCategories,
                            colCdsIssueCategories[@'Issue Report Category'] <> gblRecordCategory.'Issue Report Category'
                        ).Name)),
                        DisplayMode.Disabled,
                        locFieldCategoryIcon <> gblRecordCategory.Icon,
                        DisplayMode.Edit,
                        txtCategoryForm_Title.Text <> gblRecordCategory.Name,
                        DisplayMode.Edit,
                        DisplayMode.Disabled
                    )
                Fill: =gblAppStyles.ButtonPrimary.Fill
                FocusedBorderColor: =gblAppStyles.ButtonPrimary.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.ButtonPrimary.FocusedBorderThickness
                Font: ='Segoe UI'
                Height: =32
                HoverBorderColor: =gblAppStyles.ButtonPrimary.HoverBorderColor
                HoverColor: =gblAppStyles.ButtonPrimary.HoverColor
                HoverFill: =gblAppStyles.ButtonPrimary.HoverFill
                OnSelect: |-
                    =UpdateContext({locBlockUserInput: true});
                    If(
                        locScreenModeCreateCategory,
                        // CREATE NEW CATEGORY/BUCKET
                        // Create Planner Bucket
                        UpdateContext(
                            {
                                locRecordPlannerBucket: Planner.CreateBucketV2(
                                    txtCategoryForm_Title.Text,
                                    gblSettingTeamId,
                                    gblSettingPlannerPlanId
                                )
                            }
                        );
                        // Collect Planner Bucket locally
                    Collect(
                            colPlannerBuckets,
                            locRecordPlannerBucket
                        );
                        // Create CDS Category record, linked to Bucket
                    UpdateContext(
                            {
                                locRecordCdsCategory: IfError(Patch(
                                    'Issue Report Categories',
                                    Defaults('Issue Report Categories'),
                                    {
                                        Name: txtCategoryForm_Title.Text,
                                        'Planner Bucket Id': locRecordPlannerBucket.id,
                                        Icon: imgCategoryForm_Icon.Image
                                    }
                                ),Blank())
                            }
                        );
                        
                    // Collect Category locally
                    Collect(
                            colCdsIssueCategories,
                            locRecordCdsCategory
                        );
                        // Set Variable
                    Set(
                            gblRecordCategory,
                            locRecordCdsCategory
                        );
                        ,
                        // UPDATE CATEGORY
                    // Update CDS Category record
                        UpdateContext(
                            {
                                locRecordCdsCategory: IfError(Patch(
                                    'Issue Report Categories',
                                    {
                                        'Issue Report Category': gblRecordCategory.'Issue Report Category',
                                        Name: txtCategoryForm_Title.Text,
                                        Icon: imgCategoryForm_Icon.Image
                                    }
                                ),Blank())
                            }
                        );
                        // Update Locally
                    UpdateIf(
                            colCdsIssueCategories,
                            colCdsIssueCategories[@'Issue Report Category'] = gblRecordCategory.'Issue Report Category',
                            {
                                Name: txtCategoryForm_Title.Text,
                                Icon: imgCategoryForm_Icon.Image
                            }
                        );
                            // Reset Variable
                    Set(
                            gblRecordCategory,
                            LookUp(
                                colCdsIssueCategories,
                                colCdsIssueCategories[@'Issue Report Category'] = gblRecordCategory.'Issue Report Category'
                            )
                        );
                        
                    );
                    // Reset and Navigate
                    Reset(txtCategoryForm_Title);
                    // Clear Icon
                    UpdateContext(
                        {
                            locDialogIconNew: Blank()
                        }
                    );
                    UpdateContext(
                        {
                            locScreenModeCreateCategory: false,
                            locScreenModeCreateTemplate: false,
                            locScreenModeEditCategory: false,
                            locScreenModeEditTemplate: false,
                            locScreenModeViewCategory: true,
                            locScreenModeViewTemplate: false
                        }
                    );
                    UpdateContext({locBlockUserInput: false});
                PaddingBottom: =4
                PaddingLeft: =4
                PaddingRight: =4
                PaddingTop: =4
                PressedBorderColor: =gblAppStyles.ButtonPrimary.PressedBorderColor
                PressedColor: =gblAppStyles.ButtonPrimary.PressedColor
                PressedFill: =gblAppStyles.ButtonPrimary.PressedFill
                RadiusBottomLeft: =gblAppStyles.ButtonPrimary.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.ButtonPrimary.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.ButtonPrimary.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.ButtonPrimary.RadiusTopRight
                Size: =gblAppStyles.ButtonPrimary.Size
                TabIndex: =If(locDisplayDialog || locBlockUserInput ||locDisplayDialogDelete ||locDisplayAssignmentSelect ||locSelectIcon,-1,0)
                Text: |-
                    =With(
                        {
                            varDefault: "Save",
                            varOOBTextId: "btnSettingsSave__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Tooltip: =Self.Text
                Visible: =locScreenModeEditCategory Or locScreenModeCreateCategory
                Width: =108
                X: =btnCategoryAction_Cancel.X - Self.Width - gblPadding.ButtonShape
                Y: =btnCategoryAction_Cancel.Y
                ZIndex: =3

            imgCategoryAction_Delete As image:
                AccessibleLabel: =btnCategoryAction_Delete.Text
                DisabledFill: |-
                    =With(
                        {
                            varImageIsCategory: LookUp(
                                staticIcons,
                                staticIconName = "Delete"
                            ).staticIconIsCategory
                        },
                        If(
                            varImageIsCategory,
                            gblAppStyles.Icons.DisabledFill_Category,
                            Transparent
                        )
                    )
                Fill: |-
                    =With(
                        {
                            varImageIsCategory: LookUp(
                                staticIcons,
                                staticIconName = "Delete"
                            ).staticIconIsCategory
                        },
                        If(
                            varImageIsCategory,
                            gblAppStyles.Icons.Fill_Category,
                            Transparent
                        )
                    )
                Height: =btnCategoryAction_Delete.Height
                Image: |-
                    =With(
                        {
                            varImageRecord: LookUp(
                                staticIcons,
                                staticIconName = "Delete"
                            ),
                            varColor: If(
                                Self.DisplayMode = DisplayMode.Disabled,
                                gblAppStyles.Icons.DisabledColor,
                                gblAppStyles.Icons.Color_Red
                            )
                        },
                        With(
                            {
                                varImageData: Concatenate(
                                    "data:image/svg+xml;utf8, ",
                                    EncodeUrl(
                                        Concatenate(
                                            "<svg viewBox='",
                                            varImageRecord.staticIconViewbox,
                                            "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                            varImageRecord.staticIconPath,
                                            "' fill='#",
                                            varColor,
                                            "'/></svg>"
                                        )
                                    )
                                )
                            },
                            varImageData
                        )
                    )
                OnSelect: =
                PaddingBottom: =6
                PaddingLeft: =6
                PaddingRight: =6
                PaddingTop: =6
                RadiusBottomLeft: =5
                RadiusBottomRight: =5
                RadiusTopLeft: =5
                RadiusTopRight: =5
                Visible: =locScreenModeEditCategory
                Width: =32
                X: =btnCategoryAction_Delete.X
                Y: =btnCategoryAction_Delete.Y
                ZIndex: =4

            btnCategoryAction_Delete As button:
                Align: =Align.Left
                BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
                BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
                Color: =gblAppStyles.ButtonTransparent.Color
                DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                DisabledColor: =gblAppStyles.ButtonTransparent.DisabledColor
                DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
                Fill: =gblAppStyles.ButtonTransparent.Fill
                FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
                Font: ='Segoe UI'
                FontWeight: =FontWeight.Normal
                Height: =btnTemplateAction_Save.Height
                HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
                HoverColor: =gblAppStyles.ButtonTransparent.HoverColor
                HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
                OnSelect: |-
                    =UpdateContext(
                        {
                            locDisplayDialog: true,
                            locDisplayDialogDelete: true
                        }
                    );
                    SetFocus(btnConfirmDelete_Checkbox)
                PaddingBottom: =4
                PaddingLeft: =32
                PaddingRight: =4
                PaddingTop: =4
                PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
                PressedColor: =gblAppStyles.ButtonTransparent.PressedColor
                PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
                RadiusBottomLeft: =gblAppStyles.ButtonTransparent.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.ButtonTransparent.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.ButtonTransparent.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.ButtonTransparent.RadiusTopRight
                Size: =gblAppStyles.ButtonTransparent.Size
                TabIndex: =If(locDisplayDialog || locBlockUserInput ||locDisplayDialogDelete ||locDisplayAssignmentSelect ||locSelectIcon,-1,0)
                Text: |-
                    =With(
                        {
                            varDefault: "Delete",
                            varOOBTextId: "btnConfirmDelete_Confirm__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Tooltip: =Self.Text
                Visible: =locScreenModeEditCategory
                Width: |-
                    =Switch(
                        gblUserLanguage,
                        "de-DE",
                        108,
                        "en-US",
                        84,
                        "es-ES",
                        98,
                        "fr-FR",
                        110,
                        "it-IT",
                        84,
                        "ja-JP",
                        72,
                        "nl-NL",
                        120,
                        "pt-BR",
                        84,
                        84
                    )
                X: =btnCategoryAction_Save.X - Self.Width - gblPadding.ButtonText
                Y: =btnTemplateAction_Save.Y
                ZIndex: =5

            lblCategoryName As label:
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                DisabledColor: =gblAppStyles.Label.DisabledColor
                DisabledFill: =gblAppStyles.Label.DisabledFill
                DisplayMode: =DisplayMode.View
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                Height: =Parent.Height
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                PaddingBottom: =8
                PaddingLeft: =gblPadding.Page
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Size: =gblAppStyles.Label.Size.ExtraLarge
                Text: |-
                    =If(
                        locScreenModeCreateCategory,
                        With(
                            {
                                varDefault: "Add category",
                                varOOBTextId: "_translateCommon__Addcategory"
                            },
                            With(
                                {
                                    varLocalizedText: LookUp(
                                        colLocalization,
                                        OOBTextId = varOOBTextId,
                                        LocalizedText
                                    )
                                },
                                Coalesce(
                                    varLocalizedText,
                                    varDefault
                                )
                            )
                        ),
                        gblRecordCategory.Name
                    )
                Width: |-
                    =If(
                        locScreenModeCreateCategory,
                        btnCategoryAction_Save.X,
                        locScreenModeEditCategory,
                        btnCategoryAction_Delete.X,
                        btnCategoryAction_Edit.X
                    ) - 16
                Wrap: =false
                X: =0 * 0
                Y: =0 * 0
                ZIndex: =6

    comSharePointNotSetup_Templates As comSharePointNotSetup:
        Fill: =gblAppStyles.ButtonBackground.Fill
        Height: =If(Self.Visible,32,0)
        inputSettingsScreen: ='Settings Screen'
        inputTextColor: =gblAppStyles.Label.Color
        inputWarningIcon: |-
            =With(
                {
                    varImageRecord: LookUp(
                        staticIcons,
                        staticIconName = "Warning"
                    ),
                    varColor: 
                        gblAppStyles.Icons.DisabledColor
                    
                },
                With(
                    {
                        varImageData: Concatenate(
                            "data:image/svg+xml;utf8, ",
                            EncodeUrl(
                                Concatenate(
                                    "<svg viewBox='",
                                    varImageRecord.staticIconViewbox,
                                    "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                    varImageRecord.staticIconPath,
                                    "' fill='#",
                                    varColor,
                                    "'/></svg>"
                                )
                            )
                        )
                    },
                    varImageData
                )
            )
        inputWarningText: |-
            =With(
                {
                    varDefault: "Image storage needs to be configured. Click to go to Settings.",
                    varOOBTextId: "_translateCommon__ImageStorageNotSetup",
                    varParam0: Blank(),
                    varParam1: Blank(),
                    varParam2: Blank()
                },
                With(
                    {
                        varLocalizedText: LookUp(
                            colLocalization,
                            OOBTextId = varOOBTextId,
                            LocalizedText
                        )
                    },
                    If(
                        IsBlankOrError(varParam0),
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        ),
                        Coalesce(
                            Substitute(
                                Substitute(
                                    Substitute(
                                        varLocalizedText,
                                        "{0}",
                                        Text(varParam0)
                                    ),
                                    "{1}",
                                    Text(varParam1)
                                ),
                                "{2}",
                                Text(varParam2)
                            ),
                            varDefault
                        )
                    )
                )
            )
        Visible: =false//Pending SharePoint Flow Fixes//IsBlankOrError(gblSettingSharePointLocation)
        ZIndex: =5

    conCategoryWarnings As groupContainer:
        Height: =CountRows(galCategoryWarnings.AllItems) * (galCategoryWarnings.TemplateHeight + 24)
        Width: =Parent.Width - Self.X
        X: =conIssueNav.X + conIssueNav.Width
        Y: =comHeader_Templates.Y + comHeader_Templates.Height
        ZIndex: =6

        galCategoryWarnings As gallery.galleryVertical:
            AccessibleLabel: |-
                =With(
                    {
                        varDefault: "Gallery of warnings, for the selected issue category",
                        varOOBTextId: "galCategoryWarnings__locAccessibleLabel"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextId = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            BorderColor: =RGBA(0, 0, 0, 0)
            Height: =If(Self.Width < 830, 48,32)
            Items: |-
                =If(
                    IsBlank(gblRecordCategory),
                    Blank(),
                    With(
                        {
                            varMissingRecord: Not(gblRecordCategory.'Planner Bucket Id' in colPlannerBuckets.id),
                            varCategoryNameIncorrect: (LookUp(
                                colPlannerBuckets,
                                gblRecordCategory.'Planner Bucket Id' = id
                            ).name <> gblRecordCategory.Name) And gblRecordCategory.'Planner Bucket Id' in colPlannerBuckets.id,
                            varCategoryNameNew: LookUp(
                                colPlannerBuckets,
                                gblRecordCategory.'Planner Bucket Id' = id
                            ).name
                        },
                        Filter(
                            Table(
                                {
                                    tblVisible: varMissingRecord,
                                    tblIcon: With(
                                        {
                                            varImageRecord: LookUp(
                                                staticIcons,
                                                staticIconName = "Warning"
                                            ),
                                            varColor: If(
                                                gblThemeHiCo,
                                                "2EF149",
                                                gblThemeDark,
                                                "F1707B",
                                                "a80000"
                                            )
                                        },
                                        With(
                                            {
                                                varImageData: Concatenate(
                                                    "data:image/svg+xml;utf8, ",
                                                    EncodeUrl(
                                                        Concatenate(
                                                            "<svg viewBox='",
                                                            varImageRecord.staticIconViewbox,
                                                            "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                            varImageRecord.staticIconPath,
                                                            "' fill='#",
                                                            varColor,
                                                            "'/></svg>"
                                                        )
                                                    )
                                                )
                                            },
                                            varImageData
                                        )
                                    ),
                                    tblText: With(
                                        {
                                            varDefault: "This category has been removed from Planner. It will be recreated when a new issue is submitted.",
                                            varOOBTextId: "imgGalCategory_Warning__locTooltip"
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextId = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            Coalesce(
                                                varLocalizedText,
                                                varDefault
                                            )
                                        )
                                    ),
                                    tblColorFill: If(
                                        gblThemeHiCo,
                                        gblAppColors.HighContrastBackground,
                                        gblThemeDark,
                                        gblAppColors.MessagesDarkWebErrorBlock,
                                        gblAppColors.MessagesDefaultWebErrorBlock
                                    ),
                                    tblColorText: If(
                                        gblThemeHiCo,
                                        gblAppColors.HighContrastDisabled,
                                        gblThemeDark,
                                        gblAppColors.MessagesDarkWebErrorBlockIcon,
                                        gblAppColors.MessagesDefaultWebErrorBlockIcon
                                    ),
                                    tblColorBorder: If(
                                        gblThemeHiCo,
                                        gblAppColors.HighContrastDisabled,
                                        gblThemeDark,
                                        gblAppColors.MessagesDarkWebErrorBlockIcon,
                                        gblAppColors.MessagesDefaultWebErrorBlockIcon
                                    )
                                },
                                {
                                    tblVisible: varCategoryNameIncorrect,
                                    tblIcon: With(
                                        {
                                            varImageRecord: LookUp(
                                                staticIcons,
                                                staticIconName = "Info"
                                            ),
                                            varColor: If(
                                                gblThemeHiCo,
                                                "2EF149",
                                                gblThemeDark,
                                                "C8C6C4",
                                                "797673"
                                            )
                                        },
                                        With(
                                            {
                                                varImageData: Concatenate(
                                                    "data:image/svg+xml;utf8, ",
                                                    EncodeUrl(
                                                        Concatenate(
                                                            "<svg viewBox='",
                                                            varImageRecord.staticIconViewbox,
                                                            "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                            varImageRecord.staticIconPath,
                                                            "' fill='#",
                                                            varColor,
                                                            "'/></svg>"
                                                        )
                                                    )
                                                )
                                            },
                                            varImageData
                                        )
                                    ),
                                    tblText: With(
                                        {
                                            varDefault: "This category has been renamed to " & varCategoryNameNew & " in Planner. Click update title below, to change the title of this category.",
                                            varOOBTextId: "imgGalCategory_Info__locTooltip"
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextId = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            Coalesce(
                                                varLocalizedText,
                                                varDefault
                                            )
                                        )
                                    ),
                                    tblColorFill: If(
                                        gblThemeHiCo,
                                        gblAppColors.HighContrastBackground,
                                        gblThemeDark,
                                        gblAppColors.MessagesDarkWebWarning,
                                        gblAppColors.MessagesDefaultWebWarning
                                    ),
                                    tblColorText: If(
                                        gblThemeHiCo,
                                        gblAppColors.HighContrastDisabled,
                                        gblThemeDark,
                                        gblAppColors.MessagesDarkWebWarningIcon,
                                        gblAppColors.MessagesDefaultWebWarningIcon
                                    ),
                                    tblColorBorder: If(
                                        gblThemeHiCo,
                                        gblAppColors.HighContrastDisabled,
                                        gblThemeDark,
                                        gblAppColors.MessagesDarkWebWarningIcon,
                                        gblAppColors.MessagesDefaultWebWarningIcon
                                    )
                                }
                            ),
                            tblVisible
                        )
                    )
                )
            Layout: =Layout.Vertical
            TemplateFill: =Transparent
            TemplatePadding: =0
            TemplateSize: =Self.Height
            Width: =Parent.Width - (2 * Self.X)
            X: =gblPadding.Page
            Y: =gblPadding.Page
            ZIndex: =2

            btnWarningBackground As button:
                AutoDisableOnSelect: =false
                BorderColor: =Self.DisabledBorderColor
                BorderThickness: =1
                Color: =RGBA(0, 0, 0, 0)
                DisabledBorderColor: =ThisItem.tblColorBorder
                DisabledColor: =Transparent
                DisabledFill: =ThisItem.tblColorFill
                DisplayMode: =DisplayMode.Disabled
                Fill: =RGBA(0, 0, 0, 0)
                Height: =Parent.TemplateHeight - (Self.Y * 2)
                HoverColor: =Self.Fill
                HoverFill: =Self.Fill
                OnSelect: =Select(Parent)
                PressedFill: =Self.Fill
                RadiusBottomLeft: =4
                RadiusBottomRight: =4
                RadiusTopLeft: =4
                RadiusTopRight: =4
                TabIndex: =-1
                Text: =lblWarningText.Text
                Width: =Parent.TemplateWidth - (Self.X * 2)
                X: =1*1
                Y: =1*1
                ZIndex: =1

            lblWarningText As label:
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =ThisItem.tblColorText
                DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                DisabledColor: =gblAppStyles.Label.DisabledColor
                DisabledFill: =gblAppStyles.Label.DisabledFill
                DisplayMode: =DisplayMode.View
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                Height: =Parent.TemplateHeight
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                OnSelect: =Select(Parent)
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Size: =gblAppStyles.Label.Size.Medium
                Text: =ThisItem.tblText
                Width: =Parent.TemplateWidth - Self.X
                X: =imgWarningIcon.X + imgWarningIcon.Width + imgWarningIcon.X
                Y: =Parent.TemplateHeight * 0
                ZIndex: =3

            imgWarningIcon As image:
                Height: =Parent.TemplateHeight
                Image: =ThisItem.tblIcon
                OnSelect: =Select(Parent)
                Width: =gblPadding.Page
                X: =16
                Y: =0*0
                ZIndex: =4

    conIssueNav As groupContainer:
        Height: =Parent.Height - Self.Y
        Width: |-
            =If(
                Parent.Width > 900,
                300,
                Parent.Width > 750,
                250,
                Parent.Width > 500,
                200,
                0
            )
        X: =0 * 0
        Y: =comHeader_Templates.Y + comHeader_Templates.Height
        ZIndex: =7

        imgAddCategory As image:
            AccessibleLabel: =btnAddCategoryNav.Text
            DisabledFill: |-
                =With(
                    {
                        varImageIsCategory: LookUp(
                            staticIcons,
                            staticIconName = "Add"
                        ).staticIconIsCategory
                    },
                    If(
                        varImageIsCategory,
                        gblAppStyles.Icons.DisabledFill_Category,
                        Transparent
                    )
                )
            DisplayMode: =galCategory.DisplayMode
            Fill: |-
                =With(
                    {
                        varImageIsCategory: LookUp(
                            staticIcons,
                            staticIconName = "Add"
                        ).staticIconIsCategory
                    },
                    If(
                        varImageIsCategory,
                        gblAppStyles.Icons.Fill_Category,
                        Transparent
                    )
                )
            Height: =btnAddCategoryNav.Height
            Image: |-
                =With(
                    {
                        varImageRecord: LookUp(
                            staticIcons,
                            staticIconName = "Add"
                        ),
                        varColor: If(
                            Self.DisplayMode = DisplayMode.Disabled,
                            gblAppStyles.Icons.DisabledColor,
                            gblAppStyles.Icons.Color
                        )
                    },
                    With(
                        {
                            varImageData: Concatenate(
                                "data:image/svg+xml;utf8, ",
                                EncodeUrl(
                                    Concatenate(
                                        "<svg viewBox='",
                                        varImageRecord.staticIconViewbox,
                                        "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                        varImageRecord.staticIconPath,
                                        "' fill='#",
                                        varColor,
                                        "'/></svg>"
                                    )
                                )
                            )
                        },
                        varImageData
                    )
                )
            OnSelect: =
            PaddingBottom: =6
            PaddingLeft: =6
            PaddingRight: =6
            PaddingTop: =6
            RadiusBottomLeft: =5
            RadiusBottomRight: =5
            RadiusTopLeft: =5
            RadiusTopRight: =5
            Tooltip: ="Add category"
            Transparency: =If(Self.DisplayMode = DisplayMode.Disabled,0.75,0)
            Width: =32
            X: =gblPadding.Page
            Y: =txtSearchCategory.Y + txtSearchCategory.Height + 16
            ZIndex: =1

        txtSearchCategory As text:
            AccessibleLabel: |-
                =With(
                    {
                        varDefault: "Text input to search for issue categories",
                        varOOBTextId: "txtSearchCategory__locAccessibleLabel"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextId = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            BorderColor: =gblAppStyles.TextInput.BorderColor
            BorderThickness: =gblAppStyles.TextInput.BorderThickness
            Color: =gblAppStyles.TextInput.Color
            Default: =""
            DelayOutput: =true
            DisabledBorderColor: =gblAppStyles.TextInput.DisabledBorderColor
            DisabledColor: =gblAppStyles.TextInput.DisabledColor
            DisabledFill: =gblAppStyles.TextInput.DisabledFill
            DisplayMode: =galCategory.DisplayMode
            Fill: =gblAppStyles.TextInput.Fill
            FocusedBorderColor: =gblAppStyles.TextInput.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.TextInput.FocusedBorderThickness
            Font: ='Segoe UI'
            Height: =32
            HintText: |-
                =With(
                    {
                        varDefault: "Search categories",
                        varOOBTextId: "_translateCommon__Searchcategories"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextId = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            HoverBorderColor: =gblAppStyles.TextInput.HoverBorderColor
            HoverColor: =gblAppStyles.TextInput.HoverColor
            HoverFill: =gblAppStyles.TextInput.HoverFill
            OnChange: =
            PaddingBottom: =4
            PaddingLeft: =32
            PaddingRight: =8
            PaddingTop: =4
            PressedBorderColor: =gblAppStyles.TextInput.PressedBorderColor
            PressedColor: =gblAppStyles.TextInput.PressedColor
            PressedFill: =gblAppStyles.TextInput.PressedFill
            RadiusBottomLeft: =gblAppStyles.TextInput.RadiusBottomLeft
            RadiusBottomRight: =gblAppStyles.TextInput.RadiusBottomRight
            RadiusTopLeft: =gblAppStyles.TextInput.RadiusTopLeft
            RadiusTopRight: =gblAppStyles.TextInput.RadiusTopRight
            Size: =gblAppStyles.TextInput.Size
            TabIndex: =If(locDisplayDialog || locBlockUserInput ||locDisplayDialogDelete ||locDisplayAssignmentSelect ||locSelectIcon,-1,0)
            Width: =Parent.Width - (Self.X * 2)
            X: =gblPadding.Page
            Y: =gblPadding.Page
            ZIndex: =2

        imgSearchCategory As image:
            AccessibleLabel: |-
                =With(
                    {
                        varDefault: "Search categories",
                        varOOBTextId: "_translateCommon__Searchcategories"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextId = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            DisabledFill: |-
                =With(
                    {
                        varImageIsCategory: LookUp(
                            staticIcons,
                            staticIconName = "Search"
                        ).staticIconIsCategory
                    },
                    If(
                        varImageIsCategory,
                        gblAppStyles.Icons.DisabledFill_Category,
                        Transparent
                    )
                )
            DisplayMode: =galCategory.DisplayMode
            Fill: |-
                =With(
                    {
                        varImageIsCategory: LookUp(
                            staticIcons,
                            staticIconName = "Search"
                        ).staticIconIsCategory
                    },
                    If(
                        varImageIsCategory,
                        gblAppStyles.Icons.Fill_Category,
                        Transparent
                    )
                )
            Height: =32
            Image: |-
                =With(
                    {
                        varImageRecord: LookUp(
                            staticIcons,
                            staticIconName = "Search"
                        ),
                        varColor: If(
                            Self.DisplayMode = DisplayMode.Disabled,
                            gblAppStyles.Icons.DisabledColor,
                            gblAppStyles.Icons.Color_Gray
                        )
                    },
                    With(
                        {
                            varImageData: Concatenate(
                                "data:image/svg+xml;utf8, ",
                                EncodeUrl(
                                    Concatenate(
                                        "<svg viewBox='",
                                        varImageRecord.staticIconViewbox,
                                        "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                        varImageRecord.staticIconPath,
                                        "' fill='#",
                                        varColor,
                                        "'/></svg>"
                                    )
                                )
                            )
                        },
                        varImageData
                    )
                )
            OnSelect: =SetFocus(txtSearchCategory)
            PaddingBottom: =6
            PaddingLeft: =6
            PaddingRight: =6
            PaddingTop: =6
            RadiusBottomLeft: =5
            RadiusBottomRight: =5
            RadiusTopLeft: =5
            RadiusTopRight: =5
            Tooltip: |-
                =With(
                    {
                        varDefault: "Search categories",
                        varOOBTextId: "_translateCommon__Searchcategories"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextId = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Transparency: =If(Self.DisplayMode = DisplayMode.Disabled,0.75,0)
            Width: =32
            X: =txtSearchCategory.X
            Y: =txtSearchCategory.Y
            ZIndex: =3

        imgSortCategory As image:
            AccessibleLabel: |-
                =With(
                    {
                        varDefault: "Click to sort issue categories",
                        varOOBTextId: "imgSortCategory__locAccessibleLabel"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextId = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            DisabledFill: |-
                =With(
                    {
                        varImageIsCategory: LookUp(
                            staticIcons,
                            staticIconName = "Sort"
                        ).staticIconIsCategory
                    },
                    If(
                        varImageIsCategory,
                        gblAppStyles.Icons.DisabledFill_Category,
                        Transparent
                    )
                )
            DisplayMode: =galCategory.DisplayMode
            Fill: |-
                =With(
                    {
                        varImageIsCategory: LookUp(
                            staticIcons,
                            staticIconName = "Sort"
                        ).staticIconIsCategory
                    },
                    If(
                        varImageIsCategory,
                        gblAppStyles.Icons.Fill_Category,
                        Transparent
                    )
                )
            Height: =btnAddCategoryNav.Height
            HoverFill: =gblAppColors.OverlayLight
            Image: |-
                =With(
                    {
                        varImageRecord: LookUp(
                            staticIcons,
                            staticIconName = "Sort"
                        ),
                        varColor: If(
                            Self.DisplayMode = DisplayMode.Disabled,
                            gblAppStyles.Icons.DisabledColor,
                            gblAppStyles.Icons.Color
                        )
                    },
                    With(
                        {
                            varImageData: Concatenate(
                                "data:image/svg+xml;utf8, ",
                                EncodeUrl(
                                    Concatenate(
                                        "<svg viewBox='",
                                        varImageRecord.staticIconViewbox,
                                        "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                        varImageRecord.staticIconPath,
                                        "' fill='#",
                                        varColor,
                                        "'/></svg>"
                                    )
                                )
                            )
                        },
                        varImageData
                    )
                )
            OnSelect: |-
                =UpdateContext({locSortCampaigns: !locSortCampaigns});
                // [Screen Reader Start]
                UpdateContext(
                    {
                        locScreenReaderAnnouncedText: With(
                            {
                                varAnnouncedText: If(
                                    locSortCampaigns,
                                    "Campaigns are sorted descending",
                                    "Campaigns are sorted ascending"
                                )
                            },
                            If(
                                locScreenReaderAnnouncedText = varAnnouncedText,
                                Concatenate(
                                    varAnnouncedText,
                                    " "
                                ),
                                varAnnouncedText
                            )
                        )
                    }
                );
                // [Screen Reader End]
            PaddingBottom: =6
            PaddingLeft: =6
            PaddingRight: =6
            PaddingTop: =6
            RadiusBottomLeft: =5
            RadiusBottomRight: =5
            RadiusTopLeft: =5
            RadiusTopRight: =5
            TabIndex: =If(locDisplayDialog || locBlockUserInput ||locDisplayDialogDelete ||locDisplayAssignmentSelect ||locSelectIcon,-1,0)
            Tooltip: |-
                =With(
                    {
                        varDefault: "Click to sort",
                        varOOBTextId: "imgSortCategory__locTooltip"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextId = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Transparency: =If(Self.DisplayMode = DisplayMode.Disabled,0.75,0)
            Width: =32
            X: =Parent.Width - Self.Width - 16
            Y: =imgAddCategory.Y
            ZIndex: =4

        shpDividerIssueNav As rectangle:
            DisplayMode: =DisplayMode.View
            Fill: =gblAppStyles.Dividers.Elements
            Height: =Parent.Height
            Width: =1
            X: =Parent.Width - Self.Width
            Y: =0*0
            ZIndex: =5

        galCategory As gallery.galleryVertical:
            AccessibleLabel: |-
                =With(
                    {
                        varDefault: "Gallery of issue categories",
                        varOOBTextId: "galCategory__locAccessibleLabel"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextId = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            BorderColor: =RGBA(0, 0, 0, 0)
            DisplayMode: =If(locScreenModeViewCategory,DisplayMode.Edit,DisplayMode.Disabled)
            Height: =Parent.Height - Self.Y
            Items: |-
                =SortByColumns(
                    Search(
                        colCdsIssueCategories,
                        txtSearchCategory.Text,
                        "msft_name"
                    ),
                    "msft_name",
                    If(
                        locSortCampaigns,
                        Descending,
                        Ascending
                    )
                )
            Layout: =Layout.Vertical
            OnSelect: |
                =If(
                    ThisItem.'Issue Report Category' <> gblRecordCategory.'Issue Report Category',
                    Set(
                        gblRecordCategory,
                        LookUp(
                            'Issue Report Categories',
                            'Issue Report Categories'[@'Issue Report Category'] = ThisItem.'Issue Report Category'
                        )
                    );
                    UpdateContext({locFieldCategoryIcon: gblRecordCategory.Icon});
                    Concurrent(
                        ClearCollect(
                            colCdsIssueReports,
                            Filter(
                                'Issue Reports',
                                'Issue Reports (Views)'.'Active Issue Reports'
                            )
                        ),
                        ClearCollect(
                            colAppTemplateCounting,
                            Filter(
                                colCdsIssueTemplates,
                                colCdsIssueTemplates[@Category].'Issue Report Category' = gblRecordCategory.'Issue Report Category'
                            )
                        ),
                        ClearCollect(
                            colPlannerTasks,
                            Planner.ListTasksV3(
                                gblSettingPlannerPlanId,
                                gblSettingTeamId
                            ).value
                        )
                    );
                    With(
                        {
                            appBucketTasks: AddColumns(
                                Filter(
                                    colPlannerTasks,
                                    bucketId = gblRecordCategory.'Planner Bucket Id'
                                ),
                                "appTemplate",
                                LookUp(
                                    colCdsIssueReports,
                                    'Planner Task Id' = id,
                                    Template.'Issue Report Template'
                                )
                            )
                        },
                        ForAll(
                            colAppTemplateCounting,
                            UpdateIf(
                                colCdsIssueTemplates,
                                ThisRecord.'Issue Report Template' = colCdsIssueTemplates[@'Issue Report Template'],
                                {
                                    appIssueCount_NotStarted: CountRows(
                                        Filter(
                                            appBucketTasks,
                                            appTemplate = colCdsIssueTemplates[@msft_issuereport_templateid],
                                            percentComplete = 0
                                        )
                                    ),
                                    appIssueCount_InProgress: CountRows(
                                        Filter(
                                            appBucketTasks,
                                            appTemplate = colCdsIssueTemplates[@msft_issuereport_templateid],
                                            percentComplete > 0,
                                            percentComplete < 100
                                        )
                                    ),
                                    appIssueCount_Done: CountRows(
                                        Filter(
                                            appBucketTasks,
                                            appTemplate = colCdsIssueTemplates[@msft_issuereport_templateid],
                                            percentComplete = 100
                                        )
                                    )
                                }
                            )
                        );
                        With(
                            {
                                appPlannerOnlyTasks: Filter(
                                    appBucketTasks,
                                    IsBlank(appTemplate)
                                )
                            },
                            UpdateContext(
                                {
                                    locHasPlannerOnlyTasks: CountRows(appPlannerOnlyTasks) > 0,
                                    locHasPlannerOnlyTasksTitle: "(Non-Template Tasks) for " & gblRecordCategory.Name
                                }
                            );
                            UpdateContext(
                                {
                                    locRecordPlannerOnlyTasks: If(
                                        locHasPlannerOnlyTasks,
                                        {
                                            msft_name: locHasPlannerOnlyTasksTitle,
                                            msft_IssueReport_CategoryId: gblRecordCategory,
                                            appIssueCount_NotStarted: CountRows(
                                                Filter(
                                                    appPlannerOnlyTasks,
                                                    percentComplete = 0
                                                )
                                            ),
                                            appIssueCount_InProgress: CountRows(
                                                Filter(
                                                    appPlannerOnlyTasks,
                                                    percentComplete > 0,
                                                    percentComplete < 100
                                                )
                                            ),
                                            appIssueCount_Done: CountRows(
                                                Filter(
                                                    appPlannerOnlyTasks,
                                                    percentComplete = 100
                                                )
                                            ),
                                            appStatsOnlyRecord: true
                                        },
                                        Blank()
                                    )
                                }
                            );
                            RemoveIf(
                                colCdsIssueTemplates,
                                colCdsIssueTemplates[@Category].'Issue Report Category' = gblRecordCategory.'Issue Report Category' And msft_name = locHasPlannerOnlyTasksTitle
                            );
                            If(
                                locHasPlannerOnlyTasks,
                                Collect(
                                    colCdsIssueTemplates,
                                    locRecordPlannerOnlyTasks
                                )
                            );
                        )
                    )
                );
                UpdateContext(
                    {
                        locScreenModeCreateCategory: false,
                        locScreenModeCreateTemplate: false,
                        locScreenModeEditCategory: false,
                        locScreenModeEditTemplate: false,
                        locScreenModeViewCategory: true,
                        locScreenModeViewTemplate: false
                    }
                );
            TemplatePadding: =0
            TemplateSize: =60
            Width: =Parent.Width
            X: =0 * 0
            Y: =imgAddCategory.Y + imgAddCategory.Height + 16
            ZIndex: =6

            lblGalCategory_Selected As label:
                DisabledFill: |-
                    =If(
                        ThisItem.'Issue Report Category' = gblRecordCategory.'Issue Report Category',
                        gblAppStyles.Gallery.SelectedItemDisabled,
                        Transparent
                    )
                Fill: |-
                    =If(
                        ThisItem.'Issue Report Category' = gblRecordCategory.'Issue Report Category',
                        gblAppStyles.Gallery.SelectedItem,
                        Transparent
                    )
                Font: =Font.'Segoe UI'
                Height: =Parent.TemplateHeight
                OnSelect: =Select(Parent)
                Text: =Blank()
                Width: =Parent.TemplateWidth
                Wrap: =false
                X: =Parent.TemplateWidth * 0
                Y: =Parent.TemplateHeight * 0
                ZIndex: =1

            imgGalCategory_Icon As image:
                Fill: =gblAppStyles.Gallery.SelectedItem
                Height: =32
                Image: =ThisItem.Icon
                OnSelect: =Select(Parent)
                RadiusBottomLeft: =4
                RadiusBottomRight: =4
                RadiusTopLeft: =4
                RadiusTopRight: =4
                Tooltip: =ThisItem.Name
                Width: =32
                X: =16
                Y: =(Parent.TemplateHeight - Self.Height) / 2
                ZIndex: =2

            lblGalCategory_Name As label:
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                DisabledColor: |
                    =gblAppStyles.Label.DisabledColor
                DisabledFill: =gblAppStyles.Label.DisabledFill
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: |-
                    =If(
                        ThisItem.'Issue Report Category' = gblRecordCategory.'Issue Report Category',
                        FontWeight.Semibold,
                        FontWeight.Normal
                    )
                Height: =Parent.TemplateHeight * 0.55
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                OnSelect: =Select(Parent)
                PaddingBottom: =4
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Size: =gblAppStyles.Label.Size.Medium
                Text: =ThisItem.Name
                VerticalAlign: =VerticalAlign.Bottom
                Width: =Parent.TemplateWidth - Self.X - If(imgGalCategory_Info.Visible Or imgGalCategory_Warning.Visible,36,0)
                Wrap: =false
                X: =imgGalCategory_Icon.X + imgGalCategory_Icon.Width + 16
                Y: =Parent.TemplateHeight * 0
                ZIndex: =3

            lblGalCategory_TemplateCount As label:
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledColor: |
                    =gblAppStyles.Label.DisabledColor
                DisabledFill: =gblAppStyles.Label.DisabledFill
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: |-
                    =If(
                        ThisItem.'Issue Report Category' = gblRecordCategory.'Issue Report Category',
                        FontWeight.Semibold,
                        FontWeight.Normal
                    )
                Height: =lblGalCategory_Name.Height
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                OnSelect: =Select(Parent)
                PaddingTop: =0
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Size: =gblAppStyles.Label.Size.Small
                Text: |-
                    =With(
                        {
                            varRowCount: CountRows(
                                Filter(
                                    colCdsIssueTemplates,
                                    ThisItem.'Issue Report Category' = colCdsIssueTemplates[@Category].'Issue Report Category',
                                    !appStatsOnlyRecord
                                )
                            )
                        },
                        Concatenate(
                            Text(varRowCount),
                            If(
                                varRowCount = 1,
                                " issue template",
                                " issue templates"
                            )
                        )
                    )
                VerticalAlign: =VerticalAlign.Top
                Width: =lblGalCategory_Name.Width
                Wrap: =false
                X: =lblGalCategory_Name.X
                Y: =lblGalCategory_Name.Y + lblGalCategory_Name.Height
                ZIndex: =4

            imgGalCategory_Warning As image:
                DisabledFill: |-
                    =With(
                        {
                            varImageIsCategory: LookUp(
                                staticIcons,
                                staticIconName = "Warning"
                            ).staticIconIsCategory
                        },
                        If(
                            varImageIsCategory,
                            gblAppStyles.Icons.DisabledFill_Category,
                            Transparent
                        )
                    )
                Fill: |-
                    =With(
                        {
                            varImageIsCategory: LookUp(
                                staticIcons,
                                staticIconName = "Warning"
                            ).staticIconIsCategory
                        },
                        If(
                            varImageIsCategory,
                            gblAppStyles.Icons.Fill_Category,
                            Transparent
                        )
                    )
                Height: =20
                Image: |-
                    =With(
                        {
                            varImageRecord: LookUp(
                                staticIcons,
                                staticIconName = "Warning"
                            ),
                            varColor: If(
                                Self.DisplayMode = DisplayMode.Disabled,
                                gblAppStyles.Icons.DisabledColor,
                                gblAppStyles.Icons.Color
                            )
                        },
                        With(
                            {
                                varImageData: Concatenate(
                                    "data:image/svg+xml;utf8, ",
                                    EncodeUrl(
                                        Concatenate(
                                            "<svg viewBox='",
                                            varImageRecord.staticIconViewbox,
                                            "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                            varImageRecord.staticIconPath,
                                            "' fill='#",
                                            varColor,
                                            "'/></svg>"
                                        )
                                    )
                                )
                            },
                            varImageData
                        )
                    )
                OnSelect: =Select(Parent)
                RadiusBottomLeft: =5
                RadiusBottomRight: =5
                RadiusTopLeft: =5
                RadiusTopRight: =5
                Tooltip: ="This category is missing from Tasks"
                Visible: =Not(ThisItem.'Planner Bucket Id' in colPlannerBuckets.id)
                Width: =20
                X: =Parent.TemplateWidth -Self.Width -gblPadding.Page
                Y: =(Parent.TemplateHeight - Self.Height) / 2
                ZIndex: =5

            imgGalCategory_Info As image:
                DisabledFill: |-
                    =With(
                        {
                            varImageIsCategory: LookUp(
                                staticIcons,
                                staticIconName = "Info"
                            ).staticIconIsCategory
                        },
                        If(
                            varImageIsCategory,
                            gblAppStyles.Icons.DisabledFill_Category,
                            Transparent
                        )
                    )
                Fill: |-
                    =With(
                        {
                            varImageIsCategory: LookUp(
                                staticIcons,
                                staticIconName = "Info"
                            ).staticIconIsCategory
                        },
                        If(
                            varImageIsCategory,
                            gblAppStyles.Icons.Fill_Category,
                            Transparent
                        )
                    )
                Height: =20
                Image: |-
                    =With(
                        {
                            varImageRecord: LookUp(
                                staticIcons,
                                staticIconName = "Info"
                            ),
                            varColor: If(
                                Self.DisplayMode = DisplayMode.Disabled,
                                gblAppStyles.Icons.DisabledColor,
                                gblAppStyles.Icons.Color
                            )
                        },
                        With(
                            {
                                varImageData: Concatenate(
                                    "data:image/svg+xml;utf8, ",
                                    EncodeUrl(
                                        Concatenate(
                                            "<svg viewBox='",
                                            varImageRecord.staticIconViewbox,
                                            "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                            varImageRecord.staticIconPath,
                                            "' fill='#",
                                            varColor,
                                            "'/></svg>"
                                        )
                                    )
                                )
                            },
                            varImageData
                        )
                    )
                OnSelect: =Select(Parent)
                RadiusBottomLeft: =5
                RadiusBottomRight: =5
                RadiusTopLeft: =5
                RadiusTopRight: =5
                Tooltip: ="This category has been renamed in Tasks"
                Visible: |-
                    =(LookUp(
                        colPlannerBuckets,
                        ThisItem.'Planner Bucket Id' = id
                    ).name <> ThisItem.Name) And ThisItem.'Planner Bucket Id' in colPlannerBuckets.id
                Width: =20
                X: =Parent.TemplateWidth -Self.Width -gblPadding.Page
                Y: =(Parent.TemplateHeight - Self.Height) / 2
                ZIndex: =6

            btnCategoryNav_Select As button:
                BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
                BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
                Color: =gblAppStyles.ButtonTransparent.Color
                DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                DisabledColor: =gblAppStyles.ButtonTransparent.DisabledColor
                DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
                Fill: =gblAppStyles.ButtonTransparent.Fill
                FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                Height: =Parent.TemplateHeight
                HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
                HoverColor: =gblAppStyles.ButtonTransparent.HoverColor
                HoverFill: =gblAppStyles.Gallery.HoverFill
                OnSelect: =Select(Parent)
                PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
                PressedColor: =gblAppStyles.ButtonTransparent.PressedColor
                PressedFill: =gblAppStyles.Gallery.PressedFill
                RadiusBottomLeft: =gblAppStyles.ButtonTransparent.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.ButtonTransparent.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.ButtonTransparent.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.ButtonTransparent.RadiusTopRight
                Size: =gblAppStyles.ButtonTransparent.Size
                TabIndex: =If(locDisplayDialog || locBlockUserInput ||locDisplayDialogDelete ||locDisplayAssignmentSelect ||locSelectIcon,-1,0)
                Text: =""
                Tooltip: =ThisItem.Name
                Width: =Parent.TemplateWidth
                ZIndex: =7

        btnAddCategoryNav As button:
            Align: =Align.Left
            BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
            BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
            Color: =gblAppStyles.ButtonTransparent.Color
            DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
            DisabledColor: =gblAppStyles.ButtonTransparent.DisabledColor
            DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
            DisplayMode: =galCategory.DisplayMode
            Fill: =gblAppStyles.ButtonTransparent.Fill
            FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Normal
            HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
            HoverColor: =gblAppStyles.ButtonTransparent.HoverColor
            HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
            OnSelect: |
                =UpdateContext(
                    {
                        locScreenModeCreateCategory: true,
                        locScreenModeCreateTemplate: false,
                        locScreenModeEditCategory: false,
                        locScreenModeEditTemplate: false,
                        locScreenModeViewCategory: false,
                        locScreenModeViewTemplate: false,
                        locFieldCategoryIcon: Blank(),
                        locRecordCurrentCategory: gblRecordCategory
                    }
                );
                Set(
                    gblRecordCategory,
                    Blank()
                );
            PaddingLeft: =32
            PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
            PressedColor: =gblAppStyles.ButtonTransparent.PressedColor
            PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
            RadiusBottomLeft: =gblAppStyles.ButtonTransparent.RadiusBottomLeft
            RadiusBottomRight: =gblAppStyles.ButtonTransparent.RadiusBottomRight
            RadiusTopLeft: =gblAppStyles.ButtonTransparent.RadiusTopLeft
            RadiusTopRight: =gblAppStyles.ButtonTransparent.RadiusTopRight
            Size: =gblAppStyles.ButtonTransparent.Size
            TabIndex: =If(locDisplayDialog || locBlockUserInput ||locDisplayDialogDelete ||locDisplayAssignmentSelect ||locSelectIcon,-1,0)
            Text: |-
                =With(
                    {
                        varDefault: "Add category",
                        varOOBTextId: "_translateCommon__Addcategory"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextId = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Tooltip: =Self.Text
            Width: =180
            X: =gblPadding.Page
            Y: =txtSearchCategory.Y + txtSearchCategory.Height + 16
            ZIndex: =7

    conDialog As groupContainer:
        Fill: |-
            =If(
                gblThemeDark Or gblThemeHiCo,
                gblAppColors.OverlayLight,
                gblAppColors.OverlayDark
            )
        Height: =Parent.Height
        Visible: =locDisplayDialog
        Width: =Parent.Width
        X: =0*0
        Y: =0*0
        ZIndex: =8

        lblClickToCancel As label:
            Color: =Transparent
            FocusedBorderThickness: =0.5
            Height: =Parent.Height
            OnSelect: |-
                =UpdateContext(
                    {
                        locDisplayDialog: false,
                        locDisplayDialogDelete: false,
                        locDisplayAssignmentSelect: false,
                        locSelectIcon: false,
                        locFieldCategoryIcon: gblRecordCategory.Icon
                    }
                );
                Reset(txtAssignUser_Search);
                Reset(chkConfirmDelete_Confirm);
            Text: |-
                =With(
                    {
                        varDefault: "Click to cancel",
                        varOOBTextId: "_translateCommon__Cancel"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextId = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Tooltip: =Self.Text
            Visible: =locDisplayDialog || locBlockUserInput ||locDisplayDialogDelete ||locDisplayAssignmentSelect ||locSelectIcon
            Width: =Parent.Width
            X: =0*0
            Y: =0*0
            ZIndex: =1

        conDialogIcon As groupContainer:
            Fill: =gblAppStyles.Background.Fill
            Height: =Parent.Height * .9
            Visible: =locSelectIcon
            Width: =300
            X: =(Parent.Width - Self.Width) / 2
            Y: =(Parent.Height - Self.Height) / 2
            ZIndex: =2

            galIcons As gallery.galleryVertical:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Gallery of icons, which can be associated with categories",
                            varOOBTextId: "galIcons__locAccessibleLabel"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                BorderColor: =RGBA(2, 0, 110, 0)
                Fill: =Transparent
                Height: =Parent.Height- Self.Y
                Items: =colIcons
                Layout: =Layout.Vertical
                OnSelect: |-
                    =UpdateContext({locFieldCategoryIcon: ThisItem.Value});
                    UpdateContext(
                        {
                            locDisplayDialog: false,
                            locDisplayAssignmentSelect: false,
                            locSelectIcon: false
                        }
                    );
                    UpdateContext(
                        {
                            locScreenReaderAnnouncedText: Concatenate(
                                "Selected icon is ",
                                galIcons.Selected.lblIcon.Text
                            )
                        }
                    )
                TemplatePadding: =gblPadding.Page
                TemplateSize: =64
                Width: =Parent.Width
                WrapCount: =3
                X: =0*0
                Y: =lblDialogIcon_Instructions.Y + lblDialogIcon_Instructions.Height
                ZIndex: =1

                imgIcon As image:
                    AccessibleLabel: =Self.Tooltip
                    Fill: =Transparent
                    Height: =64
                    Image: =ThisItem.Value
                    OnSelect: =Select(Parent)
                    RadiusBottomLeft: =4
                    RadiusBottomRight: =4
                    RadiusTopLeft: =4
                    RadiusTopRight: =4
                    TabIndex: =0
                    Tooltip: =Right(ThisItem.Value,Len(ThisItem.Value) - Find("_Category_",ThisItem.Value) - 9)
                    Width: =64
                    X: =(Parent.TemplateWidth - Self.Width) / 2
                    Y: =(Parent.TemplateHeight - Self.Height) / 2
                    ZIndex: =1

                lblIcon As label:
                    Align: =Align.Center
                    BorderColor: =gblAppStyles.Label.BorderColor
                    BorderThickness: =gblAppStyles.Label.BorderThickness
                    Color: =gblAppStyles.Label.Color
                    DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                    DisabledColor: =gblAppStyles.Label.DisabledColor
                    DisabledFill: =gblAppStyles.Label.DisabledFill
                    DisplayMode: =DisplayMode.View
                    Fill: =gblAppStyles.Label.Fill
                    FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                    FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                    Font: =Font.'Segoe UI'
                    Height: =16
                    HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                    HoverColor: =gblAppStyles.Label.HoverColor
                    HoverFill: =gblAppStyles.Label.HoverFill
                    OnSelect: =Select(Parent)
                    PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                    PressedColor: =gblAppStyles.Label.PressedColor
                    PressedFill: =gblAppStyles.Label.PressedFill
                    Size: =gblAppStyles.Label.Size.Small
                    Text: =Right(ThisItem.Value,Len(ThisItem.Value) - Find("_Category_",ThisItem.Value) - 9)
                    Visible: =false
                    Width: =Parent.TemplateWidth
                    Wrap: =false
                    X: =0*0
                    Y: =imgIcon.Height + imgIcon.Y
                    ZIndex: =2

            lblDialogIcon_Instructions As label:
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                DisabledColor: =gblAppStyles.Label.DisabledColor
                DisabledFill: =gblAppStyles.Label.DisabledFill
                DisplayMode: =DisplayMode.View
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                Height: =48
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                PaddingLeft: =gblPadding.Page
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Size: =gblAppStyles.Label.Size.Large
                Text: |-
                    =With(
                        {
                            varDefault: "Pick an icon",
                            varOOBTextId: "lblDialogIcon_Instructions__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Width: =Parent.Width
                X: =0*0
                Y: =0*0
                ZIndex: =2

            icnDialogIcon_Cancel As icon.Cancel:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Click to cancel the selection of a category icon",
                            varOOBTextId: "icnDialogIcon_Cancel__locAccessibleLabel"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                BorderColor: =RGBA(2, 0, 110, 1)
                Color: =gblAppStyles.Label.Color
                Height: =lblDialogIcon_Instructions.Height
                Icon: =Icon.Cancel
                OnSelect: |
                    =UpdateContext(
                        {
                            locDisplayDialog: false,
                            locDisplayAssignmentSelect: false,
                            locSelectIcon: false,
                            locFieldCategoryIcon: gblRecordCategory.Icon
                        }
                    );
                PaddingBottom: =16
                PaddingLeft: =16
                PaddingRight: =16
                PaddingTop: =16
                TabIndex: =0
                Tooltip: =Self.AccessibleLabel
                Width: =Self.Height
                X: =lblDialogIcon_Instructions.Width - Self.Width
                Y: =lblDialogIcon_Instructions.Y
                ZIndex: =3

        conAssignUser As groupContainer:
            Fill: =gblAppStyles.Background.Fill
            Height: =600
            Visible: =locDisplayAssignmentSelect
            X: =(Parent.Width - Self.Width) / 2
            Y: =(Parent.Height - Self.Height) / 2
            ZIndex: =3

            lblAssignIssues_ZeroState_NoPeopleInstructions As label:
                Align: =Align.Center
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                DisabledColor: =gblAppStyles.Label.DisabledColor
                DisabledFill: =gblAppStyles.Label.DisabledFill
                DisplayMode: =DisplayMode.View
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                Height: =48
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                PaddingLeft: =20
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Size: =gblAppStyles.Label.Size.Medium
                Text: |-
                    =With(
                        {
                            varDefault: "Try a different name.",
                            varOOBTextId: "lblAssignIssues_ZeroState_NoPeopleInstructions__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Visible: =!IsBlank(txtAssignUser_Search.Text)
                Width: =imgAssignIssues_ZeroState_Search.Width
                X: =imgAssignIssues_ZeroState_Search.X
                Y: =lblAssignIssues_ZeroState_Search.Y + lblAssignIssues_ZeroState_Search.Height
                ZIndex: =1

            imgAssignIssues_ZeroState_NoPeople As image:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "No results. Try a different name.",
                            varOOBTextId: "imgAssignIssues_ZeroState_NoPeople__locTooltip"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                DisplayMode: =DisplayMode.View
                Height: =240
                Image: =Image_ZeroState_People_NoResults
                Tooltip: =Self.AccessibleLabel
                Visible: =!IsBlank(txtAssignUser_Search.Text)
                Width: =Parent.Width - (2*Self.X)
                X: =txtAssignUser_Search.X
                Y: =txtAssignUser_Search.Y + txtAssignUser_Search.Height + 64
                ZIndex: =2

            lblAssignIssues_ZeroState_NoPeople As label:
                Align: =Align.Center
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                DisabledColor: =gblAppStyles.Label.DisabledColor
                DisabledFill: =gblAppStyles.Label.DisabledFill
                DisplayMode: =DisplayMode.View
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                Height: =48
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                PaddingLeft: =20
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Size: =gblAppStyles.Label.Size.Large
                Text: |-
                    =With(
                        {
                            varDefault: "No results",
                            varOOBTextId: "lblAssignIssues_ZeroState_NoPeople__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Visible: =!IsBlank(txtAssignUser_Search.Text)
                Width: =imgAssignIssues_ZeroState_NoPeople.Width
                X: =imgAssignIssues_ZeroState_NoPeople.X
                Y: =imgAssignIssues_ZeroState_NoPeople.Y + imgAssignIssues_ZeroState_NoPeople.Height + 16
                ZIndex: =3

            lblAssignIssues_ZeroState_SearchInstructions As label:
                Align: =Align.Center
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                DisabledColor: =gblAppStyles.Label.DisabledColor
                DisabledFill: =gblAppStyles.Label.DisabledFill
                DisplayMode: =DisplayMode.View
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                Height: =48
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                PaddingLeft: =20
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Size: =gblAppStyles.Label.Size.Medium
                Text: |-
                    =With(
                        {
                            varDefault: "Type in the search box above.",
                            varOOBTextId: "lblAssignIssues_ZeroState_SearchInstructions__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Visible: =IsBlank(txtAssignUser_Search.Text)
                Width: =imgAssignIssues_ZeroState_Search.Width
                X: =imgAssignIssues_ZeroState_Search.X
                Y: =lblAssignIssues_ZeroState_Search.Y + lblAssignIssues_ZeroState_Search.Height
                ZIndex: =4

            imgAssignIssues_ZeroState_Search As image:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Search for users",
                            varOOBTextId: "imgAssignIssues_ZeroState_Search__locTooltip"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                DisplayMode: =DisplayMode.View
                Height: =240
                Image: =Image_ZeroState_People
                Tooltip: =lblAssignIssues_ZeroState_Search.Text
                Visible: =IsBlank(txtAssignUser_Search.Text)
                Width: =Parent.Width - (2*Self.X)
                X: =txtAssignUser_Search.X
                Y: =txtAssignUser_Search.Y + txtAssignUser_Search.Height + 64
                ZIndex: =5

            lblAssignIssues_ZeroState_Search As label:
                Align: =Align.Center
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                DisabledColor: =gblAppStyles.Label.DisabledColor
                DisabledFill: =gblAppStyles.Label.DisabledFill
                DisplayMode: =DisplayMode.View
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                Height: =48
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                PaddingLeft: =20
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Size: =gblAppStyles.Label.Size.Large
                Text: |-
                    =With(
                        {
                            varDefault: "Search for a user",
                            varOOBTextId: "_translateCommon__Searchforauser"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Visible: =IsBlank(txtAssignUser_Search.Text)
                Width: =imgAssignIssues_ZeroState_Search.Width
                X: =imgAssignIssues_ZeroState_Search.X
                Y: =imgAssignIssues_ZeroState_Search.Y + imgAssignIssues_ZeroState_Search.Height + 16
                ZIndex: =6

            galAssignUser As gallery.galleryVertical:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Gallery of users to be assigned to this category",
                            varOOBTextId: "galAssignUser__locAccessibleLabel"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                BorderColor: =RGBA(0, 0, 0, 0)
                Fill: =gblAppStyles.Background.Fill
                Height: =Parent.Height - Self.Y
                Items: |-
                    =If(
                        IsBlank(txtAssignUser_Search.Text),
                        Blank(),
                        Filter(
                            Office365Users.SearchUser({searchTerm: txtAssignUser_Search.Text}),
                            /*If(
                                locSelectPrimaryContact,
                                true,
                                Not(UserPrincipalName in colCdsIssueAssignments.appEmailAddress)
                            ),*/
                            AccountEnabled
                        )
                    )
                Layout: =Layout.Vertical
                OnSelect: |
                    =UpdateContext({locBlockUserInput: true});
                    UpdateContext({locUserPrincipalName: ThisItem.UserPrincipalName});
                    If(
                        Not(locUserPrincipalName in colUserProfiles.appRef),
                        With(
                            {varProfile: Office365Users.UserProfileV2(locUserPrincipalName)},
                            Collect(
                                colUserProfiles,
                                {
                                    appRef: varProfile.id,
                                    appEmail: locUserPrincipalName,
                                    appImg: Office365Users.UserPhotoV2(locUserPrincipalName),
                                    appDisplayName: varProfile.displayName
                                }
                            )
                        )
                    );
                    If(
                        locSelectPrimaryContact,
                        UpdateContext({locFieldTemplatePrimaryContact: locUserPrincipalName}),
                        Collect(
                            colCdsIssueAssignments,
                            {appEmailAddress: locUserPrincipalName}
                        );
                        
                    );
                    UpdateContext(
                        {
                            locDisplayDialog: false,
                            locDisplayAssignmentSelect: false
                        }
                    );
                    UpdateContext({locBlockUserInput: false});
                    Reset(txtAssignUser_Search);
                TemplateSize: =48
                Visible: =!IsEmpty(Self.AllItems)
                Width: =txtAssignUser_Search.Width
                X: =txtAssignUser_Search.X
                Y: =txtAssignUser_Search.Y + txtAssignUser_Search.Height + gblPadding.Page
                ZIndex: =7

                lblAssignUser_JobTitle As label:
                    BorderColor: =gblAppStyles.Label.BorderColor
                    BorderThickness: =gblAppStyles.Label.BorderThickness
                    Color: =gblAppStyles.Label.Color
                    DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                    DisabledColor: =gblAppStyles.Label.DisabledColor
                    DisabledFill: =gblAppStyles.Label.DisabledFill
                    DisplayMode: =DisplayMode.View
                    Fill: =gblAppStyles.Label.Fill
                    FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                    FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                    Font: =Font.'Segoe UI'
                    Height: =Parent.TemplateHeight - Self.Y
                    HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                    HoverColor: =gblAppStyles.Label.HoverColor
                    HoverFill: =gblAppStyles.Label.HoverFill
                    OnSelect: =Select(Parent)
                    PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                    PressedColor: =gblAppStyles.Label.PressedColor
                    PressedFill: =gblAppStyles.Label.PressedFill
                    Size: =gblAppStyles.Label.Size.Small
                    Text: =ThisItem.JobTitle
                    Width: =Parent.TemplateWidth - Self.X
                    Wrap: =false
                    X: =(2*btnAssignUser_Initials.X) + btnAssignUser_Initials.Width
                    Y: =lblAssignUser_DisplayName.Height
                    ZIndex: =1

                lblAssignUser_DisplayName As label:
                    BorderThickness: =gblAppStyles.Label.BorderThickness
                    Color: =gblAppStyles.Label.Color
                    DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                    DisabledColor: =gblAppStyles.Label.DisabledColor
                    DisabledFill: =gblAppStyles.Label.DisabledFill
                    DisplayMode: =DisplayMode.View
                    Fill: =gblAppStyles.Label.Fill
                    FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                    FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                    Font: =Font.'Segoe UI'
                    Height: =Parent.TemplateHeight * .6
                    HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                    HoverColor: =gblAppStyles.Label.HoverColor
                    HoverFill: =gblAppStyles.Label.HoverFill
                    OnSelect: =Select(Parent)
                    PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                    PressedColor: =gblAppStyles.Label.PressedColor
                    PressedFill: =gblAppStyles.Label.PressedFill
                    Size: =gblAppStyles.Label.Size.Medium
                    Text: =ThisItem.DisplayName
                    Width: =Parent.TemplateWidth - Self.X
                    Wrap: =false
                    X: =(2*btnAssignUser_Initials.X) + btnAssignUser_Initials.Width
                    Y: =0*0
                    ZIndex: =2

                shpAssignUser_Divider As rectangle:
                    DisplayMode: =DisplayMode.View
                    Fill: =gblAppStyles.Dividers.Background
                    Height: =0.5
                    OnSelect: =Select(Parent)
                    Width: =Parent.TemplateWidth -Self.X - gblPadding.Page
                    X: =lblAssignUser_DisplayName.X
                    Y: =Parent.TemplateHeight - Self.Height
                    ZIndex: =3

                btnAssignUser_Initials As button:
                    BorderThickness: =0
                    DisabledBorderColor: =Transparent
                    DisabledFill: =Transparent
                    DisplayMode: =DisplayMode.View
                    Fill: =gblAppStyles.ButtonPrimary.Fill
                    Font: =Font.'Segoe UI'
                    Height: =36
                    OnSelect: =
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    RadiusBottomLeft: =36
                    RadiusBottomRight: =36
                    RadiusTopLeft: =36
                    RadiusTopRight: =36
                    Size: =11
                    TabIndex: =-1
                    Text: =Left(ThisItem.GivenName,1) & Left(ThisItem.Surname,1)
                    Width: =36
                    X: =Self.Y
                    Y: =(Parent.TemplateHeight -Self.Height) / 2
                    ZIndex: =4

                btnAssignUser_Select As button:
                    BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
                    BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
                    Color: =gblAppStyles.ButtonTransparent.Color
                    DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                    DisabledColor: =gblAppStyles.ButtonTransparent.DisabledColor
                    DisabledFill: =gblAppColors.OverlayLight
                    Fill: =gblAppStyles.ButtonTransparent.Fill
                    FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
                    FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
                    Height: =Parent.TemplateHeight
                    HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
                    HoverColor: =gblAppStyles.ButtonTransparent.HoverColor
                    HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
                    OnSelect: =Select(Parent)
                    PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
                    PressedColor: =gblAppStyles.ButtonTransparent.PressedColor
                    PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
                    RadiusBottomLeft: =gblAppStyles.ButtonTransparent.RadiusBottomLeft
                    RadiusBottomRight: =gblAppStyles.ButtonTransparent.RadiusBottomRight
                    RadiusTopLeft: =gblAppStyles.ButtonTransparent.RadiusTopLeft
                    RadiusTopRight: =gblAppStyles.ButtonTransparent.RadiusTopRight
                    Size: =gblAppStyles.ButtonTransparent.Size
                    Text: =""
                    Width: =Parent.TemplateWidth
                    X: =0*0
                    Y: =0*0
                    ZIndex: =5

            txtAssignUser_Search As text:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Text input to search for a user, to assign to this category",
                            varOOBTextId: "txtAssignUser_Search__locAccessibleLabel"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                BorderColor: =gblAppStyles.TextInput.BorderColor
                BorderThickness: =gblAppStyles.TextInput.BorderThickness
                Color: =gblAppStyles.TextInput.Color
                Default: =
                DelayOutput: =true
                DisabledBorderColor: =gblAppStyles.TextInput.DisabledBorderColor
                DisabledColor: =gblAppStyles.TextInput.DisabledColor
                DisabledFill: =gblAppStyles.TextInput.DisabledFill
                Fill: =gblAppStyles.TextInput.Fill
                FocusedBorderColor: =gblAppStyles.TextInput.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.TextInput.FocusedBorderThickness
                Font: ='Segoe UI'
                Height: =48
                HintText: |-
                    =With(
                        {
                            varDefault: "Search for a user",
                            varOOBTextId: "_translateCommon__Searchforauser"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                HoverBorderColor: =gblAppStyles.TextInput.HoverBorderColor
                HoverColor: =gblAppStyles.TextInput.HoverColor
                HoverFill: =gblAppStyles.TextInput.HoverFill
                OnChange: =
                PaddingBottom: =4
                PaddingLeft: =8
                PaddingRight: =8
                PaddingTop: =4
                PressedBorderColor: =gblAppStyles.TextInput.PressedBorderColor
                PressedColor: =gblAppStyles.TextInput.PressedColor
                PressedFill: =gblAppStyles.TextInput.PressedFill
                RadiusBottomLeft: =gblAppStyles.TextInput.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.TextInput.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.TextInput.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.TextInput.RadiusTopRight
                Size: =gblAppStyles.TextInput.Size
                Width: =Parent.Width - (2 * Self.X)
                X: =gblPadding.Page
                Y: =gblPadding.Page * 3
                ZIndex: =8

            icnAssignUser_Cancel As icon.Cancel:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Click to cancel the assignment of a user",
                            varOOBTextId: "icnAssignUser_Cancel__locAccessibleLabel"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Color: =gblAppStyles.Label.Color
                Height: =44
                Icon: =Icon.Cancel
                OnSelect: |
                    =UpdateContext(
                        {
                            locDisplayDialog: false,
                            locDisplayAssignmentSelect: false,
                            locSelectIcon: false
                        }
                    );
                    Reset(txtAssignUser_Search);
                PaddingBottom: =10
                PaddingLeft: =10
                PaddingRight: =10
                PaddingTop: =10
                TabIndex: =0
                Tooltip: =Self.AccessibleLabel
                Width: =Self.Height
                X: =Parent.Width - Self.Width - 8
                Y: =8*1
                ZIndex: =9

            lblAssignUser_Instructions As label:
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                DisabledColor: =gblAppStyles.Label.DisabledColor
                DisabledFill: =gblAppStyles.Label.DisabledFill
                DisplayMode: =DisplayMode.View
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                Height: =icnAssignUser_Cancel.Height
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                PaddingLeft: =20
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Size: =gblAppStyles.Label.Size.Large
                Text: |-
                    =With(
                        {
                            varDefault: If(
                                locSelectPrimaryContact,
                                "Select a primary contact",
                                "Assign issues to"
                            ),
                            varOOBTextId: If(
                                locSelectPrimaryContact,
                                "lblAssignUser_Instructions_PrimaryContact__locText",
                                "lblAssignUser_Instructions_Assignments__locText"
                            )
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Width: =icnAssignUser_Cancel.X - Self.X
                X: =0*0
                Y: =icnAssignUser_Cancel.Y
                ZIndex: =10

        conConfirmDelete As groupContainer:
            Fill: =gblAppStyles.Background.Fill
            Height: =300
            Visible: =locDisplayDialogDelete
            X: =(Parent.Width - Self.Width)/2
            Y: =(Parent.Height - Self.Height)/2
            ZIndex: =4

            btnConfirmDelete_Confirm As button:
                BorderColor: =gblAppStyles.ButtonPrimary.BorderColor
                BorderThickness: =gblAppStyles.ButtonPrimary.BorderThickness
                Color: =gblAppStyles.ButtonPrimary.Color
                DisabledBorderColor: =gblAppStyles.ButtonPrimary.DisabledBorderColor
                DisabledColor: =gblAppStyles.ButtonPrimary.DisabledColor
                DisabledFill: =gblAppStyles.ButtonPrimary.DisabledFill
                DisplayMode: |-
                    =If(
                        chkConfirmDelete_Confirm.Value,
                        DisplayMode.Edit,
                        DisplayMode.Disabled
                    )
                Fill: =gblAppStyles.ButtonPrimary.Fill
                FocusedBorderColor: =gblAppStyles.ButtonPrimary.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.ButtonPrimary.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                Height: =32
                HoverBorderColor: =gblAppStyles.ButtonPrimary.HoverBorderColor
                HoverColor: =gblAppStyles.ButtonPrimary.HoverColor
                HoverFill: =gblAppStyles.ButtonPrimary.HoverFill
                OnSelect: |-
                    =UpdateContext({locBlockUserInput:true});
                    // Delete Category
                    If(
                        locScreenModeEditCategory,
                            // Delete CDS
                        RemoveIf(
                            'Issue Report Categories',
                            'Issue Report Category' = gblRecordCategory.'Issue Report Category'
                        );
                        // Delete Locally
                    RemoveIf(
                            colCdsIssueCategories,
                            'Issue Report Category' = gblRecordCategory.'Issue Report Category'
                        );
                        // Delete Local Templates
                    RemoveIf(
                            colCdsIssueTemplates,
                            Category.'Issue Report Category' = gblRecordCategory.'Issue Report Category'
                        );
                        // Reset Category
                        Set(gblRecordCategory,Blank());
                        Set(gblRecordCategory,First(galCategory.AllItems));
                        // Navigate
                    UpdateContext(
                            {
                                locScreenModeCreateCategory: IsBlank(gblRecordCategory),
                                locScreenModeCreateTemplate: false,
                                locScreenModeEditCategory: false,
                                locScreenModeEditTemplate: false,
                                locScreenModeViewCategory: !IsBlank(gblRecordCategory),
                                locScreenModeViewTemplate: false,
                                locDisplayDialog: false,
                                locDisplayDialogDelete: false
                            }
                        );
                        Reset(chkConfirmDelete_Confirm)
                    );
                    // Delete Template
                    If(
                        locScreenModeEditTemplate,
                        // Delete CDS
                        RemoveIf(
                            'Issue Report Templates',
                            'Issue Report Template' = gblRecordTemplate.'Issue Report Template'
                        );
                        // Delete Locally
                    RemoveIf(
                            colCdsIssueTemplates,
                            'Issue Report Template' = gblRecordTemplate.'Issue Report Template'
                        );
                        UpdateContext(
                            {
                                locScreenModeCreateCategory: false,
                                locScreenModeCreateTemplate: false,
                                locScreenModeEditCategory: false,
                                locScreenModeEditTemplate: false,
                                locScreenModeViewCategory: true,
                                locScreenModeViewTemplate: false,
                                locDisplayDialog: false,
                                locDisplayDialogDelete: false
                            }
                        );
                        UpdateContext({locDeleteChecked: false});
                        Reset(chkConfirmDelete_Confirm)
                    );
                    UpdateContext({locBlockUserInput:false});
                PressedBorderColor: =gblAppStyles.ButtonPrimary.PressedBorderColor
                PressedColor: =gblAppStyles.ButtonPrimary.PressedColor
                PressedFill: =gblAppStyles.ButtonPrimary.PressedFill
                RadiusBottomLeft: =gblAppStyles.ButtonPrimary.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.ButtonPrimary.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.ButtonPrimary.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.ButtonPrimary.RadiusTopRight
                Size: =gblAppStyles.ButtonPrimary.Size
                Text: |-
                    =With(
                        {
                            varDefault: "Delete",
                            varOOBTextId: "btnConfirmDelete_Confirm__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Tooltip: =Self.Text
                Width: =96
                X: =Parent.Width - Self.Width - 32
                Y: =228
                ZIndex: =1

            btnConfirmDelete_Cancel As button:
                BorderColor: =gblAppStyles.ButtonSecondary.BorderColor
                BorderThickness: =gblAppStyles.ButtonSecondary.BorderThickness
                Color: =gblAppStyles.ButtonSecondary.Color
                DisabledBorderColor: =gblAppStyles.ButtonSecondary.DisabledBorderColor
                DisabledColor: =gblAppStyles.ButtonSecondary.DisabledColor
                DisabledFill: =gblAppStyles.ButtonSecondary.DisabledFill
                Fill: =gblAppStyles.ButtonSecondary.Fill
                FocusedBorderColor: =gblAppStyles.ButtonSecondary.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.ButtonSecondary.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                Height: =btnConfirmDelete_Confirm.Height
                HoverBorderColor: =gblAppStyles.ButtonSecondary.HoverBorderColor
                HoverColor: =gblAppStyles.ButtonSecondary.HoverColor
                HoverFill: =gblAppStyles.ButtonSecondary.HoverFill
                OnSelect: |-
                    =UpdateContext(
                        {
                            locDisplayDialog: false,
                            locDisplayDialogDelete: false
                        }
                    );
                    UpdateContext({locDeleteChecked: false});
                    Reset(chkConfirmDelete_Confirm)
                PressedBorderColor: =gblAppStyles.ButtonSecondary.PressedBorderColor
                PressedColor: =gblAppStyles.ButtonSecondary.PressedColor
                PressedFill: =gblAppStyles.ButtonSecondary.PressedFill
                RadiusBottomLeft: =gblAppStyles.ButtonSecondary.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.ButtonSecondary.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.ButtonSecondary.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.ButtonSecondary.RadiusTopRight
                Size: =gblAppStyles.ButtonSecondary.Size
                Text: |-
                    =With(
                        {
                            varDefault: "Cancel",
                            varOOBTextId: "_translateCommon__Cancel"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Tooltip: =Self.Text
                Width: =btnConfirmDelete_Confirm.Width
                X: =btnConfirmDelete_Confirm.X - Self.Width - 16
                Y: =btnConfirmDelete_Confirm.Y
                ZIndex: =2

            chkConfirmDelete_Confirm As checkbox:
                BorderColor: =gblAppStyles.Checkbox.BorderColor
                BorderThickness: =gblAppStyles.Checkbox.BorderThickness
                CheckboxBackgroundFill: =gblAppStyles.Checkbox.CheckboxBackgroundFill
                CheckboxBorderColor: =gblAppStyles.Checkbox.CheckboxBorderColor
                CheckboxSize: =24
                CheckmarkFill: =gblAppStyles.Checkbox.CheckmarkFill
                Color: =Transparent
                Default: =locDeleteChecked
                DisabledBorderColor: =gblAppStyles.Checkbox.DisabledBorderColor
                DisabledColor: =gblAppStyles.Checkbox.DisabledColor
                DisabledFill: =gblAppStyles.Checkbox.DisabledFill
                Fill: =gblAppStyles.Checkbox.Fill
                FocusedBorderColor: =gblAppStyles.Checkbox.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Checkbox.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                Height: =36
                HoverBorderColor: =gblAppStyles.Checkbox.HoverBorderColor
                HoverColor: =gblAppStyles.Checkbox.HoverColor
                HoverFill: =gblAppStyles.Checkbox.HoverFill
                PressedBorderColor: =gblAppStyles.Checkbox.PressedBorderColor
                PressedColor: =gblAppStyles.Checkbox.PressedColor
                PressedFill: =gblAppStyles.Checkbox.PressedFill
                Size: =gblAppStyles.Checkbox.Size
                TabIndex: =-1
                Text: |-
                    =With(
                        {
                            varDefault: "I understand.",
                            varOOBTextId: "chkConfirmDelete_Confirm__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                X: =40
                Y: =160
                ZIndex: =3

            lblConfirmDeleteTemplate_Warning As label:
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                DisabledColor: =gblAppStyles.Label.DisabledColor
                DisabledFill: =gblAppStyles.Label.DisabledFill
                DisplayMode: =DisplayMode.View
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                Height: =71
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Size: =gblAppStyles.Label.Size.Medium
                Text: |-
                    =With(
                        {
                            varDefault: "You're about to permanently delete this template and its associated records. You can't undo this action.",
                            varOOBTextId: "lblConfirmDeleteTemplate_Warning__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Visible: =locScreenModeEditTemplate
                Width: =Parent.Width - 64
                X: =32
                Y: =84
                ZIndex: =4

            lblConfirmDeleteTemplate_Header As label:
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                DisabledColor: =gblAppStyles.Label.DisabledColor
                DisabledFill: =gblAppStyles.Label.DisabledFill
                DisplayMode: =DisplayMode.View
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Bold
                Height: =32
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Size: =gblAppStyles.Label.Size.Large
                Text: |-
                    =With(
                        {
                            varDefault: "Delete template",
                            varOOBTextId: "lblConfirmDeleteTemplate_Header__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Visible: =locScreenModeEditTemplate
                Width: =Parent.Width - Self.X
                X: =32 * 1
                Y: =48 * 1
                ZIndex: =5

            lblConfirmDeleteCategory_Warning As label:
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                DisabledColor: =gblAppStyles.Label.DisabledColor
                DisabledFill: =gblAppStyles.Label.DisabledFill
                DisplayMode: =DisplayMode.View
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                Height: =71
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Size: =gblAppStyles.Label.Size.Medium
                Text: |-
                    =With(
                        {
                            varDefault: "You're about to permanently delete this category and its associated templates. You can't undo this action.",
                            varOOBTextId: "lblConfirmDeleteCategory_Warning__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Visible: =locScreenModeEditCategory
                Width: =Parent.Width - 64
                X: =32
                Y: =84
                ZIndex: =6

            lblConfirmDeleteCategory_Header As label:
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                DisabledColor: =gblAppStyles.Label.DisabledColor
                DisabledFill: =gblAppStyles.Label.DisabledFill
                DisplayMode: =DisplayMode.View
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Bold
                Height: =32
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Size: =gblAppStyles.Label.Size.Large
                Text: |-
                    =With(
                        {
                            varDefault: "Delete category",
                            varOOBTextId: "lblConfirmDeleteCategory_Header__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Visible: =locScreenModeEditCategory
                Width: =Parent.Width - Self.X
                X: =32 * 1
                Y: =48 * 1
                ZIndex: =7

            btnConfirmDelete_Checkbox As button:
                Align: =Align.Left
                BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
                BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
                Color: =gblAppStyles.ButtonTransparent.Color
                DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                DisabledColor: =gblAppStyles.ButtonTransparent.DisabledColor
                DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
                Fill: =gblAppStyles.ButtonTransparent.Fill
                FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Normal
                Height: =chkConfirmDelete_Confirm.Height
                HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
                HoverColor: =gblAppStyles.ButtonTransparent.HoverColor
                HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
                OnSelect: |-
                    =UpdateContext({locDeleteChecked: !locDeleteChecked})
                PaddingLeft: =32
                PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
                PressedColor: =gblAppStyles.ButtonTransparent.PressedColor
                PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
                RadiusBottomLeft: =gblAppStyles.ButtonTransparent.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.ButtonTransparent.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.ButtonTransparent.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.ButtonTransparent.RadiusTopRight
                Size: =gblAppStyles.ButtonTransparent.Size
                Text: |-
                    =With(
                        {
                            varDefault: "I understand.",
                            varOOBTextId: "chkConfirmDelete_Confirm__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Tooltip: =Self.Text
                Width: =chkConfirmDelete_Confirm.Width
                X: =chkConfirmDelete_Confirm.X
                Y: =chkConfirmDelete_Confirm.Y
                ZIndex: =8

            imgConfirmDelete_Cancel As image:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Click to sort issue categories",
                            varOOBTextId: "imgSortCategory__locAccessibleLabel"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                AutoDisableOnSelect: =false
                BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
                BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
                DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                DisabledFill: |-
                    =With(
                        {
                            varImageIsCategory: LookUp(
                                staticIcons,
                                staticIconName = "Sort"
                            ).staticIconIsCategory
                        },
                        If(
                            varImageIsCategory,
                            gblAppStyles.Icons.DisabledFill_Category,
                            Transparent
                        )
                    )
                Fill: |-
                    =With(
                        {
                            varImageIsCategory: LookUp(
                                staticIcons,
                                staticIconName = "Sort"
                            ).staticIconIsCategory
                        },
                        If(
                            varImageIsCategory,
                            gblAppStyles.Icons.Fill_Category,
                            Transparent
                        )
                    )
                FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
                Height: =28*1
                HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
                HoverFill: =gblAppColors.OverlayLight
                Image: |-
                    =With(
                        {
                            varImageRecord: LookUp(
                                staticIcons,
                                staticIconName = "Dismiss"
                            ),
                            varColor: If(
                                Self.DisplayMode = DisplayMode.Disabled,
                                gblAppStyles.Icons.DisabledColor,
                                gblAppStyles.Icons.Color
                            )
                        },
                        With(
                            {
                                varImageData: Concatenate(
                                    "data:image/svg+xml;utf8, ",
                                    EncodeUrl(
                                        Concatenate(
                                            "<svg viewBox='",
                                            varImageRecord.staticIconViewbox,
                                            "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                            varImageRecord.staticIconPath,
                                            "' fill='#",
                                            varColor,
                                            "'/></svg>"
                                        )
                                    )
                                )
                            },
                            varImageData
                        )
                    )
                OnSelect: =Select(btnConfirmDelete_Cancel)
                PaddingBottom: =(Self.Width - 20) / 2
                PaddingLeft: =(Self.Width - 20) / 2
                PaddingRight: =(Self.Width - 20) / 2
                PaddingTop: =(Self.Width - 20) / 2
                PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
                TabIndex: =0
                Tooltip: |-
                    =With(
                        {
                            varDefault: "Click to sort",
                            varOOBTextId: "imgSortCategory__locTooltip"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Transparency: =If(Self.DisplayMode = DisplayMode.Disabled,0.75,0)
                Width: =Self.Height
                X: =Parent.Width - Self.Width - 8
                Y: =8*1
                ZIndex: =9

        lblBlockUserInput_Dialog As label:
            DisplayMode: =DisplayMode.Disabled
            Fill: =RGBA(0, 0, 0, .05)
            FocusedBorderThickness: =0.5
            Height: =Parent.Height
            OnSelect: =
            Text: =""
            Visible: =locBlockUserInput
            Width: =Parent.Width
            X: =0*0
            Y: =0*0
            ZIndex: =5

    lblBlockUserInput_Templates As label:
        DisabledFill: =RGBA(0, 0, 0, 0.05)
        DisplayMode: =DisplayMode.Disabled
        Font: =Font.'Segoe UI'
        Height: =Parent.Height
        Text: =""
        Visible: =locBlockUserInput
        Width: =Parent.Width
        X: =0*0
        Y: =0*0
        ZIndex: =9

