"'Home Screen' As screen":
    Fill: =gblAppStyles.Background.Fill
    LoadingSpinner: =LoadingSpinner.Data
    LoadingSpinnerColor: =gblAppStyles.ButtonPrimary.Fill
    OnHidden: |-
        =UpdateContext(
            {
                locTimerStart_ReadReceipt: false,
                locSetFocusControlTarget: Blank()
            }
        )
    OnVisible: |
        =// Multiple setting of variables, due to how auto-height controls calculate
        With(
            {varBulletin: First(Bulletins)},
            UpdateContext(
                {
                    locBulletinRecord: varBulletin,
                    locBulletinBody: varBulletin.Body
                }
            )
        );
        UpdateContext(
            {
                locReaderHeight: Sum(
                    imgBulletinReader_HeaderImage.Height,
                    lblBulletinReader_Author.Height,
                    lblBulletinReader_Title.Height,
                    lblBulletinReader_Subtitle.Height,
                    htmBulletinReader_Body.Height,
                    btnBulletinReader_BulletinButton.Height,
                    40
                )
            }
        );

    cnvHome As fluidGrid.fluidGridWithBlankCard:
        BorderThickness: =0
        Height: =Parent.Height - Self.Y
        Width: =Parent.Width
        X: =0*0
        Y: =conHome_Actions.Y + conHome_Actions.Height
        ZIndex: =1

        dtcBulletins_Featured As dataCard:
            BorderColor: =RGBA(0, 0, 0, 1)
            BorderStyle: =BorderStyle.Solid
            BorderThickness: =0
            DisplayMode: =DisplayMode.Edit
            Fill: =RGBA(0, 0, 0, 0)
            Height: =galBulletinsFeatured.Y + galBulletinsFeatured.Height + gblPadding.Page
            Visible: =true
            Width: =Parent.Width
            X: =0*0
            Y: =0
            ZIndex: =1

            galBulletinsFeatured As gallery.galleryHorizontal:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Featured bulletins",
                            varOOBTextId: "galBulletinsFeatured__AccessibleLabel"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                BorderColor: =RGBA(0, 0, 0, 0)
                Default: ={}
                Height: |-
                    =If(
                        IsEmpty(Self.AllItems),
                        0,
                        360
                    )
                ItemAccessibleLabel: |-
                    =With(
                        {
                            varDefault: If(
                                ThisItem.IsSelected,
                                "Selected",
                                "Not selected"
                            ),
                            varOOBTextId: If(
                                ThisItem.IsSelected,
                                "galBulletinsFeatured_Items__AccessibleLabel_selected",
                                "galBulletinsFeatured_Items__AccessibleLabel_notselected"
                            )
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Items: |-
                    =Search(
                        SortByColumns(
                            Filter(
                                colCdsBulletins,
                                'Publication Status' = 'Bulletin Publication Status'.Featured,
                                If(
                                    locBookmarksOnly,
                                    Bulletin in colCdsBulletinBookmarks.appBulletinGUID,
                                    true
                                )
                            ),
                            "msft_publishondatetime",
                            Descending
                        ),
                        txtHomeAction_Search_Bulletins.Text,
                        "msft_name",
                        "msft_body"
                    )
                OnSelect: |
                    =// Multiple setting of variables, due to how auto-height controls calculate
                    UpdateContext(
                        {
                            locVisibleDialog: true,
                            locVisibleDialogBulletinReader: true,
                            locBulletinRecord: ThisItem,
                            locBulletinBody: ThisItem.Body
                        }
                    );
                    // Timer Block (Read Receipt)
                    UpdateContext({locTimerStart_ReadReceipt: false});
                    Reset(tmrBulletinReader_MarkRead);
                    UpdateContext({locTimerStart_ReadReceipt: true});
                    // [Set Focus Start]
                    UpdateContext({locSetFocusTimerStart: false});
                    UpdateContext({locSetFocusControlTarget: "btnBulletinReader_Close"});
                    UpdateContext({locSetFocusTimerStart: true});
                    // [Set Focus End]
                ShowNavigation: =true
                ShowScrollbar: =false
                TabIndex: =If(true,-1,0)
                TemplatePadding: =gblPadding.Page
                TemplateSize: =370
                Visible: =!IsEmpty(Self.AllItems)
                Width: =Parent.Width
                X: =0*0
                Y: =lblBulletinsFeatured_Header.Y + lblBulletinsFeatured_Header.Height
                ZIndex: =1

                btnGalBulletinsFeatured_Background As button:
                    BorderColor: =gblAppStyles.ButtonBackground.BorderColor
                    BorderThickness: =gblAppStyles.ButtonBackground.BorderThickness
                    Color: =Transparent
                    DisabledBorderColor: =gblAppStyles.ButtonBackground.DisabledBorderColor
                    DisabledColor: =gblAppStyles.ButtonBackground.DisabledColor
                    DisabledFill: =gblAppStyles.ButtonBackground.DisabledFill
                    DisplayMode: =DisplayMode.Disabled
                    Fill: =gblAppStyles.ButtonBackground.Fill
                    FocusedBorderColor: =gblAppStyles.ButtonBackground.FocusedBorderColor
                    FocusedBorderThickness: =gblAppStyles.ButtonBackground.FocusedBorderThickness
                    Height: =Parent.Height - (2*gblPadding.Page)
                    HoverBorderColor: =gblAppStyles.ButtonBackground.HoverBorderColor
                    HoverColor: =gblAppStyles.ButtonBackground.HoverColor
                    HoverFill: =gblAppStyles.ButtonBackground.HoverFill
                    OnSelect: =
                    PressedBorderColor: =gblAppStyles.ButtonBackground.PressedBorderColor
                    PressedColor: =gblAppStyles.ButtonBackground.PressedColor
                    PressedFill: =gblAppStyles.ButtonBackground.PressedFill
                    RadiusBottomLeft: =gblAppStyles.ButtonBackground.RadiusBottomLeft
                    RadiusBottomRight: =gblAppStyles.ButtonBackground.RadiusBottomRight
                    RadiusTopLeft: =gblAppStyles.ButtonBackground.RadiusTopLeft
                    RadiusTopRight: =gblAppStyles.ButtonBackground.RadiusTopRight
                    Size: =gblAppStyles.ButtonBackground.Size
                    Text: =ThisItem.Title
                    Tooltip: =ThisItem.Title
                    Width: =Parent.TemplateWidth
                    ZIndex: =1

                lblGalBulletinsFeatured_Body As label:
                    Align: =Align.Justify
                    BorderColor: =gblAppStyles.Label.BorderColor
                    BorderThickness: =gblAppStyles.Label.BorderThickness
                    Color: =gblAppStyles.Label.Color
                    DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                    DisabledColor: =gblAppStyles.Label.DisabledColor
                    DisabledFill: =gblAppStyles.Label.DisabledFill
                    Fill: =gblAppStyles.Label.Fill
                    FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                    FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Lighter
                    Height: =Parent.TemplateHeight - Self.Y - gblPadding.Page
                    HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                    HoverColor: =gblAppStyles.Label.HoverColor
                    OnSelect: =Select(Parent)
                    PaddingBottom: =gblPadding.Page
                    PaddingLeft: =gblPadding.Page
                    PaddingRight: =gblPadding.Page
                    PaddingTop: =0*0
                    PressedColor: =gblAppStyles.Label.PressedColor
                    PressedFill: =gblAppStyles.Label.PressedFill
                    Size: =gblAppStyles.Label.Size.Small
                    Text: =PlainText(ThisItem.Body)
                    VerticalAlign: =VerticalAlign.Top
                    Width: =Parent.TemplateWidth
                    X: =0*0
                    Y: =lblGalBulletinsFeatured_Subtitle.Y + lblGalBulletinsFeatured_Subtitle.Height
                    ZIndex: =2

                lblGalBulletinsFeatured_Subtitle As label:
                    BorderColor: =gblAppStyles.Label.BorderColor
                    BorderThickness: =gblAppStyles.Label.BorderThickness
                    Color: =gblAppStyles.Label.Color
                    DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                    DisabledColor: =gblAppStyles.Label.DisabledColor
                    DisabledFill: =gblAppStyles.Label.DisabledFill
                    Fill: =gblAppStyles.Label.Fill
                    FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                    FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                    Font: =Font.'Segoe UI'
                    HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                    HoverColor: =gblAppStyles.Label.HoverColor
                    OnSelect: =Select(Parent)
                    PaddingBottom: =4
                    PaddingLeft: =gblPadding.Page
                    PaddingRight: =gblPadding.Page
                    PaddingTop: =4
                    PressedColor: =gblAppStyles.Label.PressedColor
                    PressedFill: =gblAppStyles.Label.PressedFill
                    Size: =gblAppStyles.Label.Size.Medium
                    Text: =ThisItem.Subtitle
                    VerticalAlign: =VerticalAlign.Top
                    Width: =Parent.TemplateWidth
                    Wrap: =false
                    X: =0*0
                    Y: =lblGalBulletinsFeatured_Title.Y + lblGalBulletinsFeatured_Title.Height
                    ZIndex: =3

                lblGalBulletinsFeatured_Title As label:
                    BorderColor: =gblAppStyles.Label.BorderColor
                    BorderThickness: =gblAppStyles.Label.BorderThickness
                    Color: =gblAppStyles.Label.Color
                    DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                    DisabledColor: =gblAppStyles.Label.DisabledColor
                    DisabledFill: =gblAppStyles.Label.DisabledFill
                    Fill: =gblAppStyles.Label.Fill
                    FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                    FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Semibold
                    HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                    HoverColor: =gblAppStyles.Label.HoverColor
                    OnSelect: =Select(Parent)
                    PaddingBottom: =4
                    PaddingLeft: =gblPadding.Page
                    PaddingRight: =gblPadding.Page
                    PaddingTop: =4
                    PressedColor: =gblAppStyles.Label.PressedColor
                    PressedFill: =gblAppStyles.Label.PressedFill
                    Size: =gblAppStyles.Label.Size.Large
                    Text: =ThisItem.Title
                    VerticalAlign: =VerticalAlign.Bottom
                    Width: =Parent.TemplateWidth
                    Wrap: =false
                    X: =0*0
                    Y: |-
                        =If(
                            ThisItem.Type = 'Bulletin Type'.Text,
                            lblGalBulletinsFeatured_PublishOn.Y + lblGalBulletinsFeatured_PublishOn.Height,
                            imgGalBulletinsFeatured_Image.Y + imgGalBulletinsFeatured_Image.Height
                        )
                    ZIndex: =4

                MicrosoftStream3 As microsoftStreamPlayback:
                    AccessibleLabel: ="Video for this Bulletin"
                    Height: =vidGalBulletinsFeatured_VideoPreview.Height
                    OnSelect: =Select(Parent)
                    StreamUrl: =If(IsMatch(ThisItem.'Video URL',"microsoftstream.com",MatchOptions.Contains),ThisItem.'Video URL')
                    Visible: |-
                        =And(
                            IsMatch(
                                ThisItem.'Video URL',
                                "microsoftstream.com",
                                MatchOptions.Contains
                            ),
                            !IsBlank(ThisItem.'Video URL')
                        )
                    Width: =vidGalBulletinsFeatured_VideoPreview.Width
                    X: =vidGalBulletinsFeatured_VideoPreview.X
                    Y: =vidGalBulletinsFeatured_VideoPreview.Y
                    ZIndex: =5

                vidGalBulletinsFeatured_VideoPreview As videoPlayback:
                    AccessibleLabel: |-
                        =With(
                            {
                                varDefault: "A video for this bulletin",
                                varOOBTextId: "vidGalBulletinsFeatured_VideoPreview__AccessibleLabel"
                            },
                            With(
                                {
                                    varLocalizedText: LookUp(
                                        colLocalization,
                                        OOBTextId = varOOBTextId,
                                        LocalizedText
                                    )
                                },
                                Coalesce(
                                    varLocalizedText,
                                    varDefault
                                )
                            )
                        )
                    BorderColor: =RGBA(0, 0, 0, 0)
                    DisplayMode: =DisplayMode.Disabled
                    Fill: =Transparent
                    Height: |-
                        =If(
                            ThisItem.Type = 'Bulletin Type'.Video,
                            Self.Width / 1.8,
                            0
                        )
                    Image: =ThisItem.'Stock Image'
                    Media: =ThisItem.'Video URL'
                    ShowControls: =false
                    TabIndex: =If(true,-1,0)
                    Tooltip: =Self.AccessibleLabel
                    Visible: |-
                        =And(
                            !IsMatch(
                                ThisItem.'Video URL',
                                "microsoftstream.com",
                                MatchOptions.Contains
                            ),
                            !IsBlank(ThisItem.'Video URL')
                        )
                    Width: =Parent.TemplateWidth
                    X: =imgGalBulletinsFeatured_Image.X
                    Y: =imgGalBulletinsFeatured_Image.Y
                    ZIndex: =6

                imgGalBulletinsFeatured_Image As image:
                    AccessibleLabel: |-
                        =With(
                            {
                                varDefault: "A header image for this bulletin",
                                varOOBTextId: "imgGalBulletinsFeatured_Image__AccessibleLabel"
                            },
                            With(
                                {
                                    varLocalizedText: LookUp(
                                        colLocalization,
                                        OOBTextId = varOOBTextId,
                                        LocalizedText
                                    )
                                },
                                Coalesce(
                                    varLocalizedText,
                                    varDefault
                                )
                            )
                        )
                    Height: |-
                        =If(
                            ThisItem.Type = 'Bulletin Type'.Text,
                            0,
                            Self.Width / 1.8
                        )
                    Image: |-
                        =If(
                            IsBlank(ThisItem.'Header Image'),
                            ThisItem.'Stock Image',
                            ThisItem.'Header Image'.Full
                        )
                        /*
                        // Old Code, which forces Image to display, but is not performant
                        If(
                            IsBlank(ThisItem.'Header Image'),
                            ThisItem.'Stock Image',
                            LookUp(
                                Bulletins,
                                Bulletins[@Bulletin] = ThisItem.Bulletin,
                                'Header Image'.Full
                            )
                        )
                        */
                    ImagePosition: =ImagePosition.Fill
                    OnSelect: =Select(Parent)
                    RadiusTopLeft: =5
                    RadiusTopRight: =5
                    Tooltip: =Self.AccessibleLabel
                    Width: =Parent.TemplateWidth
                    X: =0*0
                    Y: =0*0
                    ZIndex: =7

                imgGalBulletinsFeatured_PlayVideo As image:
                    AccessibleLabel: |-
                        =With(
                            {
                                varDefault: "Image indicating a bulletin has a video associated with it",
                                varOOBTextId: "imgGalBulletinsFeatured_PlayVideo__AccessibleLabel"
                            },
                            With(
                                {
                                    varLocalizedText: LookUp(
                                        colLocalization,
                                        OOBTextId = varOOBTextId,
                                        LocalizedText
                                    )
                                },
                                Coalesce(
                                    varLocalizedText,
                                    varDefault
                                )
                            )
                        )
                    Image: =Image_PlayVideo
                    OnSelect: =Select(Parent)
                    Tooltip: =Self.AccessibleLabel
                    Visible: =ThisItem.Type = 'Bulletin Type'.'Video/Image'
                    X: =(imgGalBulletinsFeatured_Image.Width - Self.Width) / 2
                    Y: =(imgGalBulletinsFeatured_Image.Height - Self.Height) / 2
                    ZIndex: =8

                lblGalBulletinsFeatured_PublishOn As label:
                    Align: =Align.Center
                    Color: |-
                        =ColorValue("#F4F4FC")
                    Fill: =RGBA(37, 36, 36, 0.85)
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Lighter
                    Height: =20
                    OnSelect: =Select(Parent)
                    PaddingBottom: =4
                    PaddingLeft: =4
                    PaddingTop: =4
                    Size: =9
                    Text: |-
                        =// Featured Timeframe
                        With(
                            {
                                varTimeDifferenceMinutes: DateDiff(
                                    Coalesce(ThisItem.'Publish On',Now()),
                                    Now(),
                                    Minutes
                                ),
                                varTimeDifferenceDays: DateDiff(
                                    Coalesce(ThisItem.'Publish On',Now()),
                                    Now(),
                                    Days
                                )
                            },
                            Concatenate(
                                If(
                                    varTimeDifferenceMinutes <= 60,
                                    Concatenate(
                                        Text(varTimeDifferenceMinutes),
                                        "min"
                                    ),
                                    varTimeDifferenceMinutes > 60 And varTimeDifferenceMinutes <= 1440,
                                    With(
                                        {
                                            varHours: RoundUp(
                                                varTimeDifferenceMinutes / 60,
                                                0
                                            )
                                        },
                                        Concatenate(
                                            Text(varHours),
                                            "h"
                                        )
                                    ),
                                    Concatenate(
                                        Text(varTimeDifferenceDays),
                                        "d"
                                    )
                                ),
                                Char(32),
                                "ago"
                            )
                        )
                    Width: =72
                    X: =gblPadding.Page
                    Y: =gblPadding.Page
                    ZIndex: =9

                imgGalBulletinsFeatured_Bookmarked As image:
                    AccessibleLabel: |-
                        =With(
                            {
                                varDefault: "Image indicating that this bulletin is bookmarked",
                                varOOBTextId: "imgGalBulletinsFeatured_Bookmarked__AccessibleLabel"
                            },
                            With(
                                {
                                    varLocalizedText: LookUp(
                                        colLocalization,
                                        OOBTextId = varOOBTextId,
                                        LocalizedText
                                    )
                                },
                                Coalesce(
                                    varLocalizedText,
                                    varDefault
                                )
                            )
                        )
                    AutoDisableOnSelect: =false
                    BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
                    BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
                    DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                    DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
                    DisplayMode: =DisplayMode.View
                    Fill: =gblAppStyles.ButtonTransparent.Fill
                    FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
                    FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
                    Height: =20
                    HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
                    HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
                    Image: |-
                        =With(
                            {
                                varImageRecord: LookUp(
                                    staticIcons,
                                    staticIconName = "BookmarkFilled"
                                ),
                                varColor: gblAppStyles.Icons.Color
                            },
                            With(
                                {
                                    varImageData: Concatenate(
                                        "data:image/svg+xml;utf8, ",
                                        EncodeUrl(
                                            Concatenate(
                                                "<svg viewBox='",
                                                varImageRecord.staticIconViewbox,
                                                "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                varImageRecord.staticIconPath,
                                                "' fill='#",
                                                varColor,
                                                "'/></svg>"
                                            )
                                        )
                                    )
                                },
                                varImageData
                            )
                        )
                    OnSelect: =
                    PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
                    PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
                    Tooltip: =Self.AccessibleLabel
                    Visible: =ThisItem.Bulletin in colCdsBulletinBookmarks.appBulletinGUID
                    Width: =20
                    X: =Parent.TemplateWidth - Self.Width - gblPadding.Page
                    Y: =gblPadding.Page
                    ZIndex: =10

                btnGalBulletinsFeatured_Select As button:
                    BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
                    BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
                    Color: =Transparent
                    DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                    DisabledColor: =Transparent
                    DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
                    Fill: |-
                        =If(
                            ThisItem.Bulletin in colCdsBulletinReadReceipts.appBulletinGUID,
                            gblAppStyles.Gallery.PressedFill,
                            gblAppStyles.ButtonTransparent.Fill
                        )
                    FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
                    FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
                    Font: =Font.'Segoe UI'
                    Height: =Parent.TemplateHeight
                    HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
                    HoverColor: =Transparent
                    HoverFill: =gblAppStyles.Gallery.HoverFill
                    OnSelect: =Select(Parent)
                    PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
                    PressedColor: =Transparent
                    PressedFill: =gblAppStyles.Gallery.PressedFill
                    RadiusBottomLeft: =gblAppStyles.ButtonTransparent.RadiusBottomLeft
                    RadiusBottomRight: =gblAppStyles.ButtonTransparent.RadiusBottomRight
                    RadiusTopLeft: =gblAppStyles.ButtonTransparent.RadiusTopLeft
                    RadiusTopRight: =gblAppStyles.ButtonTransparent.RadiusTopRight
                    Size: =gblAppStyles.ButtonTransparent.Size
                    TabIndex: =If(locVisibleDialog,-1,0)
                    Text: =ThisItem.Title
                    Tooltip: |-
                        =With(
                            {
                                varDefault: "Click to view this bulletin",
                                varOOBTextId: "btnGalBulletinsFeatured_Select__Tooltip"
                            },
                            With(
                                {
                                    varLocalizedText: LookUp(
                                        colLocalization,
                                        OOBTextId = varOOBTextId,
                                        LocalizedText
                                    )
                                },
                                Coalesce(
                                    varLocalizedText,
                                    varDefault
                                )
                            )
                        )
                    Width: =Parent.TemplateWidth
                    ZIndex: =11

            lblBulletinsFeatured_Header As label:
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                DisabledColor: |
                    =gblAppStyles.Label.DisabledColor
                DisabledFill: =gblAppStyles.Label.DisabledFill
                DisplayMode: =DisplayMode.View
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                Height: =20
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                OnSelect: =
                PaddingBottom: =0
                PaddingLeft: =gblPadding.Page
                PaddingRight: =0
                PaddingTop: =0
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Role: =TextRole.Heading2
                Size: =gblAppStyles.Label.Size.Medium
                Text: |-
                    =With(
                        {
                            varOOBTextId: "lblBulletinsFeatured_Header__Text",
                            varDefault: "Featured"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                VerticalAlign: =VerticalAlign.Bottom
                Visible: =!IsEmpty(galBulletinsFeatured.AllItems)
                Width: =Parent.Width - Self.X
                Wrap: =false
                X: =0*0
                Y: =0*0
                ZIndex: =2

        dtcBulletins_Categorized As dataCard.blankCard:
            BorderColor: =RGBA(0, 0, 0, 1)
            BorderStyle: =BorderStyle.Solid
            DisplayMode: =DisplayMode.Edit
            Fill: =RGBA(0, 0, 0, 0)
            Height: =galBulletins_ByCategory.Height + gblPadding.Page
            Width: =Parent.Width
            X: =0*0
            Y: =1
            ZIndex: =2

            galBulletins_ByCategory As gallery.galleryVertical:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Bulletins by category",
                            varOOBTextId: "galBulletins_ByCategory__AccessibleLabel"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                BorderColor: =RGBA(0, 0, 0, 0)
                Default: ={}
                Height: =CountRows(Self.AllItems) * (Self.TemplateHeight + Self.TemplatePadding) + Self.TemplatePadding
                ItemAccessibleLabel: |-
                    =With(
                        {
                            varDefault: If(
                                ThisItem.IsSelected,
                                "Selected",
                                "Not selected"
                            ),
                            varOOBTextId: If(
                                ThisItem.IsSelected,
                                "galBulletins_ByCategory_Items__AccessibleLabel_selected",
                                "galBulletins_ByCategory_Items__AccessibleLabel_notselected"
                            )
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Items: |-
                    =SortByColumns(
                        Filter(
                            colCdsBulletinCategoryPreferences,
                            colCdsBulletinCategoryPreferences[@appCategoryGUID] in Search(
                                Filter(
                                    colCdsBulletins,
                                    'Publication Status' = 'Bulletin Publication Status'.Published
                                ),
                                txtHomeAction_Search_Bulletins.Text,
                                "msft_name",
                                "msft_body"
                            ).appCategoryGUID,
                            'Visible?' = 'Visible? (Bulletin Category Preferences)'.Yes
                        ),
                        "msft_order"
                    )
                Layout: =Layout.Vertical
                ShowScrollbar: =false
                TabIndex: =If(true,-1,0)
                TemplatePadding: =0*0
                TemplateSize: =288
                Width: =Parent.Width
                X: =0*0
                Y: =0*0
                ZIndex: =2

                lblGalBulletins_ByCategory_Name As label:
                    BorderColor: =gblAppStyles.Label.BorderColor
                    BorderThickness: =gblAppStyles.Label.BorderThickness
                    Color: =gblAppStyles.Label.Color
                    DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                    DisabledColor: |
                        =gblAppStyles.Label.DisabledColor
                    DisabledFill: =gblAppStyles.Label.DisabledFill
                    DisplayMode: =DisplayMode.View
                    Fill: =gblAppStyles.Label.Fill
                    FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                    FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Semibold
                    Height: =20
                    HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                    HoverColor: =gblAppStyles.Label.HoverColor
                    HoverFill: =gblAppStyles.Label.HoverFill
                    OnSelect: =
                    PaddingBottom: =0
                    PaddingLeft: =gblPadding.Page
                    PaddingRight: =0
                    PaddingTop: =0
                    PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                    PressedColor: =gblAppStyles.Label.PressedColor
                    PressedFill: =gblAppStyles.Label.PressedFill
                    Role: =TextRole.Heading2
                    Size: =gblAppStyles.Label.Size.Medium
                    Text: =ThisItem.'Bulletin Category'.Name
                    VerticalAlign: =VerticalAlign.Bottom
                    Width: =Parent.Width
                    Wrap: =false
                    X: =0*0
                    Y: =0*0
                    ZIndex: =2

                galBulletins_PerCategory As gallery.galleryHorizontal:
                    AccessibleLabel: |-
                        =With(
                            {
                                varDefault: "Bulletins for " & ThisItem.Name & " category",
                                varOOBTextId: "galBulletins_PerCategory__AccessibleLabel",
                                varParam0: ThisItem.Name
                            },
                            With(
                                {
                                    varLocalizedText: LookUp(
                                        colLocalization,
                                        OOBTextId = varOOBTextId,
                                        LocalizedText
                                    )
                                },
                                If(
                                    IsBlankOrError(varParam0),
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    ),
                                    Coalesce(
                                        Substitute(
                                            varLocalizedText,
                                            "{0}",
                                            Text(varParam0)
                                        ),
                                        varDefault
                                    )
                                )
                            )
                        )
                    BorderColor: =RGBA(0, 0, 0, 0)
                    Default: ={}
                    Height: =240
                    ItemAccessibleLabel: |-
                        =With(
                            {
                                varDefault: If(
                                    ThisItem.IsSelected,
                                    "Selected",
                                    "Not selected"
                                ),
                                varOOBTextId: If(
                                    ThisItem.IsSelected,
                                    "galBulletins_PerCategory_Items__AccessibleLabel_selected",
                                    "galBulletins_PerCategory_Items__AccessibleLabel_notselected"
                                )
                            },
                            With(
                                {
                                    varLocalizedText: LookUp(
                                        colLocalization,
                                        OOBTextId = varOOBTextId,
                                        LocalizedText
                                    )
                                },
                                Coalesce(
                                    varLocalizedText,
                                    varDefault
                                )
                            )
                        )
                    Items: |-
                        =Search(
                            Filter(
                                colCdsBulletins,
                                ThisItem.appCategoryGUID = colCdsBulletins[@appCategoryGUID],
                                If(
                                    locBookmarksOnly,
                                    Bulletin in colCdsBulletinBookmarks.appBulletinGUID,
                                    true
                                )
                            ),
                            txtHomeAction_Search_Bulletins.Text,
                            "msft_name",
                            "msft_body"
                        )
                    OnSelect: |
                        =// Multiple setting of variables, due to how auto-height controls calculate
                        UpdateContext(
                            {
                                locVisibleDialog: true,
                                locVisibleDialogBulletinReader: true,
                                locBulletinRecord: ThisItem,
                                locBulletinBody: ThisItem.Body
                            }
                        );
                        // Timer Block (Read Receipt)
                        UpdateContext({locTimerStart_ReadReceipt: false});
                        Reset(tmrBulletinReader_MarkRead);
                        UpdateContext({locTimerStart_ReadReceipt: true});
                        // [Set Focus Start]
                        UpdateContext({locSetFocusTimerStart: false});
                        UpdateContext({locSetFocusControlTarget: "btnBulletinReader_Close"});
                        UpdateContext({locSetFocusTimerStart: true});
                        // [Set Focus End]
                    ShowNavigation: =true
                    ShowScrollbar: =false
                    TabIndex: =If(true,-1,0)
                    TemplatePadding: =gblPadding.Page
                    TemplateSize: |-
                        =Switch(
                            'Home Screen'.Size,
                            Small,
                            200,
                            240
                        )
                    Width: =Parent.Width
                    X: =0*0
                    Y: =lblGalBulletins_ByCategory_Name.Height
                    ZIndex: =3

                    btnGalBulletins_PerCategory_Background As button:
                        BorderColor: =gblAppStyles.ButtonBackground.BorderColor
                        BorderThickness: =gblAppStyles.ButtonBackground.BorderThickness
                        Color: =Transparent
                        DisabledBorderColor: =gblAppStyles.ButtonBackground.DisabledBorderColor
                        DisabledColor: =gblAppStyles.ButtonBackground.DisabledColor
                        DisabledFill: =gblAppStyles.ButtonBackground.DisabledFill
                        DisplayMode: =DisplayMode.Disabled
                        Fill: =gblAppStyles.ButtonBackground.Fill
                        FocusedBorderColor: =gblAppStyles.ButtonBackground.FocusedBorderColor
                        FocusedBorderThickness: =gblAppStyles.ButtonBackground.FocusedBorderThickness
                        Height: =Parent.Height - (2*gblPadding.Page)
                        HoverBorderColor: =gblAppStyles.ButtonBackground.HoverBorderColor
                        HoverColor: =gblAppStyles.ButtonBackground.HoverColor
                        HoverFill: =gblAppStyles.ButtonBackground.HoverFill
                        OnSelect: =
                        PressedBorderColor: =gblAppStyles.ButtonBackground.PressedBorderColor
                        PressedColor: =gblAppStyles.ButtonBackground.PressedColor
                        PressedFill: =gblAppStyles.ButtonBackground.PressedFill
                        RadiusBottomLeft: =gblAppStyles.ButtonBackground.RadiusBottomLeft
                        RadiusBottomRight: =gblAppStyles.ButtonBackground.RadiusBottomRight
                        RadiusTopLeft: =gblAppStyles.ButtonBackground.RadiusTopLeft
                        RadiusTopRight: =gblAppStyles.ButtonBackground.RadiusTopRight
                        Size: =gblAppStyles.ButtonBackground.Size
                        Text: =ThisItem.Title
                        Tooltip: =ThisItem.Title
                        Width: =Parent.TemplateWidth
                        ZIndex: =1

                    lblGalBulletins_PerCategory_Body As label:
                        Align: =Align.Justify
                        BorderColor: =gblAppStyles.Label.BorderColor
                        BorderThickness: =gblAppStyles.Label.BorderThickness
                        Color: =gblAppStyles.Label.Color
                        DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                        DisabledColor: =gblAppStyles.Label.DisabledColor
                        DisabledFill: =gblAppStyles.Label.DisabledFill
                        Fill: =gblAppStyles.Label.Fill
                        FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                        FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                        Font: =Font.'Segoe UI'
                        FontWeight: =FontWeight.Lighter
                        Height: =Parent.TemplateHeight - Self.Y - gblPadding.Page
                        HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                        HoverColor: =gblAppStyles.Label.HoverColor
                        OnSelect: =Select(Parent)
                        PaddingBottom: =gblPadding.Page
                        PaddingLeft: =gblPadding.Page
                        PaddingRight: =gblPadding.Page
                        PaddingTop: =0*0
                        PressedColor: =gblAppStyles.Label.PressedColor
                        PressedFill: =gblAppStyles.Label.PressedFill
                        Size: =gblAppStyles.Label.Size.Small
                        Text: =PlainText(ThisItem.Body)
                        VerticalAlign: =VerticalAlign.Top
                        Width: =Parent.TemplateWidth
                        X: =0*0
                        Y: =lblGalBulletins_PerCategory_Subtitle.Y + lblGalBulletins_PerCategory_Subtitle.Height
                        ZIndex: =2

                    lblGalBulletins_PerCategory_Subtitle As label:
                        BorderColor: =gblAppStyles.Label.BorderColor
                        BorderThickness: =gblAppStyles.Label.BorderThickness
                        Color: =gblAppStyles.Label.Color
                        DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                        DisabledColor: =gblAppStyles.Label.DisabledColor
                        DisabledFill: =gblAppStyles.Label.DisabledFill
                        Fill: =gblAppStyles.Label.Fill
                        FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                        FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                        Font: =Font.'Segoe UI'
                        FontWeight: |
                            =If(
                                ThisItem.Bulletin in colCdsBulletinReadReceipts.appBulletinGUID,
                                FontWeight.Lighter,
                                FontWeight.Normal
                            )
                        HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                        HoverColor: =gblAppStyles.Label.HoverColor
                        OnSelect: =Select(Parent)
                        PaddingBottom: =4
                        PaddingLeft: =gblPadding.Page
                        PaddingRight: =gblPadding.Page
                        PaddingTop: =4
                        PressedColor: =gblAppStyles.Label.PressedColor
                        PressedFill: =gblAppStyles.Label.PressedFill
                        Size: =gblAppStyles.Label.Size.Small
                        Text: =ThisItem.Subtitle
                        Width: =Parent.TemplateWidth
                        Wrap: =false
                        X: =0*0
                        Y: =160
                        ZIndex: =3

                    lblGalBulletins_PerCategory_Title As label:
                        BorderColor: =gblAppStyles.Label.BorderColor
                        BorderThickness: =gblAppStyles.Label.BorderThickness
                        Color: =gblAppStyles.Label.Color
                        DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                        DisabledColor: =gblAppStyles.Label.DisabledColor
                        DisabledFill: =gblAppStyles.Label.DisabledFill
                        Fill: =gblAppStyles.Label.Fill
                        FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                        FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                        Font: =Font.'Segoe UI'
                        FontWeight: |
                            =If(
                                ThisItem.Bulletin in colCdsBulletinReadReceipts.appBulletinGUID,
                                FontWeight.Normal,
                                FontWeight.Semibold
                            )
                        HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                        HoverColor: =gblAppStyles.Label.HoverColor
                        OnSelect: =Select(Parent)
                        PaddingBottom: =4
                        PaddingLeft: =gblPadding.Page
                        PaddingRight: =gblPadding.Page
                        PaddingTop: =4
                        PressedColor: =gblAppStyles.Label.PressedColor
                        PressedFill: =gblAppStyles.Label.PressedFill
                        Size: =gblAppStyles.Label.Size.Medium
                        Text: =ThisItem.Title
                        VerticalAlign: =VerticalAlign.Bottom
                        Width: =Parent.TemplateWidth
                        Wrap: =false
                        X: =0*0
                        Y: |-
                            =If(
                                ThisItem.Type = 'Bulletin Type'.Text,
                                lblGalBulletins_PerCategory_PublishOn.Y + lblGalBulletins_PerCategory_PublishOn.Height,
                                imgGalBulletins_PerCategory_Image.Y + imgGalBulletins_PerCategory_Image.Height
                            )
                        ZIndex: =4

                    MicrosoftStream1 As microsoftStreamPlayback:
                        AccessibleLabel: ="Video for this Bulletin"
                        Height: =vidGalBulletins_PerCategory_VideoPreview.Height
                        OnSelect: =Select(Parent)
                        StreamUrl: =If(IsMatch(ThisItem.'Video URL',"microsoftstream.com",MatchOptions.Contains),ThisItem.'Video URL')
                        Visible: |-
                            =And(
                                IsMatch(
                                    ThisItem.'Video URL',
                                    "microsoftstream.com",
                                    MatchOptions.Contains
                                ),
                                !IsBlank(ThisItem.'Video URL')
                            )
                        Width: =vidGalBulletins_PerCategory_VideoPreview.Width
                        X: =vidGalBulletins_PerCategory_VideoPreview.X
                        Y: =vidGalBulletins_PerCategory_VideoPreview.Y
                        ZIndex: =5

                    vidGalBulletins_PerCategory_VideoPreview As videoPlayback:
                        AccessibleLabel: |-
                            =With(
                                {
                                    varDefault: "A video for this bulletin",
                                    varOOBTextId: "vidGalBulletins_PerCategory_VideoPreview__AccessibleLabel"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextId = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        BorderColor: =RGBA(0, 0, 0, 0)
                        DisplayMode: =DisplayMode.Disabled
                        Fill: =Transparent
                        Height: |-
                            =If(
                                ThisItem.Type = 'Bulletin Type'.Video,
                                Self.Width / 1.8,
                                0
                            )
                        Image: =ThisItem.'Stock Image'
                        Media: =ThisItem.'Video URL'
                        ShowControls: =false
                        TabIndex: =If(true,-1,0)
                        Tooltip: =Self.AccessibleLabel
                        Visible: |-
                            =And(
                                !IsMatch(
                                    ThisItem.'Video URL',
                                    "microsoftstream.com",
                                    MatchOptions.Contains
                                ),
                                !IsBlank(ThisItem.'Video URL')
                            )
                        Width: =Parent.TemplateWidth
                        X: =imgGalBulletins_PerCategory_Image.X
                        Y: =imgGalBulletins_PerCategory_Image.Y
                        ZIndex: =6

                    imgGalBulletins_PerCategory_Image As image:
                        AccessibleLabel: |-
                            =With(
                                {
                                    varDefault: "A header image for this bulletin",
                                    varOOBTextId: "imgGalBulletins_PerCategory_Image__AccessibleLabel"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextId = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        Height: |-
                            =If(
                                ThisItem.Type = 'Bulletin Type'.Text,
                                0,
                                Self.Width / 1.8
                            )
                        Image: |-
                            =If(
                                IsBlank(ThisItem.'Header Image'),
                                ThisItem.'Stock Image',
                                ThisItem.'Header Image'.Full
                            )
                            /*
                            // Old Code, which forces Image to display, but is not performant
                            If(
                                IsBlank(ThisItem.'Header Image'),
                                ThisItem.'Stock Image',
                                LookUp(
                                    Bulletins,
                                    Bulletins[@Bulletin] = ThisItem.Bulletin,
                                    'Header Image'.Full
                                )
                            )
                            */
                        ImagePosition: =ImagePosition.Fill
                        OnSelect: =Select(Parent)
                        RadiusTopLeft: =5
                        RadiusTopRight: =5
                        Tooltip: =Self.AccessibleLabel
                        Width: =Parent.TemplateWidth
                        X: =0*0
                        Y: =0*0
                        ZIndex: =7

                    imgGalBulletins_PerCategory_PlayVideo As image:
                        AccessibleLabel: |-
                            =With(
                                {
                                    varDefault: "Image indicating a bulletin has a video associated with it",
                                    varOOBTextId: "imgGalBulletins_PerCategory_PlayVideo__AccessibleLabel"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextId = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        Height: =48
                        Image: =Image_PlayVideo
                        OnSelect: =Select(Parent)
                        Tooltip: =Self.AccessibleLabel
                        Visible: =ThisItem.Type = 'Bulletin Type'.'Video/Image'
                        Width: =48
                        X: =(imgGalBulletins_PerCategory_Image.Width - Self.Width) / 2
                        Y: =(imgGalBulletins_PerCategory_Image.Height - Self.Height) / 2
                        ZIndex: =8

                    lblGalBulletins_PerCategory_PublishOn As label:
                        Align: =Align.Center
                        Color: |-
                            =ColorValue("#F4F4FC")
                        Fill: =RGBA(37, 36, 36, 0.85)
                        Font: =Font.'Segoe UI'
                        FontWeight: =FontWeight.Lighter
                        Height: =20
                        OnSelect: =Select(Parent)
                        PaddingBottom: =4
                        PaddingLeft: =4
                        PaddingTop: =4
                        Size: =9
                        Text: |-
                            =// Published Timeframe
                            With(
                                {
                                    varTimeDifferenceMinutes: DateDiff(
                                        Coalesce(ThisItem.'Publish On',Now()),
                                        Now(),
                                        Minutes
                                    ),
                                    varTimeDifferenceDays: DateDiff(
                                        Coalesce(ThisItem.'Publish On',Now()),
                                        Now(),
                                        Days
                                    )
                                },
                                Concatenate(
                                    If(
                                        varTimeDifferenceMinutes <= 60,
                                        Concatenate(
                                            Text(varTimeDifferenceMinutes),
                                            "min"
                                        ),
                                        varTimeDifferenceMinutes > 60 And varTimeDifferenceMinutes <= 1440,
                                        With(
                                            {
                                                varHours: RoundUp(
                                                    varTimeDifferenceMinutes / 60,
                                                    0
                                                )
                                            },
                                            Concatenate(
                                                Text(varHours),
                                                "h"
                                            )
                                        ),
                                        Concatenate(
                                            Text(varTimeDifferenceDays),
                                            "d"
                                        )
                                    ),
                                    Char(32),
                                    "ago"
                                )
                            )
                        Width: =72
                        X: =gblPadding.Page
                        Y: =gblPadding.Page
                        ZIndex: =9

                    imgGalBulletins_PerCategory_Bookmarked As image:
                        AccessibleLabel: |-
                            =With(
                                {
                                    varDefault: "Image indicating that this bulletin is bookmarked",
                                    varOOBTextId: "imgGalBulletins_PerCategory_Bookmarked__AccessibleLabel"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextId = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        AutoDisableOnSelect: =false
                        BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
                        BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
                        DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                        DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
                        DisplayMode: =DisplayMode.View
                        Fill: =gblAppStyles.ButtonTransparent.Fill
                        FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
                        FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
                        Height: =20
                        HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
                        HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
                        Image: |-
                            =With(
                                {
                                    varImageRecord: LookUp(
                                        staticIcons,
                                        staticIconName = "BookmarkFilled"
                                    ),
                                    varColor: gblAppStyles.Icons.Color
                                },
                                With(
                                    {
                                        varImageData: Concatenate(
                                            "data:image/svg+xml;utf8, ",
                                            EncodeUrl(
                                                Concatenate(
                                                    "<svg viewBox='",
                                                    varImageRecord.staticIconViewbox,
                                                    "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                    varImageRecord.staticIconPath,
                                                    "' fill='#",
                                                    varColor,
                                                    "'/></svg>"
                                                )
                                            )
                                        )
                                    },
                                    varImageData
                                )
                            )
                        OnSelect: =
                        PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
                        PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
                        Tooltip: =Self.AccessibleLabel
                        Visible: =ThisItem.Bulletin in colCdsBulletinBookmarks.appBulletinGUID
                        Width: =20
                        X: =Parent.TemplateWidth - Self.Width - gblPadding.Page
                        Y: =gblPadding.Page
                        ZIndex: =10

                    btnGalBulletins_PerCategory_Select As button:
                        BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
                        BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
                        Color: =Transparent
                        DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                        DisabledColor: =Transparent
                        DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
                        Fill: |-
                            =If(
                                ThisItem.Bulletin in colCdsBulletinReadReceipts.appBulletinGUID,
                                gblAppStyles.Gallery.PressedFill,
                                gblAppStyles.ButtonTransparent.Fill
                            )
                        FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
                        FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
                        Font: =Font.'Segoe UI'
                        Height: =Parent.TemplateHeight
                        HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
                        HoverColor: =Transparent
                        HoverFill: =gblAppStyles.Gallery.HoverFill
                        OnSelect: =Select(Parent)
                        PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
                        PressedColor: =Transparent
                        PressedFill: =gblAppStyles.Gallery.PressedFill
                        RadiusBottomLeft: =gblAppStyles.ButtonTransparent.RadiusBottomLeft
                        RadiusBottomRight: =gblAppStyles.ButtonTransparent.RadiusBottomRight
                        RadiusTopLeft: =gblAppStyles.ButtonTransparent.RadiusTopLeft
                        RadiusTopRight: =gblAppStyles.ButtonTransparent.RadiusTopRight
                        Size: =gblAppStyles.ButtonTransparent.Size
                        TabIndex: =If(locVisibleDialog,-1,0)
                        Text: =ThisItem.Title
                        Tooltip: |-
                            =With(
                                {
                                    varDefault: "Click to view this bulletin",
                                    varOOBTextId: "btnGalBulletins_PerCategory_Select__Tooltip"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextId = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        Width: =Parent.TemplateWidth
                        ZIndex: =11

    conBulletins_Search_ZeroState As groupContainer:
        Height: =220*1
        Visible: |-
            =And(
                IsEmpty(galBulletins_ByCategory.AllItems),
                IsEmpty(galBulletinsFeatured.AllItems)
            )
        Width: =Parent.Width
        X: =0*0
        Y: =(Parent.Height - (conHome_Actions.Y + conHome_Actions.Height)) / 2
        ZIndex: =2

        imgBulletins_Search_ZeroState As image:
            AccessibleLabel: |-
                =With(
                    {
                        varDefault: "Image indicating no bulletins were found",
                        varOOBTextId: "imgBulletins_Search_ZeroState__AccessibleLabel"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextId = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            AutoDisableOnSelect: =false
            BorderColor: =RGBA(0, 0, 0, 0)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisplayMode: =DisplayMode.View
            Height: =120
            Image: =Image_ZeroState_BulletinsSearch
            Tooltip: =Self.AccessibleLabel
            Width: =120
            X: =(Parent.Width - Self.Width) / 2
            Y: =0*0
            ZIndex: =2

        lblBulletins_Search_ZeroState As label:
            Align: =Align.Center
            BorderColor: =gblAppStyles.Label.BorderColor
            BorderThickness: =gblAppStyles.Label.BorderThickness
            Color: =gblAppStyles.Label.Color
            DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
            DisabledColor: |
                =gblAppStyles.Label.DisabledColor
            DisabledFill: =gblAppStyles.Label.DisabledFill
            DisplayMode: =DisplayMode.View
            Fill: =gblAppStyles.Label.Fill
            FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            Height: =32
            HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
            HoverColor: =gblAppStyles.Label.HoverColor
            HoverFill: =gblAppStyles.Label.HoverFill
            OnSelect: =
            PaddingBottom: =4
            PaddingLeft: =gblPadding.Page
            PaddingRight: =4
            PaddingTop: =4
            PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
            PressedColor: =gblAppStyles.Label.PressedColor
            PressedFill: =gblAppStyles.Label.PressedFill
            Size: =gblAppStyles.Label.Size.Medium
            Text: |-
                =With(
                    {
                        varOOBTextId: "lblBulletins_Search_ZeroState__Text",
                        varDefault: "No bulletins found"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextId = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Width: =Parent.Width - Self.X
            Wrap: =false
            X: =0*0
            Y: =imgBulletins_Search_ZeroState.Y + imgBulletins_Search_ZeroState.Height
            ZIndex: =3

    conHome_Actions As groupContainer:
        Height: =66//Switch('Home Screen'.Size,Small,60,Medium,72,84)
        Width: |
            =Switch(
                'Home Screen'.Size,
                ScreenSize.Small,
                Parent.Width,
                Max(280,Parent.Width * .3)
            )
        X: |-
            =Switch(
                'Home Screen'.Size,
                ScreenSize.Small,
                0*0,
                Parent.Width - Self.Width
            )
        Y: |-
            =Switch(
                'Home Screen'.Size,
                ScreenSize.Small,
                conHome_Welcome.Y + conHome_Welcome.Height,
                comHeader_Home.Height
            )
        ZIndex: =3

        shpHomeAction_BookmarkBackground As rectangle:
            BorderColor: =RGBA(0, 0, 0, 0)
            DisplayMode: =DisplayMode.Disabled
            Fill: =RGBA(255, 255, 255, 1)
            Height: =Parent.Height - Self.Y
            Visible: =locVisibleFlyoutBookmarks
            Width: =imgHomeAction_ViewBookmarks.Width + 8
            X: =imgHomeAction_ViewBookmarks.X - 4
            Y: =imgHomeAction_ViewBookmarks.Y - 2
            ZIndex: =1

        imgHomeAction_ViewBookmarks As image:
            AccessibleLabel: |-
                =With(
                    {
                        varDefault: "Click to view bookmarks only, or all bulletins",
                        varOOBTextId: "imgHomeAction_ViewBookmarks__AccessibleLabel"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextId = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            AutoDisableOnSelect: =false
            BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
            BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
            DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
            DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
            Fill: =gblAppStyles.ButtonTransparent.Fill
            FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
            Height: =32
            HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
            HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
            Image: |-
                =With(
                    {
                        varImageRecord: LookUp(
                            staticIcons,
                            staticIconName = "Filter"
                        ),
                        varColor: If(
                            Self.DisplayMode = DisplayMode.Disabled,
                            gblAppStyles.Icons.DisabledColor,
                            gblAppStyles.Icons.Color_Gray
                        )
                    },
                    With(
                        {
                            varImageData: Concatenate(
                                "data:image/svg+xml;utf8, ",
                                EncodeUrl(
                                    Concatenate(
                                        "<svg viewBox='",
                                        varImageRecord.staticIconViewbox,
                                        "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                        varImageRecord.staticIconPath,
                                        "' fill='#",
                                        varColor,
                                        "'/></svg>"
                                    )
                                )
                            )
                        },
                        varImageData
                    )
                )
            OnSelect: |-
                =UpdateContext(
                    {
                        locVisibleDialog: false,
                        locVisibleDialogUserPreferences: false,
                        locVisibleDialogBulletinReader: false,
                        locVisibleFlyoutBookmarks: !locVisibleFlyoutBookmarks
                    }
                );
                If(
                    locVisibleFlyoutBookmarks,
                // [Set Focus Start]
                    UpdateContext({locSetFocusTimerStart: false});
                    UpdateContext(
                        {
                            locSetFocusControlTarget: If(
                                locBookmarksOnly,
                                "btnBookmarks_BookmarksOnly",
                                "btnBookmarks_AllBulletins"
                            )
                        }
                    );
                    UpdateContext({locSetFocusTimerStart: true});
                    
                // [Set Focus End]
                )
            PaddingBottom: =5
            PaddingTop: =5
            PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
            PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
            TabIndex: =If(locVisibleDialog,-1,0)
            Tooltip: =Self.AccessibleLabel
            Width: =24
            X: =gblPadding.Page
            Y: =(Parent.Height - Self.Height) / 2
            ZIndex: =2

        imgHomeAction_ManageCategories As image:
            AccessibleLabel: |-
                =With(
                    {
                        varDefault: "Click to manage your category preferences",
                        varOOBTextId: "imgHomeAction_ManageCategories__AccessibleLabel"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextId = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            AutoDisableOnSelect: =false
            BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
            BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
            DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
            DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
            Fill: =gblAppStyles.ButtonTransparent.Fill
            FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
            Height: =32
            HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
            HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
            Image: |-
                =With(
                    {
                        varImageRecord: LookUp(
                            staticIcons,
                            staticIconName = "Sort"
                        ),
                        varColor: If(
                            Self.DisplayMode = DisplayMode.Disabled,
                            gblAppStyles.Icons.DisabledColor,
                            gblAppStyles.Icons.Color_Gray
                        )
                    },
                    With(
                        {
                            varImageData: Concatenate(
                                "data:image/svg+xml;utf8, ",
                                EncodeUrl(
                                    Concatenate(
                                        "<svg viewBox='",
                                        varImageRecord.staticIconViewbox,
                                        "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                        varImageRecord.staticIconPath,
                                        "' fill='#",
                                        varColor,
                                        "'/></svg>"
                                    )
                                )
                            )
                        },
                        varImageData
                    )
                )
            OnSelect: |
                =UpdateContext({locBlockUserInput: true});
                // Snapshot App Preferences
                ClearCollect(
                    colAppPreferences,
                    colCdsBulletinCategoryPreferences
                );
                UpdateContext(
                    {
                        locVisibleDialog: true,
                        locVisibleDialogUserPreferences: true,
                        locVisibleDialogBulletinReader: false,
                        locVisibleFlyoutBookmarks: false
                    }
                );
                UpdateContext({locBlockUserInput: false});
                // [Screen Reader Start]
                UpdateContext(
                    {
                        locScreenReaderAnnouncedText: With(
                            {varAnnouncedText: "Preference window is shown."},
                            If(
                                locScreenReaderAnnouncedText = varAnnouncedText,
                                Concatenate(
                                    varAnnouncedText,
                                    " "
                                ),
                                varAnnouncedText
                            )
                        )
                    }
                );
                // [Screen Reader End]
                // [Set Focus Start]
                UpdateContext({locSetFocusTimerStart: false});
                UpdateContext({locSetFocusControlTarget: "icnPreferences_Cancel"});
                UpdateContext({locSetFocusTimerStart: true});
                // [Set Focus End]
            PaddingBottom: =5
            PaddingTop: =5
            PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
            PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
            TabIndex: =If(locVisibleDialog,-1,0)
            Tooltip: =Self.AccessibleLabel
            Width: =24
            X: =imgHomeAction_ViewBookmarks.X + imgHomeAction_ViewBookmarks.Width + gblPadding.ButtonShape
            Y: =(Parent.Height - Self.Height) / 2
            ZIndex: =3

        txtHomeAction_Search_Bulletins As text:
            AccessibleLabel: |-
                =With(
                    {
                        varDefault: "Text input control to find bulletins",
                        varOOBTextId: "txtHomeAction_Search_Bulletins__AccessibleLabel"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextId = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            BorderColor: =gblAppStyles.TextInput.BorderColor
            BorderThickness: =gblAppStyles.TextInput.BorderThickness
            Color: =gblAppStyles.TextInput.Color
            Default: =""
            DelayOutput: =true
            DisabledBorderColor: =gblAppStyles.TextInput.DisabledBorderColor
            DisabledColor: =gblAppStyles.TextInput.DisabledColor
            DisabledFill: =gblAppStyles.TextInput.DisabledFill
            Fill: =gblAppStyles.TextInput.Fill
            FocusedBorderColor: =gblAppStyles.TextInput.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.TextInput.FocusedBorderThickness
            Font: ='Segoe UI'
            Height: =32
            HintText: |-
                =With(
                    {
                        varDefault: "Search bulletins",
                        varOOBTextId: "txtHomeAction_Search_Bulletins__HintText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextId = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            HoverBorderColor: =gblAppStyles.TextInput.HoverBorderColor
            HoverColor: =gblAppStyles.TextInput.HoverColor
            HoverFill: =gblAppStyles.TextInput.HoverFill
            OnChange: =
            PaddingBottom: =4
            PaddingLeft: =8
            PaddingRight: =8
            PaddingTop: =4
            PressedBorderColor: =gblAppStyles.TextInput.PressedBorderColor
            PressedColor: =gblAppStyles.TextInput.PressedColor
            PressedFill: =gblAppStyles.TextInput.PressedFill
            RadiusBottomLeft: =gblAppStyles.TextInput.RadiusBottomLeft
            RadiusBottomRight: =gblAppStyles.TextInput.RadiusBottomRight
            RadiusTopLeft: =gblAppStyles.TextInput.RadiusTopLeft
            RadiusTopRight: =gblAppStyles.TextInput.RadiusTopRight
            Size: =gblAppStyles.TextInput.Size
            TabIndex: =If(locVisibleDialog,-1,0)
            Tooltip: =
            Width: =Parent.Width - Self.X - gblPadding.Page
            X: =imgHomeAction_ManageCategories.X + imgHomeAction_ManageCategories.Width + gblPadding.ButtonShape
            Y: =(Parent.Height - Self.Height) / 2
            ZIndex: =4

        imgHomeAction_Search_Bulletins As image:
            AccessibleLabel: |-
                =With(
                    {
                        varDefault: "Search icon for bulletins",
                        varOOBTextId: "imgHomeAction_Search_Bulletins__AccessibleLabel"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextId = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            AutoDisableOnSelect: =false
            BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
            BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
            DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
            DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
            Fill: =gblAppStyles.ButtonTransparent.Fill
            FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
            Height: =32
            HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
            HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
            Image: |-
                =With(
                    {
                        varImageRecord: LookUp(
                            staticIcons,
                            staticIconName = "Search"
                        ),
                        varColor: If(
                            Self.DisplayMode = DisplayMode.Disabled,
                            gblAppStyles.Icons.DisabledColor,
                            gblAppStyles.Icons.Color_Gray
                        )
                    },
                    With(
                        {
                            varImageData: Concatenate(
                                "data:image/svg+xml;utf8, ",
                                EncodeUrl(
                                    Concatenate(
                                        "<svg viewBox='",
                                        varImageRecord.staticIconViewbox,
                                        "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                        varImageRecord.staticIconPath,
                                        "' fill='#",
                                        varColor,
                                        "'/></svg>"
                                    )
                                )
                            )
                        },
                        varImageData
                    )
                )
            OnSelect: =SetFocus(txtHomeAction_Search_Bulletins)
            PaddingBottom: =6
            PaddingLeft: =6
            PaddingRight: =6
            PaddingTop: =6
            PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
            PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
            RadiusBottomLeft: =5
            RadiusBottomRight: =5
            RadiusTopLeft: =5
            RadiusTopRight: =5
            TabIndex: =If(true,-1,0)
            Tooltip: =
            Transparency: =If(Self.DisplayMode = DisplayMode.Disabled,0.75,0)
            Width: =32
            X: =txtHomeAction_Search_Bulletins.X + txtHomeAction_Search_Bulletins.Width - Self.Width
            Y: =txtHomeAction_Search_Bulletins.Y
            ZIndex: =5

    conHome_Welcome As groupContainer:
        Height: =66//Switch('Home Screen'.Size,Small,60,Medium,72,84)
        Width: |-
            =Switch(
                'Home Screen'.Size,
                ScreenSize.Small,
                Parent.Width,
                conHome_Actions.X - Self.X
            )
        X: =0*0
        Y: =comHeader_Home.Y + comHeader_Home.Height
        ZIndex: =4

        lblWelcome_UserGreeting As label:
            BorderColor: =gblAppStyles.Label.BorderColor
            BorderThickness: =gblAppStyles.Label.BorderThickness
            Color: =gblAppStyles.Label.Color
            DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
            DisabledColor: |
                =gblAppStyles.Label.DisabledColor
            DisabledFill: =gblAppStyles.Label.DisabledFill
            DisplayMode: =DisplayMode.View
            Fill: =gblAppStyles.Label.Fill
            FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Semibold
            Height: =imgWelcome_UserPicture.Height * .6
            HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
            HoverColor: =gblAppStyles.Label.HoverColor
            HoverFill: =gblAppStyles.Label.HoverFill
            OnSelect: =
            PaddingBottom: =4
            PaddingLeft: =4
            PaddingRight: =4
            PaddingTop: =4
            PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
            PressedColor: =gblAppStyles.Label.PressedColor
            PressedFill: =gblAppStyles.Label.PressedFill
            Size: =gblAppStyles.Label.Size.Medium
            Text: |-
                =// Greeting for the current user, based on the time of day
                With(
                    {
                        varDefault: With(
                            {
                                varTimeValueNow: Hour(Now()),
                                varTimeValueMorning: 5,
                                varTimeValueAfternoon: 12,
                                varTimeValueEvening: 20
                            },
                            With(
                                {
                                    varGreeting: If(
                                        varTimeValueNow >= varTimeValueMorning And varTimeValueNow < varTimeValueAfternoon,
                                        "morning",
                                        varTimeValueNow >= varTimeValueAfternoon And varTimeValueNow < varTimeValueEvening,
                                        "afternoon",
                                        "evening"
                                    )
                                },
                                Concatenate(
                                    "Good ",
                                    varGreeting,
                                    ", ",
                                    gblUserFirstName,
                                    "."
                                )
                            )
                        ),
                        varOOBTextId: With(
                            {
                                varTimeValueNow: Hour(Now()),
                                varTimeValueMorning: 5,
                                varTimeValueAfternoon: 12,
                                varTimeValueEvening: 20
                            },
                            If(
                                varTimeValueNow >= varTimeValueMorning And varTimeValueNow < varTimeValueAfternoon,
                                "lblWelcome_UserGreeting__Text_morning",
                                varTimeValueNow >= varTimeValueAfternoon And varTimeValueNow < varTimeValueEvening,
                                "lblWelcome_UserGreeting__Text_afternoon",
                                "lblWelcome_UserGreeting__Text_evening"
                            )
                        ),
                        varParam0: gblUserFirstName,
                        varParam1: Blank(),
                        varParam2: Blank()
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextId = varOOBTextId,
                                LocalizedText
                            )
                        },
                        If(
                            IsBlankOrError(varParam0),
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            ),
                            Coalesce(
                                Substitute(
                                    Substitute(
                                        Substitute(
                                            varLocalizedText,
                                            "{0}",
                                            Text(varParam0)
                                        ),
                                        "{1}",
                                        Text(varParam1)
                                    ),
                                    "{2}",
                                    Text(varParam2)
                                ),
                                varDefault
                            )
                        )
                    )
                )
            Width: =Parent.Width - Self.X
            Wrap: =false
            X: =imgWelcome_UserPicture.X + imgWelcome_UserPicture.Width + gblPadding.Page
            Y: =imgWelcome_UserPicture.Y
            ZIndex: =1

        lblWelcome_AppOverview As label:
            BorderColor: =gblAppStyles.Label.BorderColor
            BorderThickness: =gblAppStyles.Label.BorderThickness
            Color: =gblAppStyles.Label.Color
            DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
            DisabledColor: |
                =gblAppStyles.Label.DisabledColor
            DisabledFill: =gblAppStyles.Label.DisabledFill
            DisplayMode: =DisplayMode.View
            Fill: =gblAppStyles.Label.Fill
            FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            Height: =20
            HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
            HoverColor: =gblAppStyles.Label.HoverColor
            HoverFill: =gblAppStyles.Label.HoverFill
            OnSelect: =
            PaddingBottom: =4
            PaddingLeft: =4
            PaddingRight: =4
            PaddingTop: =4
            PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
            PressedColor: =gblAppStyles.Label.PressedColor
            PressedFill: =gblAppStyles.Label.PressedFill
            Role: =TextRole.Heading1
            Size: =gblAppStyles.Label.Size.Medium
            Text: |-
                =With(
                    {
                        varOOBTextId: "lblWelcome_AppOverview__Text",
                        varDefault: "Stay up to date on everything happening in your org."
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextId = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Width: =lblWelcome_UserGreeting.Width
            Wrap: =false
            X: =lblWelcome_UserGreeting.X
            Y: =lblWelcome_UserGreeting.Y + lblWelcome_UserGreeting.Height
            ZIndex: =2

        imgWelcome_UserPicture As image:
            AccessibleLabel: |-
                =With(
                    {
                        varDefault: "User's picture",
                        varOOBTextId: "imgWelcome_UserPicture__AccessibleLabel"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextId = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            DisplayMode: =DisplayMode.View
            Height: =44
            Image: =gblUser.Image
            RadiusBottomLeft: =Self.Width
            RadiusBottomRight: =Self.Width
            RadiusTopLeft: =Self.Width
            RadiusTopRight: =Self.Width
            Tooltip: =Self.AccessibleLabel
            Width: =44
            X: =gblPadding.Page
            Y: =(Parent.Height - Self.Height) / 2
            ZIndex: =3

    comHeader_Home As comHeader:
        Fill: =comHeader_Home.inputStyles.Background.Fill
        Height: =60*1
        inputAboutIcon: |-
            =With(
                {
                    varImageRecord: LookUp(
                        staticIcons,
                        staticIconName = If(
                            App.ActiveScreen = 'About Screen',
                            "Info filled",
                            "Info"
                        )
                    ),
                    varColor: gblAppStyles.Icons.Color
                },
                With(
                    {
                        varImageData: Concatenate(
                            "data:image/svg+xml;utf8, ",
                            EncodeUrl(
                                Concatenate(
                                    "<svg viewBox='",
                                    varImageRecord.staticIconViewbox,
                                    "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                    varImageRecord.staticIconPath,
                                    "' fill='#",
                                    varColor,
                                    "'/></svg>"
                                )
                            )
                        )
                    },
                    varImageData
                )
            )
        inputAboutScreen: ='About Screen'
        inputColors: =gblAppColors
        inputDarkTheme: =gblThemeDark
        inputDisableTabbing: =locVisibleDialog
        inputFullHeader: ='Home Screen'.Size > 1
        inputHeaderIcon: =Icon_Bulletins
        inputHeaderSettings: =gblAppMenu.Bulletins
        inputHighContrastTheme: =gblThemeHiCo
        inputMenuItem1: =gblAppMenu.Home
        inputMenuItem2: =gblAppMenu.FAQs
        inputMenuItem3: =gblAppMenu.LinksContacts
        inputMenuItem4: =
        inputMenuItem5: =
        inputSettingsIcon: =
        inputSettingsScreen: =
        inputStyles: =gblAppStyles
        Width: =Parent.Width
        X: =0*0
        Y: =0*0
        ZIndex: =5

    conHome_ModalDialog As groupContainer:
        Fill: |-
            =If(
                locVisibleDialogBulletinReader,
                RGBA(
                    0,
                    0,
                    0,
                    .85
                ),
                gblAppStyles.Dialogs.Fill
            )
        Height: =Parent.Height
        Visible: =locVisibleDialog
        Width: =Parent.Width
        X: =0*0
        Y: =0*0
        ZIndex: =6

        lblModalDialog_Cancel As label:
            BorderColor: =RGBA(0, 0, 0, 0)
            Color: =RGBA(0, 0, 0, 0)
            FocusedBorderThickness: =0.25
            Height: =Parent.Height
            OnSelect: |
                =UpdateContext(
                    {
                        locVisibleDialog: false,
                        locVisibleDialogBulletinReader: false,
                        locVisibleDialogUserPreferences: false,
                        locVisibleFlyoutBookmarks: false
                    }
                );
                // Timer Block
                UpdateContext({locTimerStart_ReadReceipt: false});
                Reset(tmrBulletinReader_MarkRead);
            TabIndex: =If(true,-1,0)
            Text: =Self.Tooltip
            Tooltip: |-
                =With(
                    {
                        varOOBTextId: "lblModalDialog_Cancel__Tooltip",
                        varDefault: "Click to close the dialog window"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                staticLocalizations,
                                OOBTextId = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Width: =Parent.Width
            X: =0*0
            Y: =0*0
            ZIndex: =1

        conModalDialog_Home_Preferences As groupContainer:
            Fill: =gblAppStyles.Background.Fill
            Height: =600
            Visible: =locVisibleDialogUserPreferences
            Width: |-
                =Switch(
                    'Home Screen'.Size,
                    Small,
                    300,
                    Medium,
                    360,
                    420
                )
            X: =(Parent.Width - Self.Width) / 2
            Y: =(Parent.Height - Self.Height) / 2
            ZIndex: =2

            btnPreferences_Apply As button:
                BorderColor: =gblAppStyles.ButtonPrimary.BorderColor
                BorderThickness: =gblAppStyles.ButtonPrimary.BorderThickness
                Color: =gblAppStyles.ButtonPrimary.Color
                DisabledBorderColor: =gblAppStyles.ButtonPrimary.DisabledBorderColor
                DisabledColor: =gblAppStyles.ButtonPrimary.DisabledColor
                DisabledFill: =gblAppStyles.ButtonPrimary.DisabledFill
                Fill: =gblAppStyles.ButtonPrimary.Fill
                FocusedBorderColor: =gblAppStyles.ButtonPrimary.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.ButtonPrimary.FocusedBorderThickness
                Height: =32
                HoverBorderColor: =gblAppStyles.ButtonPrimary.HoverBorderColor
                HoverColor: =gblAppStyles.ButtonPrimary.HoverColor
                HoverFill: =gblAppStyles.ButtonPrimary.HoverFill
                OnSelect: |-
                    =// Apply Changes to CDS
                    UpdateContext({locBlockUserInput: true});
                    IfError(
                        Patch(
                            'Bulletin Category Preferences',
                            ShowColumns(
                                colCdsBulletinCategoryPreferences,
                                "msft_isvisible",
                                "msft_name",
                                "msft_bulletin_categorypreferenceid",
                                "msft_order"
                            )
                        ),
                        Notify(
                            "Unable to set Bulletin Category Preferences. Please try again",
                            NotificationType.Error
                        )
                    );
                    UpdateContext({locBlockUserInput: false});
                    // Update visible controls
                    UpdateContext(
                        {
                            locVisibleDialog: false,
                            locVisibleDialogUserPreferences: false,
                            locVisibleDialogBulletinReader: false,
                            locVisibleFlyoutBookmarks: false
                        }
                    );
                    // [Screen Reader Start]
                    UpdateContext(
                        {
                            locScreenReaderAnnouncedText: With(
                                {
                                    varAnnouncedText: With(
                                        {
                                            varDefault: "Category preferences have been applied",
                                            // Default Text to use
                    varOOBTextId: "btnPreferences_Apply__Announced"// Localized version
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextId = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            Coalesce(
                                                varLocalizedText,
                                                varDefault
                                            )
                                        )
                                    )
                                },
                                If(
                                    locScreenReaderAnnouncedText = varAnnouncedText,
                                    Concatenate(
                                        varAnnouncedText,
                                        " "
                                    ),
                                    varAnnouncedText// If clicked twice, will append blank space to update variable
                                )
                            )
                        }
                    );
                    // [Screen Reader End]
                    // [Set Focus Start]
                    UpdateContext({locSetFocusTimerStart: false});
                    UpdateContext({locSetFocusControlTarget: "icnHomeAction_ManageCategories"});
                    UpdateContext({locSetFocusTimerStart: true});
                    // [Set Focus End]
                PressedBorderColor: =gblAppStyles.ButtonPrimary.PressedBorderColor
                PressedColor: =gblAppStyles.ButtonPrimary.PressedColor
                PressedFill: =gblAppStyles.ButtonPrimary.PressedFill
                RadiusBottomLeft: =gblAppStyles.ButtonPrimary.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.ButtonPrimary.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.ButtonPrimary.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.ButtonPrimary.RadiusTopRight
                Size: =gblAppStyles.ButtonPrimary.Size
                TabIndex: =If(locVisibleDialogUserPreferences,0,-1)
                Text: |-
                    =With(
                        {
                            varDefault: "Apply",
                            varOOBTextId: "btnPreferences_Apply__Text"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Tooltip: |-
                    =With(
                        {
                            varDefault: "Click to apply category preferences",
                            varOOBTextId: "btnPreferences_Apply__Tooltip"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Width: =100
                X: =Parent.Width -Self.Width - gblPadding.Page
                Y: =Parent.Height -Self.Height - gblPadding.Page
                ZIndex: =1

            galPreferences As gallery.galleryVertical:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Category preferences",
                            varOOBTextId: "galPreferences__AccessibleLabel"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                BorderColor: =RGBA(0, 0, 0, 0)
                Height: =Parent.Height - Self.Y - 64
                ItemAccessibleLabel: |-
                    =With(
                        {
                            varDefault: If(
                                ThisItem.IsSelected,
                                "Selected",
                                "Not selected"
                            ),
                            varOOBTextId: If(
                                ThisItem.IsSelected,
                                "galPreferences_Items__AccessibleLabel_selected",
                                "galPreferences_Items__AccessibleLabel_notselected"
                            )
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Items: |-
                    =SortByColumns(
                        colCdsBulletinCategoryPreferences,
                        "msft_order",
                        Ascending
                    )
                Layout: =Layout.Vertical
                ShowScrollbar: =false
                TabIndex: =If(true,-1,0)
                TemplateSize: =40
                Visible: =locVisibleDialogUserPreferences
                Width: =Parent.Width
                X: =0*0
                Y: =lblPreferences_Header.Y + lblPreferences_Header.Height
                ZIndex: =2

                imgGalPreferences_CategoryVisible As image:
                    AccessibleLabel: |-
                        =/*With(
                            {
                                varDefault: "Click to toggle the visibility of this category",
                                varOOBTextId: "imgGalPreferences_CategoryVisible__AccessibleLabel"
                            },
                            With(
                                {
                                    varLocalizedText: LookUp(
                                        colLocalization,
                                        OOBTextId = varOOBTextId,
                                        LocalizedText
                                    )
                                },
                                Coalesce(
                                    varLocalizedText,
                                    varDefault
                                )
                            )
                        )*/
                        If(
                                        ThisItem.'Visible?' = 'Visible? (Bulletin Category Preferences)'.Yes,
                                        ThisItem.'Bulletin Category'.Name & " " & "Click to hide this category",
                                        ThisItem.'Bulletin Category'.Name & " " & "Click to show this category")
                    BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
                    BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
                    DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                    DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
                    Fill: =gblAppStyles.ButtonTransparent.Fill
                    FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
                    FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
                    Height: =24
                    HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
                    HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
                    Image: |-
                        =// Image indicating if the Category is shown for user
                        With(
                            {
                                varImageRecord: LookUp(
                                    staticIcons,
                                    staticIconName = If(
                                        ThisItem.'Visible?' = 'Visible? (Bulletin Category Preferences)'.Yes,
                                        "Hide",
                                        "Unhide"
                                    )
                                ),
                                varColor: If(
                                    Self.DisplayMode = DisplayMode.Disabled,
                                    gblAppStyles.Icons.DisabledColor,
                                    gblAppStyles.Icons.Color_Gray
                                )
                            },
                            With(
                                {
                                    varImageData: Concatenate(
                                        "data:image/svg+xml;utf8, ",
                                        EncodeUrl(
                                            Concatenate(
                                                "<svg viewBox='",
                                                varImageRecord.staticIconViewbox,
                                                "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                varImageRecord.staticIconPath,
                                                "' fill='#",
                                                varColor,
                                                "'/></svg>"
                                            )
                                        )
                                    )
                                },
                                varImageData
                            )
                        )
                    OnSelect: |-
                        =UpdateIf(
                            colCdsBulletinCategoryPreferences,
                            colCdsBulletinCategoryPreferences[@appCategoryGUID] = ThisItem.appCategoryGUID,
                            {
                                'Visible?': If(
                                    ThisItem.'Visible?' = 'Visible? (Bulletin Category Preferences)'.Yes,
                                    'Visible? (Bulletin Category Preferences)'.No,
                                    'Visible? (Bulletin Category Preferences)'.Yes
                                )
                            }
                        );
                        // Reset focus
                        SetFocus(imgPreferences_Cancel);
                    PaddingBottom: =2
                    PaddingLeft: =2
                    PaddingRight: =2
                    PaddingTop: =2
                    PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
                    PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
                    TabIndex: =0
                    Tooltip: =Self.AccessibleLabel
                    Width: =24
                    X: =Parent.TemplateWidth - Self.Width - gblPadding.ButtonShape
                    Y: =(Parent.TemplateHeight - Self.Height) / 2
                    ZIndex: =1

                imgGalPreferences_CategorySort_Down As image:
                    AccessibleLabel: |-
                        =ThisItem.'Bulletin Category'.Name & " " & With(
                            {
                                varDefault: "Click to move this category down in the sort list",
                                varOOBTextId: "imgGalPreferences_CategorySort_Down__AccessibleLabel"
                            },
                            With(
                                {
                                    varLocalizedText: LookUp(
                                        colLocalization,
                                        OOBTextId = varOOBTextId,
                                        LocalizedText
                                    )
                                },
                                Coalesce(
                                    varLocalizedText,
                                    varDefault
                                )
                            )
                        )
                    BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
                    BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
                    DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                    DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
                    DisplayMode: |-
                        =If(
                            ThisItem.msft_order = Max(
                                colCdsBulletinCategoryPreferences,
                                msft_order
                            ),
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    Fill: =gblAppStyles.ButtonTransparent.Fill
                    FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
                    FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
                    Height: =24
                    HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
                    HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
                    Image: |-
                        =With(
                            {
                                varImageRecord: LookUp(
                                    staticIcons,
                                    staticIconName = "Down"
                                ),
                                varColor: If(
                                    Self.DisplayMode = DisplayMode.Disabled,
                                    gblAppStyles.Icons.DisabledColor,
                                    gblAppStyles.Icons.Color
                                )
                            },
                            With(
                                {
                                    varImageData: Concatenate(
                                        "data:image/svg+xml;utf8, ",
                                        EncodeUrl(
                                            Concatenate(
                                                "<svg viewBox='",
                                                varImageRecord.staticIconViewbox,
                                                "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                varImageRecord.staticIconPath,
                                                "' fill='#",
                                                varColor,
                                                "'/></svg>"
                                            )
                                        )
                                    )
                                },
                                varImageData
                            )
                        )
                    OnSelect: |-
                        =// Set variables for update
                        UpdateContext({locSequenceCurrent: ThisItem.Order});
                        UpdateContext(
                            {
                                locSequenceNew: First(
                                    SortByColumns(
                                        Filter(
                                            colCdsBulletinCategoryPreferences,
                                            Order > locSequenceCurrent
                                        ),
                                        "msft_order",
                                        Ascending
                                    )
                                ).Order// Revise to lookup next # in Collection
                            }
                        );
                        // Find existing with 'New', swap with 'Current'
                        UpdateIf(
                            colCdsBulletinCategoryPreferences,
                            colCdsBulletinCategoryPreferences[@msft_order] = locSequenceNew,
                            {msft_order: locSequenceCurrent}
                        );
                        // Update this with 'New', value
                        UpdateIf(
                            colCdsBulletinCategoryPreferences,
                            ThisItem.appCategoryGUID = colCdsBulletinCategoryPreferences[@appCategoryGUID],
                            {msft_order: locSequenceNew}
                        );
                        // Reset focus
                        SetFocus(imgPreferences_Cancel);
                    PaddingBottom: =2
                    PaddingLeft: =2
                    PaddingRight: =2
                    PaddingTop: =2
                    PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
                    PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
                    TabIndex: |-
                        =If(
                            locVisibleDialogUserPreferences,
                            If(
                                Self.DisplayMode = DisplayMode.Edit,
                                0,
                                -1
                            ),
                            -1
                        )
                    Tooltip: =Self.AccessibleLabel
                    Width: =24
                    X: =imgGalPreferences_CategoryVisible.X - Self.Width - gblPadding.ButtonShape
                    Y: =(Parent.TemplateHeight - Self.Height) / 2
                    ZIndex: =2

                imgGalPreferences_CategorySort_Up As image:
                    AccessibleLabel: |-
                        =ThisItem.'Bulletin Category'.Name & " " & With(
                            {
                                varDefault: "Click to move this category up in the sort list",
                                varOOBTextId: "imgGalPreferences_CategorySort_Up__AccessibleLabel"
                            },
                            With(
                                {
                                    varLocalizedText: LookUp(
                                        colLocalization,
                                        OOBTextId = varOOBTextId,
                                        LocalizedText
                                    )
                                },
                                Coalesce(
                                    varLocalizedText,
                                    varDefault
                                )
                            )
                        )
                    BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
                    BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
                    DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                    DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
                    DisplayMode: |-
                        =If(
                            ThisItem.msft_order = Min(
                                colCdsBulletinCategoryPreferences,
                                msft_order
                            ),
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    Fill: =gblAppStyles.ButtonTransparent.Fill
                    FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
                    FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
                    Height: =24
                    HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
                    HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
                    Image: |-
                        =With(
                            {
                                varImageRecord: LookUp(
                                    staticIcons,
                                    staticIconName = "Up"
                                ),
                                varColor: If(
                                    Self.DisplayMode = DisplayMode.Disabled,
                                    gblAppStyles.Icons.DisabledColor,
                                    gblAppStyles.Icons.Color
                                )
                            },
                            With(
                                {
                                    varImageData: Concatenate(
                                        "data:image/svg+xml;utf8, ",
                                        EncodeUrl(
                                            Concatenate(
                                                "<svg viewBox='",
                                                varImageRecord.staticIconViewbox,
                                                "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                varImageRecord.staticIconPath,
                                                "' fill='#",
                                                varColor,
                                                "'/></svg>"
                                            )
                                        )
                                    )
                                },
                                varImageData
                            )
                        )
                    OnSelect: |-
                        =// Set variables for update
                        UpdateContext({locSequenceCurrent: ThisItem.Order});
                        UpdateContext(
                            {
                                locSequenceNew: Last(
                                    SortByColumns(
                                        Filter(
                                            colCdsBulletinCategoryPreferences,
                                            Order < locSequenceCurrent
                                        ),
                                        "msft_order",
                                        Ascending
                                    )
                                ).Order// Revise to lookup next # in Collection
                            }
                        );
                        // Find existing with 'New', swap with 'Current'
                        UpdateIf(
                            colCdsBulletinCategoryPreferences,
                            colCdsBulletinCategoryPreferences[@msft_order] = locSequenceNew,
                            {msft_order: locSequenceCurrent}
                        );
                        // Update this with 'New', value
                        UpdateIf(
                            colCdsBulletinCategoryPreferences,
                            ThisItem.appCategoryGUID = colCdsBulletinCategoryPreferences[@appCategoryGUID],
                            {msft_order: locSequenceNew}
                        );
                        // Reset focus
                        SetFocus(imgPreferences_Cancel);
                    PaddingBottom: =2
                    PaddingLeft: =2
                    PaddingRight: =2
                    PaddingTop: =2
                    PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
                    PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
                    TabIndex: |-
                        =If(
                            locVisibleDialogUserPreferences,
                            If(
                                Self.DisplayMode = DisplayMode.Edit,
                                0,
                                -1
                            ),
                            -1
                        )
                    Tooltip: =Self.AccessibleLabel
                    Width: =24
                    X: =imgGalPreferences_CategorySort_Down.X - Self.Width - gblPadding.ButtonShape
                    Y: =(Parent.TemplateHeight - Self.Height) / 2
                    ZIndex: =3

                lblGalPreferences_CategoryName As label:
                    BorderColor: =gblAppStyles.Label.BorderColor
                    BorderThickness: =gblAppStyles.Label.BorderThickness
                    Color: =gblAppStyles.Label.Color
                    DisabledColor: =gblAppStyles.Label.DisabledColor
                    DisabledFill: =gblAppStyles.Label.DisabledFill
                    DisplayMode: =DisplayMode.View
                    Fill: =gblAppStyles.Label.Fill
                    FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                    FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                    Font: =Font.'Segoe UI'
                    Height: =Parent.TemplateHeight
                    HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                    HoverColor: =gblAppStyles.Label.HoverColor
                    HoverFill: =gblAppStyles.Label.HoverFill
                    PaddingLeft: =gblPadding.Page
                    PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                    PressedColor: =gblAppStyles.Label.PressedColor
                    PressedFill: =gblAppStyles.Label.PressedFill
                    Size: =gblAppStyles.Label.Size.Medium
                    Text: =ThisItem.'Bulletin Category'.Name
                    Width: =imgGalPreferences_CategorySort_Up.X - Self.X
                    X: =0*0
                    Y: =0*0
                    ZIndex: =4

            imgPreferences_Cancel As image:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Click to close the manage categories dialog",
                            varOOBTextId: "imgPreferences_Cancel__AccessibleLabel"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
                BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
                DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
                Fill: =gblAppStyles.ButtonTransparent.Fill
                FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
                Height: =32
                HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
                HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
                Image: |-
                    =With(
                        {
                            varImageRecord: LookUp(
                                staticIcons,
                                staticIconName = "Dismiss"
                            ),
                            varColor: If(
                                Self.DisplayMode = DisplayMode.Disabled,
                                gblAppStyles.Icons.DisabledColor,
                                gblAppStyles.Icons.Color_Gray
                            )
                        },
                        With(
                            {
                                varImageData: Concatenate(
                                    "data:image/svg+xml;utf8, ",
                                    EncodeUrl(
                                        Concatenate(
                                            "<svg viewBox='",
                                            varImageRecord.staticIconViewbox,
                                            "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                            varImageRecord.staticIconPath,
                                            "' fill='#",
                                            varColor,
                                            "'/></svg>"
                                        )
                                    )
                                )
                            },
                            varImageData
                        )
                    )
                OnSelect: |-
                    =UpdateContext({locBlockUserInput: true});
                    UpdateContext(
                        {
                            locVisibleDialog: false,
                            locVisibleDialogUserPreferences: false,
                            locVisibleDialogBulletinReader: false,
                            locVisibleFlyoutBookmarks: false
                        }
                    );
                    // Revert Preferences, from Snapshot App Preferences
                    ClearCollect(
                        colCdsBulletinCategoryPreferences,
                        colAppPreferences
                    );
                    UpdateContext({locBlockUserInput: false});
                    // [Screen Reader Start]
                    UpdateContext(
                        {
                            locScreenReaderAnnouncedText: With(
                                {varAnnouncedText: "Preference window is hidden."},
                                If(
                                    locScreenReaderAnnouncedText = varAnnouncedText,
                                    Concatenate(
                                        varAnnouncedText,
                                        " "
                                    ),
                                    varAnnouncedText
                                )
                            )
                        }
                    );
                    // [Screen Reader End]
                    // [Set Focus Start]
                    UpdateContext({locSetFocusTimerStart: false});
                    UpdateContext({locSetFocusControlTarget: "icnHomeAction_ManageCategories"});
                    UpdateContext({locSetFocusTimerStart: true});
                    // [Set Focus End]
                PaddingBottom: =6
                PaddingLeft: =6
                PaddingRight: =6
                PaddingTop: =6
                PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
                PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
                TabIndex: =If(locVisibleDialogUserPreferences,0,-1)
                Tooltip: =Self.AccessibleLabel
                Width: =32
                X: =Parent.Width - Self.Width - gblPadding.ButtonShape
                Y: =(lblPreferences_Header.Height - Self.Height) / 2
                ZIndex: =3

            lblPreferences_Header As label:
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledColor: =gblAppStyles.Label.DisabledColor
                DisabledFill: =gblAppStyles.Label.DisabledFill
                DisplayMode: =DisplayMode.View
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                Height: =48
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                PaddingLeft: =gblPadding.Page
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Role: =TextRole.Heading3
                Size: =gblAppStyles.Label.Size.Medium
                Text: |-
                    =With(
                        {
                            varOOBTextId: "lblPreferences_Header__Text",
                            varDefault: "Manage categories"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Width: =imgPreferences_Cancel.X - Self.X
                Y: =0*0
                ZIndex: =4

        conModalDialog_Home_BulletinReader As groupContainer:
            Height: =Parent.Height
            Visible: =locVisibleDialogBulletinReader
            Width: =Parent.Width
            X: =0*0
            Y: =0*0
            ZIndex: =4

            cnvBulletinReader_HomeScreen As fluidGrid.fluidGridWithBlankCard:
                BorderThickness: =0
                Height: =Parent.Height
                Width: =Parent.Width
                X: =0*0
                Y: =0*0
                ZIndex: =2

                dtcBulletinReader_HomeScreen As dataCard:
                    BorderColor: =RGBA(0, 0, 0, 1)
                    BorderStyle: =BorderStyle.Solid
                    BorderThickness: =0
                    DisplayMode: =DisplayMode.Edit
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =100
                    Width: =Parent.Width
                    X: =0
                    Y: =0
                    ZIndex: =1

                    tmrBulletinReader_MarkRead As timer:
                        AutoStart: =locTimerStart_ReadReceipt
                        DisplayMode: =DisplayMode.Disabled
                        Duration: |-
                            =Min(
                                Max(
                                    1500,
                                    (Len(locBulletinBody) * 10)
                                ),
                                10000
                            )
                        Fill: =RGBA(0, 0, 0, 0)
                        Height: =0
                        HoverFill: =ColorFade(Transparent, -20%)
                        OnTimerEnd: |-
                            =If(
                                Not(locBulletinRecord.Bulletin in colCdsBulletinReadReceipts.appBulletinGUID),
                                // Create Read Receipt
                                UpdateContext(
                                    {
                                        locReferenceRecordBulletin: IfError(
                                            Patch(
                                                'Bulletin Read Receipts',
                                                Defaults('Bulletin Read Receipts'),
                                                {
                                                    Name: "Read Receipt",
                                                    Bulletin: locBulletinRecord,
                                                    Date: Today(),
                                                    'Date (Start of Week)': DateAdd(
                                                        Today(),
                                                        Monday - Weekday(Today()),
                                                        Days
                                                    ),
                                                    'Date (Start of Month)': Date(
                                                        Year(Today()),
                                                        Month(Today()),
                                                        1
                                                    )
                                                }
                                            ),
                                            Blank()
                                        )
                                    }
                                );
                                // [Screen Reader Start]
                            UpdateContext(
                                    {
                                        locScreenReaderAnnouncedText: With(
                                            {
                                                varAnnouncedText: With(
                                                    {
                                                        varDefault: "Bulletin has been marked as read",
                                                        // Default Text to use
                            varOOBTextId: "tmrBulletinReader_MarkRead__Announced"// Localized version
                                                    },
                                                    With(
                                                        {
                                                            varLocalizedText: LookUp(
                                                                colLocalization,
                                                                OOBTextId = varOOBTextId,
                                                                LocalizedText
                                                            )
                                                        },
                                                        Coalesce(
                                                            varLocalizedText,
                                                            varDefault
                                                        )
                                                    )
                                                )
                                            },
                                            If(
                                                locScreenReaderAnnouncedText = varAnnouncedText,
                                                Concatenate(
                                                    varAnnouncedText,
                                                    " "
                                                ),
                                                varAnnouncedText// If clicked twice, will append blank space to update variable
                                            )
                                        )
                                    }
                                );
                                
                            // [Screen Reader End]
                                // Collect Locally, and associate for preventing additional read receipts
                            Collect(
                                    colCdsBulletinReadReceipts,
                                    locReferenceRecordBulletin
                                );
                                UpdateIf(
                                    colCdsBulletinReadReceipts,
                                    colCdsBulletinReadReceipts[@'Bulletin Read Receipt'] = locReferenceRecordBulletin.'Bulletin Read Receipt',
                                    {appBulletinGUID: locBulletinRecord.Bulletin}
                                )
                            )
                        TabIndex: =-1
                        Text: =Blank()
                        Visible: =false
                        Width: =0
                        X: =conBulletinReader.X + 4
                        Y: =conBulletinReader.Y + 4
                        ZIndex: =3

                    lblModalDialog_BulletinReader_Cancel As label:
                        BorderColor: =RGBA(0, 0, 0, 0)
                        Color: =RGBA(0, 0, 0, 0)
                        FocusedBorderThickness: =0.25
                        Height: =Parent.Height
                        OnSelect: |
                            =UpdateContext(
                                {
                                    locVisibleDialog: false,
                                    locVisibleDialogBulletinReader: false,
                                    locVisibleDialogUserPreferences: false,
                                    locVisibleFlyoutBookmarks: false
                                }
                            );
                            Reset(vidBulletinReader_VideoPlayer);
                            // Timer Block
                            UpdateContext({locTimerStart_ReadReceipt: false});
                            Reset(tmrBulletinReader_MarkRead);
                            // [Screen Reader Start]
                            UpdateContext(
                                {
                                    locScreenReaderAnnouncedText: With(
                                        {
                                            varAnnouncedText: With(
                                                {
                                                    varDefault: "The bulletin dialog is no longer shown", // Default Text to use
                                                    varOOBTextId: "btnBulletinReader_Close__Announced" // Localized version
                                                },
                                                With(
                                                    {
                                                        varLocalizedText: LookUp(
                                                            colLocalization,
                                                            OOBTextId = varOOBTextId,
                                                            LocalizedText
                                                        )
                                                    },
                                                    Coalesce(
                                                        varLocalizedText,
                                                        varDefault
                                                    )
                                                )
                                            )
                                        },
                                        If(
                                            locScreenReaderAnnouncedText = varAnnouncedText,
                                            Concatenate(
                                                varAnnouncedText,
                                                " "
                                            ),
                                            varAnnouncedText // If clicked twice, will append blank space to update variable
                                        )
                                    )
                                }
                            );
                            // [Screen Reader End]
                        TabIndex: =If(true,-1,0)
                        Text: ="Click to close the dialog window"
                        Tooltip: |-
                            =With(
                                {
                                    varOOBTextId: "lblModalDialog_BulletinReader_Cancel__Tooltip",
                                    varDefault: "Click to close the dialog window"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextId = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        Width: =Parent.Width
                        X: =0*0
                        Y: =0*0
                        ZIndex: =4

                    shpBulletinReader_FooterSpace As rectangle:
                        BorderColor: =RGBA(0, 0, 0, 0)
                        DisabledFill: =Transparent
                        DisplayMode: =DisplayMode.Disabled
                        Fill: =RGBA(0, 0, 0, 0)
                        Height: =gblPadding.Page
                        Visible: =false
                        Width: =conBulletinReader.Width
                        X: =conBulletinReader.X
                        Y: =conBulletinReader.Y + conBulletinReader.Height
                        ZIndex: =6

                    conBulletinReader As groupContainer:
                        Fill: =White
                        Height: =locReaderHeight
                        Width: =Min(900,Parent.Width - 40)
                        X: =(Parent.Width - Self.Width) / 2
                        Y: =Max(20,(App.Height - Self.Height) / 2)
                        ZIndex: =7

                        btnBulletinReader_BulletinButton As button:
                            BorderColor: =gblAppStyles.ButtonSecondary.BorderColor
                            BorderThickness: =gblAppStyles.ButtonSecondary.BorderThickness
                            Color: =gblAppStyles.ButtonSecondary.Color
                            DisabledBorderColor: =gblAppStyles.ButtonSecondary.DisabledBorderColor
                            DisabledColor: =gblAppStyles.ButtonSecondary.DisabledColor
                            DisabledFill: =gblAppStyles.ButtonSecondary.DisabledFill
                            Fill: =gblAppStyles.ButtonSecondary.Fill
                            FocusedBorderColor: =gblAppStyles.ButtonSecondary.FocusedBorderColor
                            FocusedBorderThickness: =gblAppStyles.ButtonSecondary.FocusedBorderThickness
                            Font: =Font.'Segoe UI'
                            Height: =If(IsBlankOrError(locBulletinRecord.'Button Title'),0,32)
                            HoverBorderColor: =gblAppStyles.ButtonSecondary.HoverBorderColor
                            HoverColor: =gblAppStyles.ButtonSecondary.HoverColor
                            HoverFill: =gblAppStyles.ButtonSecondary.HoverFill
                            OnSelect: =Launch(locBulletinRecord.'Button URL',Blank(),LaunchTarget.New)
                            PressedBorderColor: =gblAppStyles.ButtonSecondary.PressedBorderColor
                            PressedColor: =gblAppStyles.ButtonSecondary.PressedColor
                            PressedFill: =gblAppStyles.ButtonSecondary.PressedFill
                            RadiusBottomLeft: =gblAppStyles.ButtonSecondary.RadiusBottomLeft
                            RadiusBottomRight: =gblAppStyles.ButtonSecondary.RadiusBottomRight
                            RadiusTopLeft: =gblAppStyles.ButtonSecondary.RadiusTopLeft
                            RadiusTopRight: =gblAppStyles.ButtonSecondary.RadiusTopRight
                            Size: =13
                            TabIndex: =If(locVisibleDialogBulletinReader,0,-1)
                            Text: =locBulletinRecord.'Button Title'
                            Tooltip: |-
                                =With(
                                    {
                                        varDefault: "Click to open the link for this bulletin",
                                        varOOBTextId: "btnBulletinReader_BulletinButton__Tooltip"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextId = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            Visible: =!IsBlankOrError(locBulletinRecord.'Button Title')
                            Width: =Len(Self.Text)*13
                            X: =Parent.Width - Self.Width - 20
                            Y: =Parent.Height - Self.Height - gblPadding.Page
                            ZIndex: =1

                        tmrBulletinReader_SetSize As timer:
                            AutoStart: =locVisibleDialogBulletinReader
                            BorderStyle: =BorderStyle.None
                            DisplayMode: =DisplayMode.Disabled
                            Duration: =125
                            Fill: =RGBA(0, 0, 0, 1)
                            Height: =0*0
                            HoverFill: =ColorFade(Self.Fill, -20%)
                            OnTimerEnd: |
                                =UpdateContext(
                                    {
                                        locReaderHeight: Sum(
                                            imgBulletinReader_HeaderImage.Height,
                                            lblBulletinReader_Author.Height,
                                            lblBulletinReader_Title.Height,
                                            lblBulletinReader_Subtitle.Height,
                                            htmBulletinReader_Body.Height,
                                            btnBulletinReader_BulletinButton.Height,
                                            40
                                        )
                                    }
                                );
                                tmrBulletinReader_SetSize.Repeat = If(locReaderHeight > 40, false, true)
                            Repeat: =true
                            TabIndex: =-1
                            Text: =Self.Value
                            Tooltip: ="-1"
                            Visible: =false
                            Width: =0*0
                            X: =0*0
                            Y: =0*0
                            ZIndex: =2

                        htmBulletinReader_Body As htmlViewer:
                            AutoHeight: =true
                            Color: |-
                                =ColorValue("#2A2A2A")
                            DisplayMode: =DisplayMode.View
                            Font: =Font.'Segoe UI'
                            Height: =Parent.Height - Self.Y
                            HtmlText: =locBulletinRecord.Body
                            PaddingBottom: =10
                            PaddingLeft: =20
                            PaddingRight: =20
                            PaddingTop: =10
                            Size: =10.5
                            Tooltip: |-
                                =With(
                                    {
                                        varOOBTextId: "htmBulletinReader_Body__Tooltip",
                                        varDefault: "Body of this bulletin"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextId = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            Width: =Parent.Width
                            X: =0*0
                            Y: =lblBulletinReader_Subtitle.Y + lblBulletinReader_Subtitle.Height
                            ZIndex: =3

                        lblBulletinReader_Subtitle As label:
                            Color: |-
                                =ColorValue("#2A2A2A")
                            DisplayMode: =DisplayMode.View
                            Font: =Font.'Segoe UI'
                            Height: =If(IsBlank(Self.Text),0,28)
                            LineHeight: =1
                            PaddingLeft: =20
                            Size: =10.5
                            Text: =locBulletinRecord.Subtitle
                            Tooltip: ="-1"
                            Width: =Parent.Width
                            Wrap: =false
                            X: =0*0
                            Y: =lblBulletinReader_Title.Y + lblBulletinReader_Title.Height
                            ZIndex: =4

                        lblBulletinReader_Title As label:
                            Color: |-
                                =ColorValue("#242424")
                            DisplayMode: =DisplayMode.View
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Bold
                            Height: =36
                            LineHeight: =1
                            PaddingLeft: =20
                            Text: =locBulletinRecord.Title
                            Tooltip: =Self.Text
                            VerticalAlign: =VerticalAlign.Bottom
                            Width: =Parent.Width
                            Wrap: =false
                            X: =0*0
                            Y: =lblBulletinReader_Author.Y + lblBulletinReader_Author.Height
                            ZIndex: =5

                        lblBulletinReader_Author As label:
                            Color: |-
                                =ColorValue("#616161")
                            DisplayMode: =DisplayMode.View
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Lighter
                            LineHeight: =1
                            PaddingLeft: =20
                            Size: =10.5
                            Text: =Upper(Concatenate("BY ",Coalesce(locBulletinRecord.'Author(s)',"UNKNOWN")))
                            Tooltip: ="-1"
                            VerticalAlign: =VerticalAlign.Bottom
                            Width: =Parent.Width
                            Wrap: =false
                            X: =0*0
                            Y: =imgBulletinReader_HeaderImage.Y + imgBulletinReader_HeaderImage.Height
                            ZIndex: =6

                        MicrosoftStream2 As microsoftStreamPlayback:
                            AccessibleLabel: ="Video for this Bulletin"
                            BorderColor: =RGBA(0, 0, 0, 0)
                            Color: =RGBA(0, 0, 0, 0)
                            Fill: =RGBA(0, 0, 0, 0)
                            Height: =vidBulletinReader_VideoPlayer.Height
                            StreamUrl: |-
                                =If(
                                    locVisibleDialogBulletinReader,
                                    locBulletinRecord.'Video URL',
                                    Blank()
                                )
                            TabIndex: =If(locVisibleDialogBulletinReader,0,-1)
                            Visible: |-
                                =And(
                                    IsMatch(
                                        locBulletinRecord.'Video URL',
                                        "microsoftstream.com",
                                        MatchOptions.Contains
                                    ),
                                    !IsBlank(locBulletinRecord.'Video URL')
                                )
                            Width: =vidBulletinReader_VideoPlayer.Width
                            X: =vidBulletinReader_VideoPlayer.X
                            Y: =vidBulletinReader_VideoPlayer.Y
                            ZIndex: =7

                        vidBulletinReader_VideoPlayer As videoPlayback:
                            AccessibleLabel: |-
                                =With(
                                    {
                                        varDefault: "A video for this bulletin",
                                        varOOBTextId: "vidBulletinReader_VideoPlayer__AccessibleLabel"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextId = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            Fill: =gblAppStyles.ButtonPrimary.Fill
                            Height: =imgBulletinReader_HeaderImage.Height
                            Media: =locBulletinRecord.'Video URL'
                            TabIndex: =If(locVisibleDialogBulletinReader,0,-1)
                            Tooltip: =Self.AccessibleLabel
                            Visible: |-
                                =And(
                                    !IsMatch(
                                        locBulletinRecord.'Video URL',
                                        "microsoftstream.com",
                                        MatchOptions.Contains
                                    ),
                                    !IsBlank(locBulletinRecord.'Video URL')
                                )
                            Width: =Parent.Width
                            X: =0*0
                            Y: =0*0
                            ZIndex: =8

                        imgBulletinReader_HeaderImage As image:
                            AccessibleLabel: |-
                                =With(
                                    {
                                        varDefault: "A header image for this bulletin",
                                        varOOBTextId: "imgBulletinReader_HeaderImage__AccessibleLabel"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextId = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            DisplayMode: =DisplayMode.View
                            Height: |-
                                =If(
                                    IsBlank(Coalesce(locBulletinRecord.'Header Image'.Full,locBulletinRecord.'Stock Image')) And IsBlank(locBulletinRecord.'Video URL'),
                                    60,
                                    Self.Width / (1.8)
                                )
                            Image: =Coalesce(locBulletinRecord.'Header Image'.Full,locBulletinRecord.'Stock Image')
                            ImagePosition: =ImagePosition.Fill
                            Tooltip: =Self.AccessibleLabel
                            Visible: |-
                                =!IsBlank(
                                    Coalesce(
                                        locBulletinRecord.'Header Image'.Full,
                                        locBulletinRecord.'Stock Image'
                                    )
                                ) And !locPlayVideo
                            Width: =Parent.Width
                            X: =0*0
                            Y: =0*0
                            ZIndex: =9

                        imgBulletinReader_VideoPlayButton As image:
                            AccessibleLabel: |-
                                =With(
                                    {
                                        varDefault: "Click to view the bulletin's video",
                                        varOOBTextId: "imgBulletinReader_VideoPlayButton__AccessibleLabel"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextId = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            Image: =Image_PlayVideo
                            OnSelect: |
                                =UpdateContext({locPlayVideo: true});
                            TabIndex: =If(locVisibleDialogBulletinReader,0,-1)
                            Tooltip: =Self.AccessibleLabel
                            Visible: |-
                                =!IsBlank(
                                    Coalesce(
                                        locBulletinRecord.'Header Image'.Full,
                                        locBulletinRecord.'Stock Image'
                                    )
                                ) And !IsBlank(locBulletinRecord.'Video URL') And !locPlayVideo
                            X: =(Parent.Width - Self.Width) / 2
                            ZIndex: =10

                        lblBulletinReader_PublishOnAgo As label:
                            Align: =Align.Center
                            Color: |-
                                =ColorValue("#F4F4FC")
                            DisplayMode: =DisplayMode.View
                            Fill: =RGBA(37, 36, 36, 0.85)
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Lighter
                            Height: =20
                            PaddingBottom: =4
                            PaddingLeft: =4
                            PaddingTop: =4
                            Size: =9
                            Text: |-
                                =With(
                                    {
                                        varTimeDifferenceMinutes: DateDiff(
                                            Coalesce(
                                                locBulletinRecord.'Publish On',
                                                Now()
                                            ),
                                            Now(),
                                            Minutes
                                        ),
                                        varTimeDifferenceDays: DateDiff(
                                            Coalesce(
                                                locBulletinRecord.'Publish On',
                                                Now()
                                            ),
                                            Now(),
                                            Days
                                        )
                                    },
                                    Concatenate(
                                        If(
                                            varTimeDifferenceMinutes <= 60,
                                            Concatenate(
                                                Text(varTimeDifferenceMinutes),
                                                "min"
                                            ),
                                            varTimeDifferenceMinutes > 60 And varTimeDifferenceMinutes <= 1440,
                                            With(
                                                {
                                                    varHours: RoundUp(
                                                        varTimeDifferenceMinutes / 60,
                                                        0
                                                    )
                                                },
                                                Concatenate(
                                                    Text(varHours),
                                                    If(
                                                        varHours = 1,
                                                        "h"
                                                    )
                                                )
                                            ),
                                            Concatenate(
                                                Text(varTimeDifferenceDays),
                                                "d"
                                            )
                                        ),
                                        Char(32),
                                        "ago"
                                    )
                                )
                            Tooltip: ="-1"
                            Width: =72
                            X: =20*1
                            Y: =gblPadding.Page
                            ZIndex: =11

                        btnBulletinReader_Close As button:
                            BorderColor: =gblAppStyles.ButtonSecondary.BorderColor
                            BorderThickness: =gblAppStyles.ButtonSecondary.BorderThickness
                            Color: =gblAppStyles.ButtonSecondary.Color
                            DisabledBorderColor: =gblAppStyles.ButtonSecondary.DisabledBorderColor
                            DisabledColor: =gblAppStyles.ButtonSecondary.DisabledColor
                            DisabledFill: =gblAppStyles.ButtonSecondary.DisabledFill
                            Fill: =gblAppStyles.ButtonSecondary.Fill
                            FocusedBorderColor: =gblAppStyles.ButtonPrimary.FocusedBorderColor
                            FocusedBorderThickness: =gblAppStyles.ButtonPrimary.FocusedBorderThickness
                            Font: =Font.'Segoe UI'
                            Height: =32
                            HoverBorderColor: =gblAppStyles.ButtonSecondary.HoverBorderColor
                            HoverColor: =gblAppStyles.ButtonSecondary.HoverColor
                            HoverFill: =gblAppStyles.ButtonSecondary.HoverFill
                            OnSelect: |
                                =// Select cancel label to close dialog; avoid duplicating code
                                Select(lblModalDialog_BulletinReader_Cancel)
                            PressedBorderColor: =gblAppStyles.ButtonSecondary.PressedBorderColor
                            PressedColor: =gblAppStyles.ButtonSecondary.PressedColor
                            PressedFill: =gblAppStyles.ButtonSecondary.PressedFill
                            RadiusBottomLeft: =gblAppStyles.ButtonSecondary.RadiusBottomLeft
                            RadiusBottomRight: =gblAppStyles.ButtonSecondary.RadiusBottomRight
                            RadiusTopLeft: =gblAppStyles.ButtonSecondary.RadiusTopLeft
                            RadiusTopRight: =gblAppStyles.ButtonSecondary.RadiusTopRight
                            Size: =13
                            TabIndex: =If(locVisibleDialogBulletinReader,0,-1)
                            Text: |-
                                =With(
                                    {
                                        varDefault: "Close",
                                        varOOBTextId: "btnBulletinReader_Close__Text"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextId = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            Tooltip: |-
                                =With(
                                    {
                                        varDefault: "Click to close the bulletin",
                                        varOOBTextId: "btnBulletinReader_Close__Tooltip"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextId = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            Width: =85
                            X: =Parent.Width - Self.Width - gblPadding.Page
                            Y: =gblPadding.Page
                            ZIndex: =12

                        imgBulletinReader_Bookmark As image:
                            AccessibleLabel: |-
                                =With(
                                    {
                                        varDefault: If(
                                            locBulletinRecord.Bulletin in colCdsBulletinBookmarks.appBulletinGUID,
                                            "Click to remove the bookmark from this bulletin",
                                            "Click to bookmark this bulletin"
                                        ),
                                        varOOBTextId: If(
                                            locBulletinRecord.Bulletin in colCdsBulletinBookmarks.appBulletinGUID,
                                            "imgBulletinReader_Bookmark__AccessibleLabel_bookmarked",
                                            "imgBulletinReader_Bookmark__AccessibleLabel_unbookmarked"
                                        )
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextId = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            Height: =24
                            Image: |-
                                =// Image indicating that Bulletin is bookmarked, or not, for user
                                With(
                                    {
                                        varImageRecord: LookUp(
                                            staticIcons,
                                            staticIconName = If(
                                                locBulletinRecord.Bulletin in colCdsBulletinBookmarks.appBulletinGUID,
                                                "BookmarkFilled",
                                                "BookmarkOutline"
                                            )
                                        ),
                                        varColor: gblAppStyles.Icons.Color
                                    },
                                    With(
                                        {
                                            varImageData: Concatenate(
                                                "data:image/svg+xml;utf8, ",
                                                EncodeUrl(
                                                    Concatenate(
                                                        "<svg viewBox='",
                                                        varImageRecord.staticIconViewbox,
                                                        "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                        varImageRecord.staticIconPath,
                                                        "' fill='#",
                                                        varColor,
                                                        "'/></svg>"
                                                    )
                                                )
                                            )
                                        },
                                        varImageData
                                    )
                                )
                            OnSelect: |
                                =UpdateContext({locBlockUserInput: true});
                                With(
                                    {
                                        varBulletinBookmark: LookUp(
                                            colCdsBulletinBookmarks,
                                            colCdsBulletinBookmarks[@appBulletinGUID] = locBulletinRecord.Bulletin
                                        )
                                    },
                                    If(
                                        IsBlank(varBulletinBookmark),
                                        // Create Bookmark
                                        UpdateContext(
                                            {
                                                locReferenceRecordBookmark: IfError(
                                                    Patch(
                                                        'Bulletin Bookmarks',
                                                        Defaults('Bulletin Bookmarks'),
                                                        {
                                                            Name: "Bulletin Bookmark",
                                                            Bulletin: locBulletinRecord
                                                        }
                                                    ),
                                                    Blank()
                                                )
                                            }
                                        );
                                        // [Screen Reader Start]
                                UpdateContext(
                                            {
                                                locScreenReaderAnnouncedText: With(
                                                    {
                                                        varAnnouncedText: With(
                                                            {
                                                                varDefault: "This bulletin has been added to your bookmarked bulletins",
                                                                varOOBTextId: "imgBulletinReader_Bookmark__Announced_added"
                                                            },
                                                            With(
                                                                {
                                                                    varLocalizedText: LookUp(
                                                                        colLocalization,
                                                                        OOBTextId = varOOBTextId,
                                                                        LocalizedText
                                                                    )
                                                                },
                                                                Coalesce(
                                                                    varLocalizedText,
                                                                    varDefault
                                                                )
                                                            )
                                                        )
                                                    },
                                                    If(
                                                        locScreenReaderAnnouncedText = varAnnouncedText,
                                                        Concatenate(
                                                            varAnnouncedText,
                                                            " "
                                                        ),
                                                        varAnnouncedText// If clicked twice, will append blank space to update variable
                                                    )
                                                )
                                            }
                                        );
                                        
                                // [Screen Reader End]
                                Collect(
                                            colCdsBulletinBookmarks,
                                            locReferenceRecordBookmark
                                        );
                                        ,
                                        // Remove Bookmark
                                        Remove(
                                            colCdsBulletinBookmarks,
                                            varBulletinBookmark
                                        );
                                        // [Screen Reader Start]
                                UpdateContext(
                                            {
                                                locScreenReaderAnnouncedText: With(
                                                    {
                                                        varAnnouncedText: With(
                                                            {
                                                                varDefault: "This bulletin has been removed from your bookmarked bulletins",
                                                                varOOBTextId: "imgBulletinReader_Bookmark__Announced_removed"
                                                            },
                                                            With(
                                                                {
                                                                    varLocalizedText: LookUp(
                                                                        colLocalization,
                                                                        OOBTextId = varOOBTextId,
                                                                        LocalizedText
                                                                    )
                                                                },
                                                                Coalesce(
                                                                    varLocalizedText,
                                                                    varDefault
                                                                )
                                                            )
                                                        )
                                                    },
                                                    If(
                                                        locScreenReaderAnnouncedText = varAnnouncedText,
                                                        Concatenate(
                                                            varAnnouncedText,
                                                            " "
                                                        ),
                                                        varAnnouncedText// If clicked twice, will append blank space to update variable
                                                    )
                                                )
                                            }
                                        );
                                        
                                // [Screen Reader End]
                                Remove(
                                            'Bulletin Bookmarks',
                                            varBulletinBookmark
                                        )
                                    )
                                );
                                // Associate for preventing additional read receipts
                                UpdateIf(
                                    colCdsBulletinBookmarks,
                                    colCdsBulletinBookmarks[@'Bulletin Bookmark'] = locReferenceRecordBookmark.'Bulletin Bookmark',
                                    {appBulletinGUID: locBulletinRecord.msft_bulletinid}
                                );
                                UpdateContext({locBlockUserInput: false});
                            PaddingBottom: =4
                            PaddingLeft: =4
                            PaddingRight: =4
                            PaddingTop: =4
                            TabIndex: =If(locVisibleDialogBulletinReader,0,-1)
                            Tooltip: =Self.AccessibleLabel
                            Width: =24
                            X: =Parent.Width - Self.Width - 20
                            Y: =lblBulletinReader_Author.Y + ((lblBulletinReader_Author.Height - Self.Height) / 2)
                            ZIndex: =13

    conHome_HelperControls As groupContainer:
        Height: =Parent.Height
        Visible: =locBlockUserInput
        Width: =Parent.Width
        X: =0*0
        Y: =0*0
        ZIndex: =7

        tmrSetFocus_Home As timer:
            AutoStart: =locSetFocusTimerStart
            Color: =RGBA(0, 0, 0, 0)
            Duration: =100
            Fill: =RGBA(0, 0, 0, 0)
            Height: =0
            HoverFill: =Transparent
            OnTimerEnd: |
                =Switch(
                    locSetFocusControlTarget,
                    "icnPreferences_Cancel",
                    SetFocus(imgPreferences_Cancel),
                    "icnHomeAction_ViewBookmarks",
                    SetFocus(imgHomeAction_ViewBookmarks),
                    "icnHomeAction_ManageCategories",
                    SetFocus(imgHomeAction_ManageCategories),
                    "btnBulletinReader_Close",
                    SetFocus(btnBulletinReader_Close),
                    "btnBookmarks_AllBulletins",
                    SetFocus(btnBookmarks_AllBulletins),
                    "btnBookmarks_BookmarksOnly",
                    SetFocus(btnBookmarks_BookmarksOnly)
                );
            OnTimerStart: =
            Size: =0
            TabIndex: =-1
            Width: =0
            X: =Parent.Width - Self.Width
            Y: =Parent.Height - Self.Height
            ZIndex: =1

        lblScreenAnnounce_Home As label:
            Height: =0*0
            Live: =Live.Assertive
            Text: =locScreenReaderAnnouncedText // This text is announced by screen readers, when the variable is updated
            Width: =0*0
            X: =0*0
            Y: =0*0
            ZIndex: =3

        lblBlockUserInput_Home As label:
            DisabledFill: =RGBA(0, 0, 0, 0.05)
            DisplayMode: =DisplayMode.Disabled
            Font: =Font.'Segoe UI'
            Height: =Parent.Height
            Text: =""
            Visible: =locBlockUserInput
            Width: =Parent.Width
            X: =0*0
            Y: =0*0
            ZIndex: =4

    conFlyout_Home_Bookmarks As groupContainer:
        Fill: =White
        Height: =btnBookmarks_BookmarksOnly.Y + btnBookmarks_BookmarksOnly.Height + 2
        Visible: =locVisibleFlyoutBookmarks
        Width: =Max(btnBookmarks_AllBulletins.Width,btnBookmarks_BookmarksOnly.Width) + 4
        X: |
            =Switch(
                'Home Screen'.Size,
                ScreenSize.Small,
                conHome_Actions.X + 16,
                conHome_Actions.X - Self.Width + 48
            )
        Y: =conHome_Actions.Y + conHome_Actions.Height -16
        ZIndex: =8

        imgBookmarks_BookmarksOnly As image:
            AccessibleLabel: |-
                =With(
                    {
                        varDefault: "Image indicating only bookmarked bulletins are displayed",
                        varOOBTextId: "imgBookmarks_BookmarksOnly__AccessibleLabel"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextId = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            DisplayMode: =DisplayMode.View
            Height: =32
            Image: |-
                =With(
                    {
                        varImageRecord: LookUp(
                            staticIcons,
                            staticIconName = "BookmarkOutline"
                        ),
                        varColor: gblAppStyles.Icons.Color
                    },
                    With(
                        {
                            varImageData: Concatenate(
                                "data:image/svg+xml;utf8, ",
                                EncodeUrl(
                                    Concatenate(
                                        "<svg viewBox='",
                                        varImageRecord.staticIconViewbox,
                                        "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                        varImageRecord.staticIconPath,
                                        "' fill='#",
                                        varColor,
                                        "'/></svg>"
                                    )
                                )
                            )
                        },
                        varImageData
                    )
                )
            OnSelect: =
            PaddingBottom: =(Self.Width - 26)
            PaddingLeft: =(Self.Width - 26)
            PaddingRight: =(Self.Width - 26)
            PaddingTop: =(Self.Width - 26)
            Tooltip: =Self.AccessibleLabel
            Width: =32
            X: =btnBookmarks_BookmarksOnly.X
            Y: =btnBookmarks_BookmarksOnly.Y
            ZIndex: =4

        btnBookmarks_BookmarksOnly As button:
            Align: =Align.Left
            BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
            BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
            Color: =gblAppStyles.ButtonTransparent.Color
            DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
            DisabledColor: =gblAppStyles.ButtonTransparent.DisabledColor
            DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
            Fill: =gblAppStyles.ButtonTransparent.Fill
            FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Normal
            Height: =imgBookmarks_BookmarksOnly.Height
            HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
            HoverColor: =gblAppStyles.ButtonTransparent.HoverColor
            HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
            OnSelect: |-
                =// Set Context
                UpdateContext(
                    {
                        locBookmarksOnly: true,
                        locVisibleFlyoutBookmarks: false
                    }
                );
                // [Screen Reader Start]
                UpdateContext(
                    {
                        locScreenReaderAnnouncedText: With(
                            {
                                varAnnouncedText: With(
                                    {
                                        varDefault: "The app now displays only bookmarked bulletins", // Default Text to use
                                        varOOBTextId: "btnBookmarks_BookmarksOnly__Announced" // Localized version
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextId = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            },
                            If(
                                locScreenReaderAnnouncedText = varAnnouncedText,
                                Concatenate(
                                    varAnnouncedText,
                                    " "
                                ),
                                varAnnouncedText // If clicked twice, will append blank space to update variable
                            )
                        )
                    }
                );
                // [Screen Reader End]
                // [Set Focus Start]
                UpdateContext({locSetFocusTimerStart: false});
                UpdateContext({locSetFocusControlTarget: "icnHomeAction_ViewBookmarks"});
                UpdateContext({locSetFocusTimerStart: true});
                // [Set Focus End]
            PaddingLeft: =imgBookmarks_BookmarksOnly.Width
            PaddingRight: =0
            PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
            PressedColor: =gblAppStyles.ButtonTransparent.PressedColor
            PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
            RadiusBottomLeft: =gblAppStyles.ButtonTransparent.RadiusBottomLeft
            RadiusBottomRight: =gblAppStyles.ButtonTransparent.RadiusBottomRight
            RadiusTopLeft: =gblAppStyles.ButtonTransparent.RadiusTopLeft
            RadiusTopRight: =gblAppStyles.ButtonTransparent.RadiusTopRight
            Size: =gblAppStyles.ButtonTransparent.Size
            TabIndex: =If(locVisibleFlyoutBookmarks,0,-1)
            Text: |-
                =With(
                    {
                        varDefault: "Bookmarks only",
                        varOOBTextId: "btnBookmarks_BookmarksOnly__Text"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextId = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Tooltip: |-
                =With(
                    {
                        varDefault: "Click to display only bookmarked bulletins",
                        varOOBTextId: "btnBookmarks_BookmarksOnly__Tooltip"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextId = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            X: =btnBookmarks_AllBulletins.X
            Y: =btnBookmarks_AllBulletins.Y + btnBookmarks_AllBulletins.Height + 8
            ZIndex: =5

        imgBookmarks_AllBulletins As image:
            AccessibleLabel: |-
                =With(
                    {
                        varDefault: "Image indicating all bulletins are displayed",
                        varOOBTextId: "imgBookmarks_AllBulletins__AccessibleLabel"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextId = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            DisplayMode: =DisplayMode.View
            Height: =32
            Image: |-
                =With(
                    {
                        varImageRecord: LookUp(
                            staticIcons,
                            staticIconName = "Description"
                        ),
                        varColor: gblAppStyles.Icons.Color
                    },
                    With(
                        {
                            varImageData: Concatenate(
                                "data:image/svg+xml;utf8, ",
                                EncodeUrl(
                                    Concatenate(
                                        "<svg viewBox='",
                                        varImageRecord.staticIconViewbox,
                                        "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                        varImageRecord.staticIconPath,
                                        "' fill='#",
                                        varColor,
                                        "'/></svg>"
                                    )
                                )
                            )
                        },
                        varImageData
                    )
                )
            OnSelect: =
            PaddingBottom: =(Self.Width - 26)
            PaddingLeft: =(Self.Width - 26)
            PaddingRight: =(Self.Width - 26)
            PaddingTop: =(Self.Width - 26)
            Tooltip: =Self.AccessibleLabel
            Width: =32
            X: =btnBookmarks_AllBulletins.X
            Y: =btnBookmarks_AllBulletins.Y
            ZIndex: =6

        btnBookmarks_AllBulletins As button:
            Align: =Align.Left
            BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
            BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
            Color: =gblAppStyles.ButtonTransparent.Color
            DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
            DisabledColor: =gblAppStyles.ButtonTransparent.DisabledColor
            DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
            Fill: =gblAppStyles.ButtonTransparent.Fill
            FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Normal
            Height: =imgBookmarks_AllBulletins.Height
            HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
            HoverColor: =gblAppStyles.ButtonTransparent.HoverColor
            HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
            OnSelect: |-
                =// Set Context
                UpdateContext(
                    {
                        locBookmarksOnly: false,
                        locVisibleFlyoutBookmarks: false
                    }
                );
                // [Screen Reader Start]
                UpdateContext(
                    {
                        locScreenReaderAnnouncedText: With(
                            {
                                varAnnouncedText: With(
                                    {
                                        varDefault: "The app now displays all bulletins", // Default Text to use
                                        varOOBTextId: "btnBookmarks_AllBulletins__Announced" // Localized version
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextId = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            },
                            If(
                                locScreenReaderAnnouncedText = varAnnouncedText,
                                Concatenate(
                                    varAnnouncedText,
                                    " "
                                ),
                                varAnnouncedText // If clicked twice, will append blank space to update variable
                            )
                        )
                    }
                );
                // [Screen Reader End]
                // [Set Focus Start]
                UpdateContext({locSetFocusTimerStart: false});
                UpdateContext({locSetFocusControlTarget: "icnHomeAction_ViewBookmarks"});
                UpdateContext({locSetFocusTimerStart: true});
                // [Set Focus End]
            PaddingLeft: =imgBookmarks_AllBulletins.Width
            PaddingRight: =0
            PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
            PressedColor: =gblAppStyles.ButtonTransparent.PressedColor
            PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
            RadiusBottomLeft: =gblAppStyles.ButtonTransparent.RadiusBottomLeft
            RadiusBottomRight: =gblAppStyles.ButtonTransparent.RadiusBottomRight
            RadiusTopLeft: =gblAppStyles.ButtonTransparent.RadiusTopLeft
            RadiusTopRight: =gblAppStyles.ButtonTransparent.RadiusTopRight
            Size: =gblAppStyles.ButtonTransparent.Size
            TabIndex: =If(locVisibleFlyoutBookmarks,0,-1)
            Text: |-
                =With(
                    {
                        varDefault: "All bulletins",
                        varOOBTextId: "btnBookmarks_AllBulletins__Text"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextId = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Tooltip: |-
                =With(
                    {
                        varDefault: "Click to display all bulletins",
                        varOOBTextId: "btnBookmarks_AllBulletins__Tooltip"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextId = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Width: =120
            X: =1*2
            Y: =1*2
            ZIndex: =7

