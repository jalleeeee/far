"'Mobile Bulletins Screen' As screen.'phoneLayout_FluidGridWithHeaderPageLayout_ver3.0'":
    Fill: =gblAppStyles.Background.Fill
    OnVisible: |-
        =// Default Local Variables
        If(
            IsBlankOrError(locDisplayDrafts),
            UpdateContext({locDisplayDrafts: true})
        )

    conMobileBulletins_Footer As groupContainer:
        Height: =btnMobileBulletins_NewBulletin.Height + (2*gblPadding.Page)
        Width: =Parent.Width
        X: =0*0
        Y: =Parent.Height - Self.Height
        ZIndex: =1

        btnMobileBulletins_NewBulletin As button:
            BorderColor: =gblAppStyles.ButtonPrimary.BorderColor
            BorderThickness: =gblAppStyles.ButtonPrimary.BorderThickness
            Color: =gblAppStyles.ButtonPrimary.Color
            DisabledBorderColor: =gblAppStyles.ButtonPrimary.DisabledBorderColor
            DisabledColor: =gblAppStyles.ButtonPrimary.DisabledColor
            DisabledFill: =gblAppStyles.ButtonPrimary.DisabledFill
            Fill: =gblAppStyles.ButtonPrimary.Fill
            FocusedBorderColor: =gblAppStyles.ButtonPrimary.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.ButtonPrimary.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            Height: =44
            HoverBorderColor: =gblAppStyles.ButtonPrimary.HoverBorderColor
            HoverColor: =gblAppStyles.ButtonPrimary.HoverColor
            HoverFill: =gblAppStyles.ButtonPrimary.HoverFill
            OnSelect: |
                =UpdateContext({locBlockUserInput: true});
                // Set Bulletin Variable to Blank(), for new record
                Set(
                    gblRecordBulletin,
                    Blank()
                );
                // Navigate to the Detail Screen
                Navigate(
                    'Mobile Bulletin Detail Screen',
                    ScreenTransition.None
                );
                // [Screen Reader Start]
                UpdateContext(
                    {
                        locScreenReaderAnnouncedText: With(
                            {
                                varAnnouncedText: With(
                                    {
                                        varDefault: "Navigating to add a new bulletin",
                                        varOOBTextId: "btnBulletins_NewBulletin__Announced"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextId = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            },
                            If(
                                locScreenReaderAnnouncedText = varAnnouncedText,
                                Concatenate(
                                    varAnnouncedText,
                                    " "
                                ),
                                varAnnouncedText
                            )
                        )
                    }
                );
                // [Screen Reader End]
                UpdateContext({locBlockUserInput: false});
            PressedBorderColor: =gblAppStyles.ButtonPrimary.PressedBorderColor
            PressedColor: =gblAppStyles.ButtonPrimary.PressedColor
            PressedFill: =gblAppStyles.ButtonPrimary.PressedFill
            RadiusBottomLeft: =gblAppStyles.ButtonPrimary.RadiusBottomLeft
            RadiusBottomRight: =gblAppStyles.ButtonPrimary.RadiusBottomRight
            RadiusTopLeft: =gblAppStyles.ButtonPrimary.RadiusTopLeft
            RadiusTopRight: =gblAppStyles.ButtonPrimary.RadiusTopRight
            Size: =gblAppStyles.ButtonPrimary.Size
            Text: |
                =With(
                {
                varDefault: "New bulletin",
                varOOBTextId: "btnMobileBulletins_NewBulletin__Text"
                },
                With(
                {
                varLocalizedText: LookUp(
                colLocalization,
                OOBTextId = varOOBTextId,
                LocalizedText
                )
                },
                Coalesce(
                varLocalizedText,
                varDefault
                )
                )
                )
            Tooltip: |-
                =With(
                {
                varDefault: "Click to create a new bulletin",
                varOOBTextId: "btnMobileBulletins_NewBulletin__Tooltip"
                },
                With(
                {
                varLocalizedText: LookUp(
                colLocalization,
                OOBTextId = varOOBTextId,
                LocalizedText
                )
                },
                Coalesce(
                varLocalizedText,
                varDefault
                )
                )
                )
            Width: =Parent.Width - (2*Self.X)
            X: =gblPadding.Page
            Y: =Parent.Height - Self.Height -gblPadding.Page
            ZIndex: =1

    cnvMobileBulletins As fluidGrid.fluidGridWithBlankCard:
        BorderThickness: =0
        Height: =conMobileBulletins_Footer.Y - Self.Y //Parent.Height - Self.Y
        Width: =Parent.Width
        X: =0*0
        Y: =conMobileBulletins_Header.Y + conMobileBulletins_Header.Height
        ZIndex: =2

        dtcMobileBulletins As dataCard:
            BorderColor: =RGBA(0, 0, 0, 1)
            BorderStyle: =BorderStyle.Solid
            BorderThickness: =0
            DisplayMode: =DisplayMode.Edit
            Fill: =RGBA(0, 0, 0, 0)
            Height: =Parent.Height
            Width: =Parent.Width
            X: =0
            Y: =0
            ZIndex: =1

            galMobileBulletins As gallery.galleryVertical:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Bulletins",
                            varOOBTextId: "galMobileBulletins__AccessibleLabel"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                BorderColor: =RGBA(0, 0, 0, 0)
                Height: =(CountRows(Self.AllItems) * (Self.TemplateHeight + Self.TemplatePadding)) + Self.TemplatePadding
                ItemAccessibleLabel: |-
                    =If(
                    ThisItem.IsSelected = true,
                    With(
                        {
                            varDefault: "Selected",
                            varOOBTextId: "galMobileBulletins_SelectedItems__AccessibleLabel_selected"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    ),
                    
                    With(
                        {
                            varDefault: "Not selected",
                            varOOBTextId: "galMobileBulletins_SelectedItems__AccessibleLabel_notselected"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                    
                    )
                Items: |-
                    =If(
                        locDisplayDrafts,
                        Filter(
                            Bulletins,
                            'Bulletins (Views)'.'Publication Group: Drafts'
                        ),
                        Filter(
                            Bulletins,
                            'Bulletins (Views)'.'Publication Group: Published'
                        )
                    )
                Layout: =Layout.Vertical
                LoadingSpinner: =LoadingSpinner.Data
                OnSelect: |
                    =/*If(
                        locDisplayDrafts,*/
                        Set(
                            gblRecordBulletin,
                            ThisItem
                        );
                        Navigate(
                            'Mobile Bulletin Detail Screen',
                            ScreenTransition.None,
                            {
                                locValue_Category: ThisItem.Category,
                                locValue_Featured: ThisItem.'Featured Time-frame',
                                locValue_Body: ThisItem.Body,
                                locValue_Title: ThisItem.Title,
                                locValue_Time: Text(
                                    ThisItem.'Publish On',
                                    DateTimeFormat.ShortTime
                                )
                            }
                        )
                ShowScrollbar: =false
                TemplatePadding: =0
                TemplateSize: =44
                Width: =Parent.Width
                X: =0*0
                Y: =0*0
                ZIndex: =1

                shpGalMobileBulletins_Divider As rectangle:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    DisabledFill: =gblAppStyles.Dividers.Elements
                    DisplayMode: =DisplayMode.Disabled
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =1
                    Width: =Parent.Width - Self.X
                    X: =gblPadding.Page
                    Y: =43
                    ZIndex: =2

                btnGalMobileBulletins_Select As button:
                    Align: =Align.Left
                    AutoDisableOnSelect: =false
                    BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
                    BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
                    Color: =gblAppStyles.ButtonTransparent.Color
                    DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                    DisabledColor: =gblAppStyles.ButtonTransparent.DisabledColor
                    DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
                    Fill: =gblAppStyles.ButtonTransparent.Fill
                    FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
                    FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
                    Font: =Font.'Segoe UI'
                    Height: =Parent.TemplateHeight
                    HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
                    HoverColor: =gblAppStyles.ButtonTransparent.HoverColor
                    HoverFill: =gblAppStyles.Gallery.HoverFill
                    OnSelect: =Select(Parent)
                    PaddingLeft: =gblPadding.Page
                    PaddingRight: =12
                    PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
                    PressedColor: =gblAppStyles.ButtonTransparent.PressedColor
                    PressedFill: =gblAppStyles.Gallery.PressedFill
                    RadiusBottomLeft: =gblAppStyles.ButtonTransparent.RadiusBottomLeft
                    RadiusBottomRight: =gblAppStyles.ButtonTransparent.RadiusBottomRight
                    RadiusTopLeft: =gblAppStyles.ButtonTransparent.RadiusTopLeft
                    RadiusTopRight: =gblAppStyles.ButtonTransparent.RadiusTopRight
                    Size: =gblAppStyles.ButtonTransparent.Size
                    Text: =ThisItem.Title
                    Tooltip: =ThisItem.Title
                    Width: =Parent.TemplateWidth - (2* Self.X)
                    X: =2*1
                    ZIndex: =3

    conMobileBulletins_Header As groupContainer:
        Height: =lblMobileBulletins_TitleColumn.Y + lblMobileBulletins_TitleColumn.Height
        Width: =Parent.Width
        ZIndex: =3

        lblMobileBulletins_TitleColumn As label:
            BorderColor: =gblAppStyles.Label.BorderColor
            BorderThickness: =gblAppStyles.Label.BorderThickness
            Color: =gblAppStyles.Label.Color
            DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
            DisabledColor: |
                =gblAppStyles.Label.DisabledColor
            DisabledFill: =gblAppStyles.Label.DisabledFill
            DisplayMode: =DisplayMode.View
            Fill: =gblAppStyles.Label.Fill
            FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            Height: =44
            HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
            HoverColor: =gblAppStyles.Label.HoverColor
            HoverFill: =gblAppStyles.Label.HoverFill
            OnSelect: =
            PaddingBottom: =4
            PaddingLeft: =20
            PaddingRight: =4
            PaddingTop: =4
            PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
            PressedColor: =gblAppStyles.Label.PressedColor
            PressedFill: =gblAppStyles.Label.PressedFill
            Size: =gblAppStyles.Label.Size.Small
            Text: |-
                =With(
                {
                varDefault: "Title",
                varOOBTextId: "lblMobileBulletins_TitleColumn__Text"
                },
                With(
                {
                varLocalizedText: LookUp(
                colLocalization,
                OOBTextId = varOOBTextId,
                LocalizedText
                )
                },
                Coalesce(
                varLocalizedText,
                varDefault
                )
                )
                )
            VerticalAlign: =VerticalAlign.Bottom
            Width: =Parent.Width
            Wrap: =false
            X: =0*0
            Y: =btnMobileBulletins_View_Drafts.Y + btnMobileBulletins_View_Drafts.Height
            ZIndex: =1

        btnMobileBulletins_View_Drafts As button:
            Align: =Align.Left
            BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
            BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
            Color: |-
                =If(
                    locDisplayDrafts,
                    gblAppStyles.ButtonTransparent.HoverColor,
                    gblAppStyles.ButtonTransparent.DisabledColor
                )
            DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
            DisabledColor: =gblAppStyles.ButtonTransparent.DisabledColor
            DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
            Fill: =gblAppStyles.ButtonTransparent.Fill
            FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            Height: =32
            HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
            HoverColor: =gblAppStyles.ButtonTransparent.Color
            HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
            OnSelect: |-
                =UpdateContext({locDisplayDrafts: true});
                
                //screen reader start
                UpdateContext(
                    {
                        locScreenReaderAnnouncedText: With(
                            {
                                varAnnouncedText: With(
                                    {
                                        varDefault: "Only draft bulletins are shown",
                                        varOOBTextId: "btnMobileBulletins_View_Drafts__Announced"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextId = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            },
                            If(
                                locScreenReaderAnnouncedText = varAnnouncedText,
                                Concatenate(
                                    varAnnouncedText,
                                    " "
                                ),
                                varAnnouncedText
                            )
                        )
                    }
                );
                //screen reader end
            PaddingLeft: =gblPadding.Page / 2
            PaddingRight: =0
            PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
            PressedColor: =gblAppStyles.ButtonTransparent.PressedColor
            PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
            RadiusBottomLeft: =gblAppStyles.ButtonTransparent.RadiusBottomLeft
            RadiusBottomRight: =gblAppStyles.ButtonTransparent.RadiusBottomRight
            RadiusTopLeft: =gblAppStyles.ButtonTransparent.RadiusTopLeft
            RadiusTopRight: =gblAppStyles.ButtonTransparent.RadiusTopRight
            Size: =gblAppStyles.ButtonTransparent.Size
            Text: |-
                =With(
                    {
                        varDefault: "Drafts",
                        varOOBTextId: "btnMobileBulletins_View_Drafts__Text"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextId = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                ) & Char(10) & Char(13) & If(
                    locDisplayDrafts,
                    " selected",
                    " not selected"
                )
            Tooltip: |-
                =With(
                {
                varDefault: "Click to display only draft bulletins",
                varOOBTextId: "btnMobileBulletins_View_Drafts__Tooltip"
                },
                With(
                {
                varLocalizedText: LookUp(
                colLocalization,
                OOBTextId = varOOBTextId,
                LocalizedText
                )
                },
                Coalesce(
                varLocalizedText,
                varDefault
                )
                )
                )
            Underline: =locDisplayDrafts
            VerticalAlign: =VerticalAlign.Top
            Width: =90
            X: =gblPadding.Page / 2
            Y: =lblMobileBulletins_Header.Y + lblMobileBulletins_Header.Height
            ZIndex: =2

        btnMobileBulletins_View_Published As button:
            Align: =Align.Left
            BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
            BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
            Color: =If(!locDisplayDrafts,gblAppStyles.ButtonTransparent.HoverColor,gblAppStyles.ButtonTransparent.DisabledColor)
            DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
            DisabledColor: =gblAppStyles.ButtonTransparent.DisabledColor
            DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
            Fill: =gblAppStyles.ButtonTransparent.Fill
            FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            Height: =32
            HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
            HoverColor: =gblAppStyles.ButtonTransparent.Color
            HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
            OnSelect: |-
                =UpdateContext({locDisplayDrafts: false});
                
                //screen reader start
                UpdateContext(
                    {
                        locScreenReaderAnnouncedText: With(
                            {
                                varAnnouncedText: With(
                                    {
                                        varDefault: "Only published bulletins are shown",
                                        varOOBTextId: "btnMobileBulletins_View_Published__Announced"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextId = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            },
                            If(
                                locScreenReaderAnnouncedText = varAnnouncedText,
                                Concatenate(
                                    varAnnouncedText,
                                    " "
                                ),
                                varAnnouncedText
                            )
                        )
                    }
                );
                //screen reader end
            PaddingLeft: =gblPadding.Page / 2
            PaddingRight: =0
            PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
            PressedColor: =gblAppStyles.ButtonTransparent.PressedColor
            PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
            RadiusBottomLeft: =gblAppStyles.ButtonTransparent.RadiusBottomLeft
            RadiusBottomRight: =gblAppStyles.ButtonTransparent.RadiusBottomRight
            RadiusTopLeft: =gblAppStyles.ButtonTransparent.RadiusTopLeft
            RadiusTopRight: =gblAppStyles.ButtonTransparent.RadiusTopRight
            Size: =gblAppStyles.ButtonTransparent.Size
            Text: |-
                =With(
                    {
                        varDefault: "Published",
                        varOOBTextId: "btnMobileBulletins_View_Published__Text"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextId = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                ) & Char(10) & Char(13) & If(
                    !locDisplayDrafts,
                    " selected",
                    " not selected"
                )
            Tooltip: |-
                =With(
                {
                varDefault: "Click to display only published bulletins",
                varOOBTextId: "btnMobileBulletins_View_Published__Tooltip"
                },
                With(
                {
                varLocalizedText: LookUp(
                colLocalization,
                OOBTextId = varOOBTextId,
                LocalizedText
                )
                },
                Coalesce(
                varLocalizedText,
                varDefault
                )
                )
                )
            Underline: =!locDisplayDrafts
            VerticalAlign: =VerticalAlign.Top
            Width: =90
            X: =100
            Y: =lblMobileBulletins_Header.Y + lblMobileBulletins_Header.Height
            ZIndex: =3

        lblMobileBulletins_Header As label:
            BorderColor: =gblAppStyles.Label.BorderColor
            BorderThickness: =gblAppStyles.Label.BorderThickness
            Color: =gblAppStyles.Label.Color
            DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
            DisabledColor: |
                =gblAppStyles.Label.DisabledColor
            DisabledFill: =gblAppStyles.Label.DisabledFill
            DisplayMode: =DisplayMode.View
            Fill: =gblAppStyles.Label.Fill
            FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Bold
            Height: =44*1
            HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
            HoverColor: =gblAppStyles.Label.HoverColor
            HoverFill: =gblAppStyles.Label.HoverFill
            OnSelect: =
            PaddingBottom: =4
            PaddingLeft: =20
            PaddingRight: =4
            PaddingTop: =4
            PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
            PressedColor: =gblAppStyles.Label.PressedColor
            PressedFill: =gblAppStyles.Label.PressedFill
            Role: =TextRole.Heading1
            Size: =gblAppStyles.Label.Size.Large
            Text: |-
                =With(
                {
                varDefault: "Bulletins",
                varOOBTextId: "lblMobileBulletins_Header__Text"
                },
                With(
                {
                varLocalizedText: LookUp(
                colLocalization,
                OOBTextId = varOOBTextId,
                LocalizedText
                )
                },
                Coalesce(
                varLocalizedText,
                varDefault
                )
                )
                )
            Width: =Parent.Width
            Wrap: =false
            X: =0*0
            Y: =48*1
            ZIndex: =4

    comMobileHeader_Bulletins As comMobileHeader:
        Fill: =comMobileHeader_Bulletins.inputStyles.Background.Fill
        inputAboutIcon: |-
            =With(
                {
                    varImageRecord: LookUp(
                        staticIcons,
                        staticIconName = If(
                            App.ActiveScreen = 'About Screen',
                            "Info filled",
                            "Info"
                        )
                    ),
                    varColor: gblAppStyles.Icons.Color
                },
                With(
                    {
                        varImageData: Concatenate(
                            "data:image/svg+xml;utf8, ",
                            EncodeUrl(
                                Concatenate(
                                    "<svg viewBox='",
                                    varImageRecord.staticIconViewbox,
                                    "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                    varImageRecord.staticIconPath,
                                    "' fill='#",
                                    varColor,
                                    "'/></svg>"
                                )
                            )
                        )
                    },
                    varImageData
                )
            )
        inputAboutScreen: ='About Screen'
        inputColors: =gblAppColors
        inputDisableTabbing: =locVisibleMenu
        inputSettingsIcon: |-
            =With(
                {
                    varImageRecord: LookUp(
                        staticIcons,
                        staticIconName = If(
                            App.ActiveScreen = 'Settings Screen',
                            "Settings filled",
                            "Settings"
                        )
                    ),
                    varColor: gblAppStyles.Icons.Color
                },
                With(
                    {
                        varImageData: Concatenate(
                            "data:image/svg+xml;utf8, ",
                            EncodeUrl(
                                Concatenate(
                                    "<svg viewBox='",
                                    varImageRecord.staticIconViewbox,
                                    "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                    varImageRecord.staticIconPath,
                                    "' fill='#",
                                    varColor,
                                    "'/></svg>"
                                )
                            )
                        )
                    },
                    varImageData
                )
            )
        inputSettingsScreen: ='Settings Screen'
        inputStyles: =gblAppStyles
        Visible: =false
        X: =0*0
        Y: =0*0
        ZIndex: =4

    conModalDialog_MobileBulletins As groupContainer:
        Fill: =gblAppStyles.Dialogs.Fill
        Height: =Parent.Height
        Visible: =locVisibleMenu
        Width: =Parent.Width
        X: =0*0
        Y: =0*0
        ZIndex: =5

        lblModalDialog_MobileBulletins_Cancel As label:
            BorderColor: =RGBA(0, 0, 0, 0)
            Color: =RGBA(0, 0, 0, 0)
            FocusedBorderThickness: =0.25
            Height: =Parent.Height
            OnSelect: |-
                =// Close the dialog window
                UpdateContext({locVisibleMenu: false})
            Text: |-
                =With(
                {
                varDefault: "Cancel",
                varOOBTextId: "lblModalDialog_MobileBulletins_Cancel__Text"
                },
                With(
                {
                varLocalizedText: LookUp(
                colLocalization,
                OOBTextId = varOOBTextId,
                LocalizedText
                )
                },
                Coalesce(
                varLocalizedText,
                varDefault
                )
                )
                )
            Tooltip: |-
                =With(
                {
                varDefault: "Click to close the dialog window",
                varOOBTextId: "lblModalDialog_MobileBulletins_Cancel__Tooltip"
                },
                With(
                {
                varLocalizedText: LookUp(
                colLocalization,
                OOBTextId = varOOBTextId,
                LocalizedText
                )
                },
                Coalesce(
                varLocalizedText,
                varDefault
                )
                )
                )
            Width: =Parent.Width
            X: =0*0
            Y: =0*0
            ZIndex: =1

        conModalDialog_MobileBulletins_Menu As groupContainer:
            Fill: =galMobileMenu_Bulletins.Fill
            Height: =Parent.Height
            Width: =Parent.Width * .5
            X: =0*0
            Y: =0*0
            ZIndex: =2

            galMobileMenu_Bulletins As gallery.galleryVertical:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Navigation menu items",
                            varOOBTextId: "galMobileMenu_Bulletins__AccessibleLabel"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                BorderColor: =RGBA(0, 0, 0, 0)
                Fill: =gblAppStyles.Background.Fill
                Height: =Parent.Height -Self.Y
                ItemAccessibleLabel: |-
                    =If(
                    ThisItem.IsSelected = true,
                    With(
                        {
                            varDefault: "Selected",
                            varOOBTextId: "galMobileMenu_Bulletins_SelectedItems__AccessibleLabel_selected"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    ),
                    
                    With(
                        {
                            varDefault: "Not selected",
                            varOOBTextId: "galMobileMenu_Bulletins_SelectedItems__AccessibleLabel_notselected"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                    
                    )
                Items: =colMobileMenu
                Layout: =Layout.Vertical
                OnSelect: =
                TemplatePadding: =8
                TemplateSize: =44
                Width: =Parent.Width
                X: =0*0
                Y: =(2*imgMobileBulletins_Menu.Y) + imgMobileBulletins_Menu.Height
                ZIndex: =1

                btnGalMenuMobileMenu_Bulletins As button:
                    Align: =Align.Left
                    AutoDisableOnSelect: =false
                    BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
                    BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
                    Color: =gblAppStyles.ButtonTransparent.Color
                    DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                    DisabledColor: =gblAppStyles.ButtonTransparent.DisabledColor
                    DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
                    Fill: =gblAppStyles.ButtonTransparent.Fill
                    FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
                    FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Normal
                    Height: =Parent.TemplateHeight
                    HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
                    HoverColor: =gblAppStyles.ButtonTransparent.HoverColor
                    HoverFill: =gblAppStyles.Gallery.HoverFill
                    OnSelect: |-
                        =Navigate(ThisItem.menuScreen);
                        UpdateContext({locVisibleMenu: false})
                    PaddingLeft: =12
                    PaddingRight: =12
                    PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
                    PressedColor: =gblAppStyles.ButtonTransparent.PressedColor
                    PressedFill: =gblAppStyles.Gallery.PressedFill
                    RadiusBottomLeft: =gblAppStyles.ButtonTransparent.RadiusBottomLeft
                    RadiusBottomRight: =gblAppStyles.ButtonTransparent.RadiusBottomRight
                    RadiusTopLeft: =gblAppStyles.ButtonTransparent.RadiusTopLeft
                    RadiusTopRight: =gblAppStyles.ButtonTransparent.RadiusTopRight
                    Size: =gblAppStyles.ButtonTransparent.Size
                    Text: |-
                        =With(
                            {
                                varDefault: "Bulletins",
                                varOOBTextId: "btnGalMenuMobileMenu_Bulletins__Text_bulletins"
                            },
                            With(
                                {
                                    varLocalizedText: LookUp(
                                        colLocalization,
                                        OOBTextId = varOOBTextId,
                                        LocalizedText
                                    )
                                },
                                Coalesce(
                                    varLocalizedText,
                                    varDefault
                                )
                            )
                        )
                    Tooltip: =ThisItem.menuLabel
                    Width: =Parent.TemplateWidth
                    ZIndex: =2

    imgMobileBulletins_Menu As image:
        AccessibleLabel: |-
            =/*With(
                {
                    varDefault: "Click to navigate back to home screen",
                    varOOBTextId: "imgBulletinDetail_Actions_Back__AccessibleLabel__AccessibleLabel"
                },
                With(
                    {
                        varLocalizedText: LookUp(
                            colLocalization,
                            OOBTextId = varOOBTextId,
                            LocalizedText
                        )
                    },
                    Coalesce(
                        varLocalizedText,
                        varDefault
                    )
                )
            )*/
            /*"Click the hamburger icon to show bulletins menu"*/
            With(
                {
                    varDefault: "Click to toggle navigation menu",
                    varOOBTextId: "imgMobileBulletins_Menu__AccessibleLabel"
                },
                With(
                    {
                        varLocalizedText: LookUp(
                            colLocalization,
                            OOBTextId = varOOBTextId,
                            LocalizedText
                        )
                    },
                    Coalesce(
                        varLocalizedText,
                        varDefault
                    )
                )
            )
        BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
        DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
        Fill: =gblAppStyles.ButtonTransparent.Fill
        FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
        FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
        Height: =44*1
        HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
        HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
        Image: |-
            =With(
                {
                    varImageRecord: LookUp(
                        staticIcons,
                        staticIconName = "Menu"
                    ),
                    varColor: gblAppStyles.Icons.Color_Gray
                },
                With(
                    {
                        varImageData: Concatenate(
                            "data:image/svg+xml;utf8, ",
                            EncodeUrl(
                                Concatenate(
                                    "<svg viewBox='",
                                    varImageRecord.staticIconViewbox,
                                    "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                    varImageRecord.staticIconPath,
                                    "' fill='#",
                                    varColor,
                                    "'/></svg>"
                                )
                            )
                        )
                    },
                    varImageData
                )
            )
        OnSelect: |-
            =UpdateContext({locVisibleMenu:!locVisibleMenu})
        PaddingBottom: =12
        PaddingLeft: =8
        PaddingRight: =8
        PaddingTop: =12
        PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
        PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
        TabIndex: =1
        Tooltip: =Self.AccessibleLabel
        Width: =44*1
        ZIndex: =6

    lblBlockUserInput_MobileBulletins As label:
        DisabledFill: =RGBA(0, 0, 0, 0.05)
        DisplayMode: =DisplayMode.Disabled
        Font: =Font.'Segoe UI'
        Height: =Parent.Height
        Text: =""
        Visible: =locBlockUserInput
        Width: =Parent.Width
        X: =0*0
        Y: =0*0
        ZIndex: =7

    imgMobileHeader_Settings_1 As image:
        Height: =24
        Image: |-
            =With(
                {
                    varImageRecord: LookUp(
                        staticIcons,
                        staticIconName = If(
                            App.ActiveScreen = 'Settings Screen',
                            "Settings filled",
                            "Settings"
                        )
                    ),
                    varColor: gblAppStyles.Icons.Color
                },
                With(
                    {
                        varImageData: Concatenate(
                            "data:image/svg+xml;utf8, ",
                            EncodeUrl(
                                Concatenate(
                                    "<svg viewBox='",
                                    varImageRecord.staticIconViewbox,
                                    "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                    varImageRecord.staticIconPath,
                                    "' fill='#",
                                    varColor,
                                    "'/></svg>"
                                )
                            )
                        )
                    },
                    varImageData
                )
            )
        OnSelect: =
        PaddingBottom: =2
        PaddingLeft: =2
        PaddingRight: =2
        PaddingTop: =2
        Visible: =true//!IsBlankOrError(comMobileHeader.inputSettingsScreen)
        Width: =If(Self.Visible,24,0)
        X: =Parent.Width - Self.Width - 20
        Y: =12
        ZIndex: =8

    btnMobileHeader_Settings_1 As button:
        AutoDisableOnSelect: =false
        BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
        BorderThickness: =1.5
        Color: =Transparent
        DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
        DisabledColor: =Self.Color
        DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
        Fill: =Transparent
        FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
        FocusedBorderThickness: =1
        Font: =Font.'Segoe UI'
        FontWeight: |
            =FontWeight.Normal
        Height: =imgMobileHeader_Settings_1.Height
        HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
        HoverColor: =Self.Color
        HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
        OnSelect: =Navigate('Settings Screen',Fade)
        PressedColor: =Self.Color
        PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
        RadiusBottomLeft: =5
        RadiusBottomRight: =5
        RadiusTopLeft: =5
        RadiusTopRight: =5
        Size: =gblAppStyles.ButtonTransparent.Size
        TabIndex: =1
        Text: ="Settings"
        Visible: =true//!IsBlankOrError(comMobileHeader.inputSettingsScreen)
        Width: =imgMobileHeader_Settings_1.Width
        X: =imgMobileHeader_Settings_1.X
        Y: =12
        ZIndex: =9

    imgMobileHeader_About_1 As image:
        Height: =24
        Image: |-
            =With(
                {
                    varImageRecord: LookUp(
                        staticIcons,
                        staticIconName = If(
                            App.ActiveScreen = 'About Screen',
                            "Info filled",
                            "Info"
                        )
                    ),
                    varColor: gblAppStyles.Icons.Color
                },
                With(
                    {
                        varImageData: Concatenate(
                            "data:image/svg+xml;utf8, ",
                            EncodeUrl(
                                Concatenate(
                                    "<svg viewBox='",
                                    varImageRecord.staticIconViewbox,
                                    "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                    varImageRecord.staticIconPath,
                                    "' fill='#",
                                    varColor,
                                    "'/></svg>"
                                )
                            )
                        )
                    },
                    varImageData
                )
            )
        OnSelect: =
        PaddingBottom: =2
        PaddingLeft: =2
        PaddingRight: =2
        PaddingTop: =2
        Visible: =true//!IsBlankOrError(comMobileHeader.inputAboutScreen)
        Width: =If(Self.Visible,24,0)
        X: =imgMobileHeader_Settings_1.X - Self.Width - 10
        Y: =12
        ZIndex: =10

    btnMobileHeader_About_1 As button:
        AutoDisableOnSelect: =false
        BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
        BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
        Color: =Transparent
        DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
        DisabledColor: =Self.Color
        DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
        Fill: =Transparent
        FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
        FocusedBorderThickness: =1
        Font: =Font.'Segoe UI'
        FontWeight: |-
            =
                FontWeight.Bold
        Height: =imgMobileHeader_About_1.Height
        HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
        HoverColor: =Self.Color
        HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
        OnSelect: =Navigate('About Screen',Fade)
        PressedColor: =Self.Color
        PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
        RadiusBottomLeft: =5
        RadiusBottomRight: =5
        RadiusTopLeft: =5
        RadiusTopRight: =5
        Size: =gblAppStyles.ButtonTransparent.Size
        TabIndex: =1
        Text: ="About"
        Visible: =true//!IsBlankOrError(comMobileHeader.inputAboutScreen)
        Width: =imgMobileHeader_About_1.Width
        X: =imgMobileHeader_About_1.X
        Y: =12
        ZIndex: =11

