"'Bulletin Detail Screen' As screen":
    Fill: =gblAppStyles.Background.Fill
    LoadingSpinner: =LoadingSpinner.Controls
    LoadingSpinnerColor: =gblAppStyles.ButtonPrimary.Fill
    OnHidden: |-
        =Reset(txtBulletinDetail_Title);
        Reset(txtBulletinDetail_Subtitle);
        Reset(rteBulletinDetail_Body);
        // Reset(addBulletinDetail_Image);
        Reset(txtBulletinDetail_VideoUrl_Input);
        Reset(tglBulletinDetail_Actions_ReadyForReview);
        Reset(drpBulletinDetail_Category);
        Reset(drpBulletinDetail_MakeFeatured);
        Reset(tglBulletinDetail_Schedule);
        Reset(drpBulletinDetail_ScheduleDate);
        Reset(drpBulletinDetail_ScheduleTime);
        Reset(txtBulletinDetail_ButtonTitle);
        Reset(txtBulletinDetail_ButtonURL);
        Reset(txtBulletinDetail_Author);
        UpdateContext(
            {
                locSelectedStockImage: Blank(),
                locSelectedCategory: Blank(),
                locImageUpdateType: Blank(),
                locVisibleStockImage: false,
                locConfirmedReadyReview: false,
                locVisibleDialog: false,
                locVisibleDialogVideoUrl: false,
                locVisibleDialogPreviewBulletin: false,
                locVisibleDialogDelete: false,
                locVisibleDialogReadyForReview: false,
                locSetFocusTimerStart: false
            }
        )
    OnVisible: |-
        =UpdateContext({locResetAddPic: false});
        UpdateContext({locResetAddPic: true})
            

    tmrSetFocus_BulletinDetail As timer:
        AutoStart: =locSetFocusTimerStart
        Color: =RGBA(0, 0, 0, 0)
        DisplayMode: =DisplayMode.Disabled
        Duration: =100
        Fill: =RGBA(0, 0, 0, 0)
        Height: =0
        HoverFill: =Transparent
        OnTimerEnd: |
            =Switch(
                locSetFocusControlTarget,
                "btnBulletinReader_Close",
                SetFocus(btnBulletinReader_Close),
                "btnBulletinDetail_Preview",
                SetFocus(btnBulletinDetail_Preview),
                "txtBulletinDetail_VideoUrl_Input",
                SetFocus(txtBulletinDetail_VideoUrl_Input),
                "btnBulletinDetail_EditVideo",
                SetFocus(btnBulletinDetail_EditVideo),
                "icnBulletinDetail_Delete_Cancel",
                SetFocus(icnBulletinDetail_Delete_Cancel),
                "btnBulletinDetail_Footer_Delete",
                SetFocus(btnBulletinDetail_Footer_Delete)
            );
        OnTimerStart: =
        Size: =0
        TabIndex: =-1
        Visible: =false
        Width: =0
        X: =Parent.Width - Self.Width
        Y: =Parent.Height - Self.Height
        ZIndex: =1

    lblAnnounce_BulletinDetail As label:
        DisplayMode: =DisplayMode.Disabled
        Height: =0*0
        Live: =Live.Polite
        PaddingBottom: =0
        PaddingLeft: =0
        PaddingRight: =0
        PaddingTop: =0
        Text: =locScreenReaderAnnouncedText // This text is announced by screen readers, when the variable is updated
        Visible: =false
        Width: =0*0
        X: =Parent.Width - Self.Width
        Y: =Parent.Height - Self.Height
        ZIndex: =2

    cnvBulletinDetail As fluidGrid.fluidGridWithBlankCard:
        BorderThickness: =0
        Height: =Parent.Height - Self.Y
        Width: =Parent.Width
        Y: =conBulletinDetail_Actions.Y + conBulletinDetail_Actions.Height
        ZIndex: =3

        dtcBulletinDetail_Settings As dataCard:
            BorderColor: =RGBA(0, 0, 0, 1)
            BorderStyle: =BorderStyle.Solid
            BorderThickness: =0
            DisplayMode: =DisplayMode.Edit
            Fill: =RGBA(0, 0, 0, 0)
            Height: |-
                =Switch(
                    'Bulletin Detail Screen'.Size,
                    Small,
                    300,
                    88
                )
            Width: =Min(Parent.Width,1200)//ScreenSize.Large
            X: =0
            Y: =0
            ZIndex: =1

            lblBulletinDetail_Category As label:
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                DisabledColor: |
                    =gblAppStyles.Label.DisabledColor
                DisabledFill: =gblAppStyles.Label.DisabledFill
                DisplayMode: =DisplayMode.View
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                Height: =36
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                OnSelect: =
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Size: =gblAppStyles.Label.Size.Medium
                Text: |-
                    =With(
                    {
                    varDefault: "Category",
                    varOOBTextId: "lblBulletinDetail_Category__Text"
                    },
                    With(
                    {
                    varLocalizedText: LookUp(
                    colLocalization,
                    OOBTextId = varOOBTextId,
                    LocalizedText
                    )
                    },
                    Coalesce(
                    varLocalizedText,
                    varDefault
                    )
                    )
                    )
                Width: =drpBulletinDetail_Category.Width
                Wrap: =false
                X: =gblPadding.Page
                Y: =0*0
                ZIndex: =4

            drpBulletinDetail_Category As dropdown:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Drop down of categories",
                            varOOBTextId: "drpBulletinDetail_Category__AccessibleLabel"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                BorderColor: =gblAppStyles.Dropdown.BorderColor
                BorderThickness: =gblAppStyles.Dropdown.BorderThickness
                ChevronBackground: =gblAppStyles.Dropdown.ChevronBackground
                ChevronDisabledBackground: =gblAppStyles.Dropdown.ChevronDisabledBackground
                ChevronDisabledFill: =gblAppStyles.Dropdown.ChevronDisabledFill
                ChevronFill: =gblAppStyles.Dropdown.ChevronFill
                ChevronHoverBackground: =gblAppStyles.Dropdown.ChevronHoverBackground
                ChevronHoverFill: =gblAppStyles.Dropdown.ChevronHoverFill
                Color: =gblAppStyles.Dropdown.Color
                Default: =locSelectedCategory
                DisabledBorderColor: =gblAppStyles.Dropdown.DisabledBorderColor
                DisabledColor: =gblAppStyles.Dropdown.DisabledColor
                DisabledFill: =gblAppStyles.Dropdown.DisabledFill
                Fill: =gblAppStyles.Dropdown.Fill
                FocusedBorderColor: =gblAppStyles.Dropdown.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Dropdown.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                Height: =32
                HoverBorderColor: =gblAppStyles.Dropdown.HoverBorderColor
                HoverColor: =gblAppStyles.Dropdown.HoverColor
                HoverFill: =gblAppStyles.Dropdown.HoverFill
                Items: =Filter('Bulletin Categories','Bulletin Categories (Views)'.'Active Bulletin Categories')
                OnChange: |-
                    =UpdateContext({locSelectedCategory_New: Self.SelectedText.Name});
                    // [Screen Reader Start]
                    UpdateContext(
                        {
                            locScreenReaderAnnouncedText: With(
                                {
                                    varAnnouncedText: With(
                                        {
                                            varDefault: Self.Selected.Name & " is now selected",
                                            varOOBTextId: "drpBulletinDetail_Category__Announcement",
                                            varParam0: Self.Selected.Name
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextId = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            If(
                                                IsBlankOrError(varParam0),
                                                Coalesce(
                                                    varLocalizedText,
                                                    varDefault
                                                ),
                                                Coalesce(
                                                    Substitute(
                                                        varLocalizedText,
                                                        "{0}",
                                                        Text(varParam0)
                                                    ),
                                                    varDefault
                                                )
                                            )
                                        )
                                    )
                                },
                                If(
                                    locScreenReaderAnnouncedText = varAnnouncedText,
                                    Concatenate(
                                        varAnnouncedText,
                                        " "
                                    ),
                                    varAnnouncedText
                                )
                            )
                        }
                    );
                    // [Screen Reader End]
                OnSelect: |-
                    =false;
                    //screen reader start
                    UpdateContext(
                        {
                            locScreenReaderAnnouncedText: With(
                                {
                                    varAnnouncedText: With(
                                        {
                                            varDefault: "{0} is now selected",
                                            varOOBTextId: "drpBulletinDetail_Category__Announcement"
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextId = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            Coalesce(
                                                varLocalizedText,
                                                varDefault
                                            )
                                        )
                                    )
                                },
                                If(
                                    locScreenReaderAnnouncedText = varAnnouncedText,
                                    Concatenate(
                                        varAnnouncedText,
                                        " "
                                    ),
                                    varAnnouncedText
                                )
                            )
                        }
                    );
                    //screen reader end
                PressedBorderColor: =gblAppStyles.Dropdown.PressedBorderColor
                PressedColor: =gblAppStyles.Dropdown.PressedColor
                PressedFill: =gblAppStyles.Dropdown.PressedFill
                Reset: =true
                SelectionColor: =gblAppStyles.Dropdown.SelectionColor
                SelectionFill: =gblAppStyles.Dropdown.SelectionFill
                Size: =gblAppStyles.Dropdown.Size
                TabIndex: =If(locVisibleDialog,-1,0)
                Tooltip: =Self.AccessibleLabel
                Width: =drpBulletinDetail_MakeFeatured.X - Self.X - gblPadding.Page
                X: =gblPadding.Page
                Y: =lblBulletinDetail_Category.Height
                ZIndex: =6

            lblBulletinDetail_MakeFeatured As label:
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                DisabledColor: |
                    =gblAppStyles.Label.DisabledColor
                DisabledFill: =gblAppStyles.Label.DisabledFill
                DisplayMode: =DisplayMode.View
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                Height: =36
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                OnSelect: =
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Size: =gblAppStyles.Label.Size.Medium
                Text: |-
                    =With(
                    {
                    varDefault: "Make it featured",
                    varOOBTextId: "lblBulletinDetail_MakeFeatured__Text"
                    },
                    With(
                    {
                    varLocalizedText: LookUp(
                    colLocalization,
                    OOBTextId = varOOBTextId,
                    LocalizedText
                    )
                    },
                    Coalesce(
                    varLocalizedText,
                    varDefault
                    )
                    )
                    )
                Width: =drpBulletinDetail_MakeFeatured.Width
                Wrap: =false
                X: =drpBulletinDetail_MakeFeatured.X
                Y: =0*0
                ZIndex: =7

            drpBulletinDetail_MakeFeatured As dropdown:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Drop down of time periods to make bulletin featured",
                            varOOBTextId: "drpBulletinDetail_MakeFeatured__AccessibleLabel"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                BorderColor: =gblAppStyles.Dropdown.BorderColor
                BorderThickness: =gblAppStyles.Dropdown.BorderThickness
                ChevronBackground: =gblAppStyles.Dropdown.ChevronBackground
                ChevronDisabledBackground: =gblAppStyles.Dropdown.ChevronDisabledBackground
                ChevronDisabledFill: =gblAppStyles.Dropdown.ChevronDisabledFill
                ChevronFill: =gblAppStyles.Dropdown.ChevronFill
                ChevronHoverBackground: =gblAppStyles.Dropdown.ChevronHoverBackground
                ChevronHoverFill: =gblAppStyles.Dropdown.ChevronHoverFill
                Color: =gblAppStyles.Dropdown.Color
                Default: |-
                    =Coalesce(
                        gblRecordBulletin.'Featured Time-frame',
                        'Bulletin Featured Timeframe'.'Do not feature'
                    )
                DisabledBorderColor: =gblAppStyles.Dropdown.DisabledBorderColor
                DisabledColor: =gblAppStyles.Dropdown.DisabledColor
                DisabledFill: =gblAppStyles.Dropdown.DisabledFill
                Fill: =gblAppStyles.Dropdown.Fill
                FocusedBorderColor: =gblAppStyles.Dropdown.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Dropdown.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                Height: =32
                HoverBorderColor: =gblAppStyles.Dropdown.HoverBorderColor
                HoverColor: =gblAppStyles.Dropdown.HoverColor
                HoverFill: =gblAppStyles.Dropdown.HoverFill
                Items: =Choices('Bulletin Featured Timeframe')
                OnChange: |-
                    =// [Screen Reader Start]
                    /*
                    UpdateContext(
                        {
                            locScreenReaderAnnouncedText: With(
                                {
                                    varAnnouncedText: With(
                                        {
                                            varDefault: Self.Selected.Value & " is now selected",
                                            varOOBTextId: "drpBulletinDetail_MakeFeatured__Announcement",
                                            varParam0: Self.Selected.Value
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextId = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            If(
                                                IsBlankOrError(varParam0),
                                                Coalesce(
                                                    varLocalizedText,
                                                    varDefault
                                                ),
                                                Coalesce(
                                                    Substitute(
                                                        varLocalizedText,
                                                        "{0}",
                                                        Text(varParam0)
                                                    ),
                                                    varDefault
                                                )
                                            )
                                        )
                                    )
                                },
                                If(
                                    locScreenReaderAnnouncedText = varAnnouncedText,
                                    Concatenate(
                                        varAnnouncedText,
                                        " "
                                    ),
                                    varAnnouncedText
                                )
                            )
                        }
                    );
                    */
                    // [Screen Reader End]
                OnSelect: |-
                    =false;
                    //screen reader start
                    UpdateContext(
                        {
                            locScreenReaderAnnouncedText: With(
                                {
                                    varAnnouncedText: With(
                                        {
                                            varDefault: "{0} is now selected",
                                            varOOBTextId: "drpBulletinDetail_MakeFeatured__Announcement"
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextId = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            Coalesce(
                                                varLocalizedText,
                                                varDefault
                                            )
                                        )
                                    )
                                },
                                If(
                                    locScreenReaderAnnouncedText = varAnnouncedText,
                                    Concatenate(
                                        varAnnouncedText,
                                        " "
                                    ),
                                    varAnnouncedText
                                )
                            )
                        }
                    );
                    //screen reader end
                PressedBorderColor: =gblAppStyles.Dropdown.PressedBorderColor
                PressedColor: =gblAppStyles.Dropdown.PressedColor
                PressedFill: =gblAppStyles.Dropdown.PressedFill
                SelectionColor: =gblAppStyles.Dropdown.SelectionColor
                SelectionFill: =gblAppStyles.Dropdown.SelectionFill
                Size: =gblAppStyles.Dropdown.Size
                TabIndex: =If(locVisibleDialog,-1,0)
                Tooltip: =Self.AccessibleLabel
                Width: =172
                X: =tglBulletinDetail_Schedule.X - Self.Width - gblPadding.Page
                Y: =lblBulletinDetail_MakeFeatured.Height
                ZIndex: =8

            lblBulletinDetail_Schedule As label:
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                DisabledColor: |
                    =gblAppStyles.Label.DisabledColor
                DisabledFill: =gblAppStyles.Label.DisabledFill
                DisplayMode: =DisplayMode.View
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                Height: =36
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                OnSelect: =
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Size: =gblAppStyles.Label.Size.Medium
                Text: |-
                    =With(
                    {
                    varDefault: "Schedule?",
                    varOOBTextId: "lblBulletinDetail_Schedule__Text"
                    },
                    With(
                    {
                    varLocalizedText: LookUp(
                    colLocalization,
                    OOBTextId = varOOBTextId,
                    LocalizedText
                    )
                    },
                    Coalesce(
                    varLocalizedText,
                    varDefault
                    )
                    )
                    )
                Width: =tglBulletinDetail_Schedule.Width
                Wrap: =false
                X: =tglBulletinDetail_Schedule.X
                Y: =0*0
                ZIndex: =9

            tglBulletinDetail_Schedule As toggleSwitch:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Toggle indicating bulletin is scheduled for publishing",
                            varOOBTextId: "tglBulletinDetail_Schedule__AccessibleLabel"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                BorderColor: =gblAppStyles.Toggle.BorderColor
                BorderThickness: =gblAppStyles.Toggle.BorderThickness
                Color: =gblAppStyles.Toggle.Color
                Default: =gblRecordBulletin.'Scheduled?' = 'Scheduled? (Bulletins)'.Yes
                DisabledBorderColor: =gblAppStyles.Toggle.DisabledBorderColor
                DisabledColor: =gblAppStyles.Toggle.DisabledColor
                FalseFill: =gblAppStyles.Toggle.FalseFill
                FalseHoverFill: =gblAppStyles.Toggle.FalseHoverFill
                FalseText: |
                    =With(
                        {
                            varDefault: "No",
                            varOOBTextId: "tglBulletinDetail_Schedule__Value-False"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                FocusedBorderColor: =gblAppStyles.Toggle.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Toggle.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                HandleFill: =If(Self.Value,gblAppStyles.Toggle.HandleFillTrue,gblAppStyles.Toggle.HandleFillFalse)
                Height: =32
                HoverBorderColor: =gblAppStyles.Toggle.HoverBorderColor
                OnCheck: |-
                    =// [Screen Reader Start]
                    UpdateContext(
                        {
                            locScreenReaderAnnouncedText: With(
                                {
                                    varAnnouncedText: With(
                                        {
                                            varDefault: "Bulletin is scheduled for publishing", // Default Text to use
                                            varOOBTextId: "tglBulletinDetail_Schedule__Announcement-True" // Localized version
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextId = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            Coalesce(
                                                varLocalizedText,
                                                varDefault
                                            )
                                        )
                                    )
                                },
                                If(
                                    locScreenReaderAnnouncedText = varAnnouncedText,
                                    Concatenate(
                                        varAnnouncedText,
                                        " "
                                    ),
                                    varAnnouncedText // If clicked twice, will append blank space to update variable
                                )
                            )
                        }
                    );
                    // [Screen Reader End]
                OnSelect: |-
                    =false;
                    //screen reader start
                    UpdateContext(
                        {
                            locScreenReaderAnnouncedText: With(
                                {
                                    varAnnouncedText: With(
                                        {
                                            varDefault: "Bulletin is not scheduled for publishing",
                                            varOOBTextId: "tglBulletinDetail_Schedule__Announcement"
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextId = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            Coalesce(
                                                varLocalizedText,
                                                varDefault
                                            )
                                        )
                                    )
                                },
                                If(
                                    locScreenReaderAnnouncedText = varAnnouncedText,
                                    Concatenate(
                                        varAnnouncedText,
                                        " "
                                    ),
                                    varAnnouncedText
                                )
                            )
                        }
                    );
                    //screen reader end
                OnUncheck: |-
                    =// [Screen Reader Start]
                    UpdateContext(
                        {
                            locScreenReaderAnnouncedText: With(
                                {
                                    varAnnouncedText: With(
                                        {
                                            varDefault: "Bulletin is not scheduled for publishing", // Default Text to use
                                            varOOBTextId: "tglBulletinDetail_Schedule__Announcement-False" // Localized version
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextId = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            Coalesce(
                                                varLocalizedText,
                                                varDefault
                                            )
                                        )
                                    )
                                },
                                If(
                                    locScreenReaderAnnouncedText = varAnnouncedText,
                                    Concatenate(
                                        varAnnouncedText,
                                        " "
                                    ),
                                    varAnnouncedText // If clicked twice, will append blank space to update variable
                                )
                            )
                        }
                    );
                    // [Screen Reader End]
                PressedBorderColor: =gblAppStyles.Toggle.PressedBorderColor
                Size: =gblAppStyles.Toggle.Size
                TabIndex: =If(locVisibleDialog,-1,0)
                Tooltip: =Self.AccessibleLabel
                TrueFill: =gblAppStyles.Toggle.TrueFill
                TrueHoverFill: =gblAppStyles.Toggle.TrueHoverFill
                TrueText: |-
                    =With(
                        {
                            varDefault: "Yes",
                            varOOBTextId: "tglBulletinDetail_Schedule__Value-True"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                X: =drpBulletinDetail_ScheduleDate.X - Self.Width - gblPadding.Page
                Y: =((drpBulletinDetail_MakeFeatured.Y + drpBulletinDetail_MakeFeatured.Height) - (Self.Height - (drpBulletinDetail_MakeFeatured.Y))) / 2
                ZIndex: =10

            drpBulletinDetail_ScheduleDate As dropdown:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Drop down of available date for bulletin publish schedule",
                            varOOBTextId: "drpBulletinDetail_ScheduleDate__AccessibleLabel"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                BorderColor: =gblAppStyles.Dropdown.BorderColor
                BorderThickness: =gblAppStyles.Dropdown.BorderThickness
                ChevronBackground: =gblAppStyles.Dropdown.ChevronBackground
                ChevronDisabledBackground: =gblAppStyles.Dropdown.ChevronDisabledBackground
                ChevronDisabledFill: =gblAppStyles.Dropdown.ChevronDisabledFill
                ChevronFill: =gblAppStyles.Dropdown.ChevronFill
                ChevronHoverBackground: =gblAppStyles.Dropdown.ChevronHoverBackground
                ChevronHoverFill: =gblAppStyles.Dropdown.ChevronHoverFill
                Color: =gblAppStyles.Dropdown.Color
                Default: |-
                    =Coalesce(
                        Text(
                            gblRecordBulletin.'Publish On',
                            ShortDate
                        ),
                        Text(
                            Today(),
                            ShortDate
                        )
                    )
                DisabledBorderColor: =gblAppStyles.Dropdown.DisabledBorderColor
                DisabledColor: =gblAppStyles.Dropdown.DisabledColor
                DisabledFill: =gblAppStyles.Dropdown.DisabledFill
                DisplayMode: =If(tglBulletinDetail_Schedule.Value, DisplayMode.Edit,DisplayMode.Disabled)
                Fill: =gblAppStyles.Dropdown.Fill
                FocusedBorderColor: =gblAppStyles.Dropdown.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Dropdown.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                Height: =32
                HoverBorderColor: =gblAppStyles.Dropdown.HoverBorderColor
                HoverColor: =gblAppStyles.Dropdown.HoverColor
                HoverFill: =gblAppStyles.Dropdown.HoverFill
                Items: |-
                    =With(
                        {
                            varStartDate: DateAdd(
                                Today(),
                                Min(
                                    -1,
                                    DateDiff(
                                        Today(),
                                        Coalesce(
                                            gblRecordBulletin.'Publish On',
                                            Today()
                                        ),
                                        Days
                                    ) - 1
                                ),
                                Days
                            )
                        },
                        ForAll(
                            Sequence(90),
                            {
                                valDate: Text(
                                    DateAdd(
                                        varStartDate,
                                        Value,
                                        Days
                                    ),
                                    ShortDate
                                )
                            }
                        )
                    )
                OnChange: |-
                    =// [Screen Reader Start]
                    UpdateContext(
                        {
                            locScreenReaderAnnouncedText: With(
                                {
                                    varAnnouncedText: With(
                                        {
                                            varDefault: Text(Self.Selected.valDate,ShortDate,gblUserLanguage) & " is now selected",
                                            varOOBTextId: "drpBulletinDetail_ScheduleDate__Announcement",
                                            varParam0: Text(Self.Selected.valDate,ShortDate,gblUserLanguage)
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextId = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            If(
                                                IsBlankOrError(varParam0),
                                                Coalesce(
                                                    varLocalizedText,
                                                    varDefault
                                                ),
                                                Coalesce(
                                                    Substitute(
                                                        varLocalizedText,
                                                        "{0}",
                                                        Text(varParam0)
                                                    ),
                                                    varDefault
                                                )
                                            )
                                        )
                                    )
                                },
                                If(
                                    locScreenReaderAnnouncedText = varAnnouncedText,
                                    Concatenate(
                                        varAnnouncedText,
                                        " "
                                    ),
                                    varAnnouncedText
                                )
                            )
                        }
                    );
                    // [Screen Reader End]
                OnSelect: |-
                    =false;
                    
                    //screen reader start
                    UpdateContext(
                        {
                            locScreenReaderAnnouncedText: With(
                                {
                                    varAnnouncedText: With(
                                        {
                                            varDefault: "{0} is now selected",
                                            varOOBTextId: "drpBulletinDetail_ScheduleDate__Announcement"
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextId = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            Coalesce(
                                                varLocalizedText,
                                                varDefault
                                            )
                                        )
                                    )
                                },
                                If(
                                    locScreenReaderAnnouncedText = varAnnouncedText,
                                    Concatenate(
                                        varAnnouncedText,
                                        " "
                                    ),
                                    varAnnouncedText
                                )
                            )
                        }
                    );
                    //screen reader end
                PressedBorderColor: =gblAppStyles.Dropdown.PressedBorderColor
                PressedColor: =gblAppStyles.Dropdown.PressedColor
                PressedFill: =gblAppStyles.Dropdown.PressedFill
                SelectionColor: =gblAppStyles.Dropdown.SelectionColor
                SelectionFill: =gblAppStyles.Dropdown.SelectionFill
                Size: =gblAppStyles.Dropdown.Size
                TabIndex: =If(locVisibleDialog,-1,0)
                Tooltip: =Self.AccessibleLabel
                Width: =128
                X: =drpBulletinDetail_ScheduleTime.X - Self.Width - gblPadding.Page
                Y: =drpBulletinDetail_MakeFeatured.Y
                ZIndex: =11

            drpBulletinDetail_ScheduleTime As dropdown:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Drop down of available times for bulletin publish schedule",
                            varOOBTextId: "drpBulletinDetail_ScheduleTime__AccessibleLabel"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                BorderColor: =gblAppStyles.Dropdown.BorderColor
                BorderThickness: =gblAppStyles.Dropdown.BorderThickness
                ChevronBackground: =gblAppStyles.Dropdown.ChevronBackground
                ChevronDisabledBackground: =gblAppStyles.Dropdown.ChevronDisabledBackground
                ChevronDisabledFill: =gblAppStyles.Dropdown.ChevronDisabledFill
                ChevronFill: =gblAppStyles.Dropdown.ChevronFill
                ChevronHoverBackground: =gblAppStyles.Dropdown.ChevronHoverBackground
                ChevronHoverFill: =gblAppStyles.Dropdown.ChevronHoverFill
                Color: =gblAppStyles.Dropdown.Color
                Default: |-
                    =Coalesce(
                        Text(
                            gblRecordBulletin.'Publish On',
                            ShortTime
                        ),
                        "12:00 PM"
                    )
                DisabledBorderColor: =gblAppStyles.Dropdown.DisabledBorderColor
                DisabledColor: =gblAppStyles.Dropdown.DisabledColor
                DisabledFill: =gblAppStyles.Dropdown.DisabledFill
                DisplayMode: =If(tglBulletinDetail_Schedule.Value, DisplayMode.Edit,DisplayMode.Disabled)
                Fill: =gblAppStyles.Dropdown.Fill
                FocusedBorderColor: =gblAppStyles.Dropdown.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Dropdown.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                Height: =32
                HoverBorderColor: =gblAppStyles.Dropdown.HoverBorderColor
                HoverColor: =gblAppStyles.Dropdown.HoverColor
                HoverFill: =gblAppStyles.Dropdown.HoverFill
                Items: |-
                    =With(
                        {varStartDate: DateValue("01/21/2021 12:00 AM")},
                        ForAll(
                            Sequence(48),
                            {
                                valTime: Text(
                                    DateAdd(
                                        varStartDate,
                                        ThisRecord.Value * 30,
                                        Minutes
                                    ),
                                    ShortTime
                                )
                            }
                        )
                    )
                OnChange: |-
                    =// [Screen Reader Start]
                    UpdateContext(
                        {
                            locScreenReaderAnnouncedText: With(
                                {
                                    varAnnouncedText: With(
                                        {
                                            varDefault: Self.Selected.valTime & " is now selected",
                                            varOOBTextId: "drpBulletinDetail_ScheduleTime__Announcement",
                                            varParam0: Self.Selected.valTime
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextId = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            If(
                                                IsBlankOrError(varParam0),
                                                Coalesce(
                                                    varLocalizedText,
                                                    varDefault
                                                ),
                                                Coalesce(
                                                    Substitute(
                                                        varLocalizedText,
                                                        "{0}",
                                                        Text(varParam0)
                                                    ),
                                                    varDefault
                                                )
                                            )
                                        )
                                    )
                                },
                                If(
                                    locScreenReaderAnnouncedText = varAnnouncedText,
                                    Concatenate(
                                        varAnnouncedText,
                                        " "
                                    ),
                                    varAnnouncedText
                                )
                            )
                        }
                    );
                    // [Screen Reader End]
                OnSelect: |-
                    =false;
                    //screen reader start
                    UpdateContext(
                        {
                            locScreenReaderAnnouncedText: With(
                                {
                                    varAnnouncedText: With(
                                        {
                                            varDefault: "{0} is now selected",
                                            varOOBTextId: "drpBulletinDetail_ScheduleTime__Announcement"
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextId = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            Coalesce(
                                                varLocalizedText,
                                                varDefault
                                            )
                                        )
                                    )
                                },
                                If(
                                    locScreenReaderAnnouncedText = varAnnouncedText,
                                    Concatenate(
                                        varAnnouncedText,
                                        " "
                                    ),
                                    varAnnouncedText
                                )
                            )
                        }
                    );
                    //screen reader end
                PressedBorderColor: =gblAppStyles.Dropdown.PressedBorderColor
                PressedColor: =gblAppStyles.Dropdown.PressedColor
                PressedFill: =gblAppStyles.Dropdown.PressedFill
                SelectionColor: =gblAppStyles.Dropdown.SelectionColor
                SelectionFill: =gblAppStyles.Dropdown.SelectionFill
                Size: =gblAppStyles.Dropdown.Size
                TabIndex: =If(locVisibleDialog,-1,0)
                Tooltip: =Self.AccessibleLabel
                Width: =120
                X: =Parent.Width - Self.Width - gblPadding.Page 
                Y: =drpBulletinDetail_MakeFeatured.Y
                ZIndex: =12

        dtcBulletinDetail_Content As dataCard.blankCard:
            BorderColor: =RGBA(0, 0, 0, 1)
            BorderStyle: =BorderStyle.Solid
            DisplayMode: =DisplayMode.Edit
            Fill: =RGBA(0, 0, 0, 0)
            Height: =btnBulletinDetail_Background.Y + btnBulletinDetail_Background.Height + gblPadding.Page
            Width: =Min(Parent.Width,1200)//ScreenSize.Large
            X: =0
            Y: =0
            ZIndex: =2

            lblBulletinDetail_EntryHeader As label:
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                DisabledColor: |
                    =gblAppStyles.Label.DisabledColor
                DisabledFill: =gblAppStyles.Label.DisabledFill
                DisplayMode: =DisplayMode.View
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                Height: =36
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                OnSelect: =
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Size: =gblAppStyles.Label.Size.Medium
                Text: |-
                    =With(
                    {
                    varDefault: "Bulletin details",
                    varOOBTextId: "lblBulletinDetail_EntryHeader__Text"
                    },
                    With(
                    {
                    varLocalizedText: LookUp(
                    colLocalization,
                    OOBTextId = varOOBTextId,
                    LocalizedText
                    )
                    },
                    Coalesce(
                    varLocalizedText,
                    varDefault
                    )
                    )
                    )
                Width: =Parent.Width - (2* gblPadding.Page)
                Wrap: =false
                X: =gblPadding.Page
                Y: =0*0
                ZIndex: =1

            btnBulletinDetail_Background As button:
                BorderColor: =gblAppStyles.ButtonBackground.BorderColor
                BorderThickness: =gblAppStyles.ButtonBackground.BorderThickness
                Color: =gblAppStyles.ButtonBackground.Color
                DisabledBorderColor: =gblAppStyles.ButtonBackground.DisabledBorderColor
                DisabledColor: =Transparent
                DisabledFill: =gblAppStyles.ButtonBackground.DisabledFill
                DisplayMode: =DisplayMode.Disabled
                Fill: =gblAppStyles.ButtonBackground.Fill
                FocusedBorderColor: =gblAppStyles.ButtonBackground.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.ButtonBackground.FocusedBorderThickness
                Height: =(rteBulletinDetail_Body.Y + rteBulletinDetail_Body.Height) - Self.Y + gblPadding.Page
                HoverBorderColor: =gblAppStyles.ButtonBackground.HoverBorderColor
                HoverColor: =Transparent
                HoverFill: =gblAppStyles.ButtonBackground.HoverFill
                OnSelect: =
                PressedBorderColor: =gblAppStyles.ButtonBackground.PressedBorderColor
                PressedColor: =Transparent
                PressedFill: =gblAppStyles.ButtonBackground.PressedFill
                RadiusBottomLeft: =gblAppStyles.ButtonBackground.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.ButtonBackground.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.ButtonBackground.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.ButtonBackground.RadiusTopRight
                Size: =gblAppStyles.ButtonBackground.Size
                Text: =lblBulletinDetail_EntryHeader.Text
                Tooltip: =Self.Text
                Width: =dtcBulletinDetail_Settings.Width - (2*gblPadding.Page)
                X: =gblPadding.Page
                Y: =lblBulletinDetail_EntryHeader.Y + lblBulletinDetail_EntryHeader.Height
                ZIndex: =2

            htmBulletinDetail_HtmlPreviewSize As htmlViewer:
                AutoHeight: =true
                BorderColor: =RGBA(0, 0, 0, 0)
                Color: =RGBA(0, 0, 0, 0)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledFill: =RGBA(0, 0, 0, 0)
                DisplayMode: =DisplayMode.Disabled
                Fill: =RGBA(0, 0, 0, 0)
                Font: =Font.'Segoe UI'
                HtmlText: =rteBulletinDetail_Body.HtmlText
                PaddingBottom: =32
                PaddingLeft: =24
                PaddingRight: =24
                PaddingTop: =60
                Size: =12
                Width: =rteBulletinDetail_Body.Width
                X: =rteBulletinDetail_Body.X
                Y: =txtBulletinDetail_Subtitle.Y + txtBulletinDetail_Subtitle.Height + gblPadding.Page
                ZIndex: =3

            rteBulletinDetail_Body As richTextEditor:
                AccessibleLabel: |-
                    =With(
                    {
                    varDefault: "Rich text editor the bulletin body. Click to edit.",
                    varOOBTextId: "rteBulletinDetail_Body__AccessibleLabel"
                    },
                    With(
                    {
                    varLocalizedText: LookUp(
                    colLocalization,
                    OOBTextId = varOOBTextId,
                    LocalizedText
                    )
                    },
                    Coalesce(
                    varLocalizedText,
                    varDefault
                    )
                    )
                    )
                BorderColor: =gblAppStyles.Dividers.Elements
                Default: |
                    =gblRecordBulletin.Body
                DisplayMode: =Parent.DisplayMode
                Height: =Max(htmBulletinDetail_HtmlPreviewSize.Height,200)
                Size: =gblAppStyles.Label.Size.Medium
                TabIndex: =If(locVisibleDialog,-1,0)
                Width: =btnBulletinDetail_Background.Width - (2* gblPadding.Page)
                X: =btnBulletinDetail_Background.X + gblPadding.Page
                Y: =txtBulletinDetail_Subtitle.Y + txtBulletinDetail_Subtitle.Height + gblPadding.Page
                ZIndex: =4

            txtBulletinDetail_Subtitle As text:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Text input to add subtitle",
                            varOOBTextId: "txtBulletinDetail_Subtitle__AccessibleLabel"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                BorderColor: =gblAppStyles.TextInput.BorderColor
                BorderThickness: =gblAppStyles.TextInput.BorderThickness
                Color: =gblAppStyles.TextInput.Color
                Default: =Text(gblRecordBulletin.Subtitle)
                DelayOutput: =true
                DisabledBorderColor: =gblAppStyles.TextInput.DisabledBorderColor
                DisabledColor: =gblAppStyles.TextInput.DisabledColor
                DisabledFill: =gblAppStyles.TextInput.DisabledFill
                Fill: =gblAppStyles.TextInput.Fill
                FocusedBorderColor: =gblAppStyles.TextInput.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.TextInput.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                Height: =32
                HintText: |-
                    =With(
                    {
                    varDefault: "Subtitle",
                    varOOBTextId: "txtBulletinDetail_Subtitle__HintText"
                    },
                    With(
                    {
                    varLocalizedText: LookUp(
                    colLocalization,
                    OOBTextId = varOOBTextId,
                    LocalizedText
                    )
                    },
                    Coalesce(
                    varLocalizedText,
                    varDefault
                    )
                    )
                    )
                HoverBorderColor: =gblAppStyles.TextInput.HoverBorderColor
                HoverColor: =gblAppStyles.TextInput.HoverColor
                HoverFill: =gblAppStyles.TextInput.HoverFill
                MaxLength: =100
                PaddingLeft: =5
                PressedBorderColor: =gblAppStyles.TextInput.PressedBorderColor
                PressedColor: =gblAppStyles.TextInput.PressedColor
                PressedFill: =gblAppStyles.TextInput.PressedFill
                RadiusBottomLeft: =gblAppStyles.TextInput.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.TextInput.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.TextInput.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.TextInput.RadiusTopRight
                Size: =gblAppStyles.TextInput.Size
                TabIndex: =If(locVisibleDialog,-1,0)
                Tooltip: =Self.HintText
                Width: =txtBulletinDetail_Title.Width
                X: =txtBulletinDetail_Title.X
                Y: =txtBulletinDetail_Title.Y + txtBulletinDetail_Title.Height + 8
                ZIndex: =5

            txtBulletinDetail_Title As text:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Text input to add title",
                            varOOBTextId: "txtBulletinDetail_Title__AccessibleLabel"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                BorderColor: =gblAppStyles.TextInput.BorderColor
                BorderThickness: =gblAppStyles.TextInput.BorderThickness
                Color: =gblAppStyles.TextInput.Color
                Default: =Text(gblRecordBulletin.Title)
                DelayOutput: =true
                DisabledBorderColor: =gblAppStyles.TextInput.DisabledBorderColor
                DisabledColor: =gblAppStyles.TextInput.DisabledColor
                DisabledFill: =gblAppStyles.TextInput.DisabledFill
                Fill: =gblAppStyles.TextInput.Fill
                FocusedBorderColor: =gblAppStyles.TextInput.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.TextInput.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Bold
                Height: =32
                HintText: |-
                    =With(
                    {
                    varDefault: "Title",
                    varOOBTextId: "txtBulletinDetail_Title__HintText"
                    },
                    With(
                    {
                    varLocalizedText: LookUp(
                    colLocalization,
                    OOBTextId = varOOBTextId,
                    LocalizedText
                    )
                    },
                    Coalesce(
                    varLocalizedText,
                    varDefault
                    )
                    )
                    )
                HoverBorderColor: =gblAppStyles.TextInput.HoverBorderColor
                HoverColor: =gblAppStyles.TextInput.HoverColor
                HoverFill: =gblAppStyles.TextInput.HoverFill
                MaxLength: =100
                PaddingLeft: =5
                PressedBorderColor: =gblAppStyles.TextInput.PressedBorderColor
                PressedColor: =gblAppStyles.TextInput.PressedColor
                PressedFill: =gblAppStyles.TextInput.PressedFill
                RadiusBottomLeft: =gblAppStyles.TextInput.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.TextInput.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.TextInput.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.TextInput.RadiusTopRight
                Size: =gblAppStyles.TextInput.Size + 2
                TabIndex: =If(locVisibleDialog,-1,0)
                Tooltip: =Self.HintText
                Width: =btnBulletinDetail_Background.Width - (2*gblPadding.Page)
                X: =btnBulletinDetail_Background.X + gblPadding.Page
                Y: =imgBulletinDetail_HeaderImage.Y + imgBulletinDetail_HeaderImage.Height + gblPadding.Page
                ZIndex: =6

            vidBulletinDetail_VideoUrl As videoPlayback:
                AccessibleLabel: |
                    =With(
                    {
                    varDefault: "Click to watch the video",
                    varOOBTextId: "vidBulletinDetail_VideoUrl__AccessibleLabel"
                    },
                    With(
                    {
                    varLocalizedText: LookUp(
                    colLocalization,
                    OOBTextId = varOOBTextId,
                    LocalizedText
                    )
                    },
                    Coalesce(
                    varLocalizedText,
                    varDefault
                    )
                    )
                    )
                BorderColor: =Transparent
                DisplayMode: =DisplayMode.Disabled
                Fill: =gblAppStyles.ButtonSecondary.Fill
                Height: =imgBulletinDetail_HeaderImage.Height
                Media: |-
                    =If(
                        btnBulletinDetail_VideoUrl_Confirm.DisplayMode = DisplayMode.Edit,
                        Coalesce(
                            txtBulletinDetail_VideoUrl_Input.Text,
                            gblRecordBulletin.'Video URL'
                        ),
                        Blank()
                    )
                Visible: =!IsBlank(txtBulletinDetail_VideoUrl_Input.Text) And !locVisibleStockImage
                Width: =btnBulletinDetail_Background.Width - (2 * gblPadding.Page)
                X: =btnBulletinDetail_Background.X + gblPadding.Page
                Y: =btnBulletinDetail_Background.Y+ gblPadding.Page
                ZIndex: =7

            imgBulletinDetail_HeaderImage As image:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "The header image of the bulletin",
                            varOOBTextId: "imgBulletinDetail_HeaderImage__AccessibleLabel__AccessibleLabel"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Height: |-
                    =If(
                        !IsBlankOrError(Self.Image) Or locVisibleStockImage Or !IsBlankOrError(
                            Coalesce(
                                txtBulletinDetail_VideoUrl_Input.Text,
                                gblRecordBulletin.'Video URL'
                            )
                        ),
                        300,
                        72
                    )
                Image: |-
                    =Coalesce(locSelectedStockImage,addBulletinDetail_Image.Media,gblRecordBulletin.'Header Image'.Full,gblRecordBulletin.'Header Image'.Value,gblRecordBulletin.'Stock Image')
                    //If(IsBlank(Coalesce(locSelectedStockImage,addBulletinDetail_Image.Media)),If(IsBlank(gblRecordBulletin.'Header Image'.Full),gblRecordBulletin.'Stock Image',gblRecordBulletin.'Header Image'.Full),Coalesce(locSelectedStockImage,addBulletinDetail_Image.Media))
                    //Coalesce(locSelectedStockImage,addBulletinDetail_Image.Media,gblRecordBulletin.'Header Image'.Full,gblRecordBulletin.'Header Image'.Value,gblRecordBulletin.'Stock Image')
                ImagePosition: =ImagePosition.Fill
                OnSelect: |-
                    =UpdateContext({locVisibleStockImage: true});
                Tooltip: =Self.AccessibleLabel
                Visible: =!IsBlankOrError(Self.Image)
                Width: =btnBulletinDetail_Background.Width - (2 * gblPadding.Page)
                X: =btnBulletinDetail_Background.X + gblPadding.Page
                Y: =btnBulletinDetail_Background.Y + gblPadding.Page
                ZIndex: =8

            btnBulletinDetail_EditVideo As button:
                AutoDisableOnSelect: =false
                BorderColor: =gblAppStyles.ButtonSecondary.BorderColor
                BorderThickness: =gblAppStyles.ButtonSecondary.BorderThickness + 2
                Color: =gblAppStyles.ButtonSecondary.Color
                DisabledBorderColor: =gblAppStyles.ButtonSecondary.DisabledBorderColor
                DisabledColor: =gblAppStyles.ButtonSecondary.DisabledColor
                DisabledFill: =gblAppStyles.ButtonSecondary.DisabledFill
                Fill: =gblAppStyles.ButtonSecondary.Fill
                FocusedBorderColor: =gblAppStyles.ButtonPrimary.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.ButtonSecondary.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                Height: =32
                HoverBorderColor: =gblAppStyles.ButtonSecondary.HoverBorderColor
                HoverColor: =gblAppStyles.ButtonSecondary.HoverColor
                HoverFill: =gblAppStyles.ButtonSecondary.HoverFill
                OnSelect: |-
                    =// Show Modal Dialog for video url entry
                    UpdateContext(
                        {
                            locVisibleDialog: true,
                            locVisibleDialogVideoUrl: true,
                            locVisibleDialogPreviewBulletin: false
                        }
                    );
                    // [Set Focus Start]
                    UpdateContext({locSetFocusTimerStart: false});
                    UpdateContext({locSetFocusControlTarget: "txtBulletinDetail_VideoUrl_Input"});
                    UpdateContext({locSetFocusTimerStart: true});
                    // [Set Focus End]
                    // [Screen Reader Start]
                    UpdateContext(
                        {
                            locScreenReaderAnnouncedText: With(
                                {
                                    varAnnouncedText: With(
                                        {
                                            varDefault: "A dialog to enter a video URL is shown", // Default Text to use
                                            varOOBTextId: "btnBulletinDetail_EditVideo__Announced" // Localized version
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextId = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            Coalesce(
                                                varLocalizedText,
                                                varDefault
                                            )
                                        )
                                    )
                                },
                                If(
                                    locScreenReaderAnnouncedText = varAnnouncedText,
                                    Concatenate(
                                        varAnnouncedText,
                                        " "
                                    ),
                                    varAnnouncedText // If clicked twice, will append blank space to update variable
                                )
                            )
                        }
                    );
                    // [Screen Reader End]
                PressedBorderColor: =gblAppStyles.ButtonSecondary.PressedBorderColor
                PressedColor: =gblAppStyles.ButtonSecondary.PressedColor
                PressedFill: =gblAppStyles.ButtonSecondary.PressedFill
                RadiusBottomLeft: =gblAppStyles.ButtonSecondary.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.ButtonSecondary.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.ButtonSecondary.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.ButtonSecondary.RadiusTopRight
                Size: =gblAppStyles.ButtonSecondary.Size
                TabIndex: =If(locVisibleDialog,-1,0)
                Text: |-
                    =If(
                        IsBlankOrError(txtBulletinDetail_VideoUrl_Input.Text),
                        With(
                        {
                            varDefault: "Add video URL",
                            varOOBTextId: "btnBulletinDetail_EditVideo__Text-Add"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    ),
                        With(
                        {
                            varDefault: "Edit video URL",
                            varOOBTextId: "btnBulletinDetail_EditVideo__Text-Edit"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                    )
                Tooltip: =Self.Text
                Visible: =!locVisibleStockImage
                X: =btnBulletinDetail_EditImage.X + btnBulletinDetail_EditImage.Width + gblPadding.Page
                Y: =btnBulletinDetail_EditImage.Y
                ZIndex: =9

            btnBulletinDetail_EditImage As button:
                AutoDisableOnSelect: =false
                BorderColor: =gblAppStyles.ButtonSecondary.BorderColor
                BorderThickness: =gblAppStyles.ButtonSecondary.BorderThickness + 2
                Color: =gblAppStyles.ButtonSecondary.Color
                DisabledBorderColor: =gblAppStyles.ButtonSecondary.DisabledBorderColor
                DisabledColor: =gblAppStyles.ButtonSecondary.DisabledColor
                DisabledFill: =gblAppStyles.ButtonSecondary.DisabledFill
                Fill: =gblAppStyles.ButtonSecondary.Fill
                FocusedBorderColor: =gblAppStyles.ButtonPrimary.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.ButtonSecondary.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                Height: =32
                HoverBorderColor: =gblAppStyles.ButtonSecondary.HoverBorderColor
                HoverColor: =gblAppStyles.ButtonSecondary.HoverColor
                HoverFill: =gblAppStyles.ButtonSecondary.HoverFill
                OnSelect: |-
                    =// Show Stock Image selection gallery
                    UpdateContext(
                        {
                            locVisibleStockImage: true,
                            locImageUpdateType: Blank()
                        }
                    );
                    // [Screen Reader Start]
                    UpdateContext(
                        {
                            locScreenReaderAnnouncedText: With(
                                {
                                    varAnnouncedText: With(
                                        {
                                            varDefault: "A gallery of available images is shown to update the cover image",
                                            // Default Text to use
                    varOOBTextId: "btnBulletinDetail_EditImage__Announced"// Localized version
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextId = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            Coalesce(
                                                varLocalizedText,
                                                varDefault
                                            )
                                        )
                                    )
                                },
                                If(
                                    locScreenReaderAnnouncedText = varAnnouncedText,
                                    Concatenate(
                                        varAnnouncedText,
                                        " "
                                    ),
                                    varAnnouncedText// If clicked twice, will append blank space to update variable
                                )
                            )
                        }
                    );
                    // [Screen Reader End]
                PressedBorderColor: =gblAppStyles.ButtonSecondary.PressedBorderColor
                PressedColor: =gblAppStyles.ButtonSecondary.PressedColor
                PressedFill: =gblAppStyles.ButtonSecondary.PressedFill
                RadiusBottomLeft: =gblAppStyles.ButtonSecondary.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.ButtonSecondary.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.ButtonSecondary.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.ButtonSecondary.RadiusTopRight
                Size: =gblAppStyles.ButtonSecondary.Size
                TabIndex: =If(locVisibleDialog,-1,0)
                Text: |-
                    =If(
                        IsBlankOrError(imgBulletinDetail_HeaderImage.Image),
                        With(
                        {
                            varDefault: "Add cover image",
                            varOOBTextId: "btnBulletinDetail_EditImage__Text-Add"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    ),
                        With(
                        {
                            varDefault: "Edit cover image",
                            varOOBTextId: "btnBulletinDetail_EditImage__Text-Edit"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                    )
                Tooltip: =Self.Text
                Visible: =!locVisibleStockImage
                X: =imgBulletinDetail_HeaderImage.X + gblPadding.Page
                Y: =(imgBulletinDetail_HeaderImage.Y + imgBulletinDetail_HeaderImage.Height) - Self.Height - gblPadding.Page
                ZIndex: =10

            btnBulletinDetail_Reset As button:
                AutoDisableOnSelect: =false
                BorderColor: =gblAppStyles.ButtonSecondary.BorderColor
                BorderThickness: =gblAppStyles.ButtonSecondary.BorderThickness + 2
                Color: =gblAppStyles.ButtonSecondary.Color
                DisabledBorderColor: =gblAppStyles.ButtonSecondary.DisabledBorderColor
                DisabledColor: =gblAppStyles.ButtonSecondary.DisabledColor
                DisabledFill: =gblAppStyles.ButtonSecondary.DisabledFill
                Fill: =gblAppStyles.ButtonSecondary.Fill
                FocusedBorderColor: =gblAppStyles.ButtonSecondary.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.ButtonSecondary.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                Height: =32
                HoverBorderColor: =gblAppStyles.ButtonSecondary.HoverBorderColor
                HoverColor: =gblAppStyles.ButtonSecondary.HoverColor
                HoverFill: =gblAppStyles.ButtonSecondary.HoverFill
                OnSelect: |
                    =// Resets unsaved Bulletin's media
                    UpdateContext({locSelectedStockImage: Blank()});
                    Reset(vidBulletinDetail_VideoUrl);
                    Reset(txtBulletinDetail_VideoUrl_Input);
                    Reset(addBulletinDetail_Image);
                    // [Screen Reader Start]
                    UpdateContext(
                        {
                            locScreenReaderAnnouncedText: With(
                                {
                                    varAnnouncedText: With(
                                        {
                                            varDefault: "The cover image and video have been reset", // Default Text to use
                                            varOOBTextId: "btnBulletinDetail_Reset__Announced" // Localized version
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextId = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            Coalesce(
                                                varLocalizedText,
                                                varDefault
                                            )
                                        )
                                    )
                                },
                                If(
                                    locScreenReaderAnnouncedText = varAnnouncedText,
                                    Concatenate(
                                        varAnnouncedText,
                                        " "
                                    ),
                                    varAnnouncedText // If clicked twice, will append blank space to update variable
                                )
                            )
                        }
                    );
                    // [Screen Reader End]
                PressedBorderColor: =gblAppStyles.ButtonSecondary.PressedBorderColor
                PressedColor: =gblAppStyles.ButtonSecondary.PressedColor
                PressedFill: =gblAppStyles.ButtonSecondary.PressedFill
                RadiusBottomLeft: =gblAppStyles.ButtonSecondary.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.ButtonSecondary.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.ButtonSecondary.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.ButtonSecondary.RadiusTopRight
                Size: =gblAppStyles.ButtonSecondary.Size
                Text: |-
                    =With(
                    {
                    varDefault: "Reset media",
                    varOOBTextId: "btnBulletinDetail_Reset__Text"
                    },
                    With(
                    {
                    varLocalizedText: LookUp(
                    colLocalization,
                    OOBTextId = varOOBTextId,
                    LocalizedText
                    )
                    },
                    Coalesce(
                    varLocalizedText,
                    varDefault
                    )
                    )
                    )
                Tooltip: =Self.Text
                Visible: |-
                    =(!IsBlankOrError(imgBulletinDetail_HeaderImage.Image) Or !IsBlankOrError(
                        Coalesce(
                            txtBulletinDetail_VideoUrl_Input.Text,
                            gblRecordBulletin.'Video URL'
                        )
                    )) And IsBlank(gblRecordBulletin)
                Width: =120
                X: =(imgBulletinDetail_HeaderImage.X + imgBulletinDetail_HeaderImage.Width) - Self.Width -gblPadding.Page
                Y: =(imgBulletinDetail_HeaderImage.Y + imgBulletinDetail_HeaderImage.Height) - Self.Height - gblPadding.Page
                ZIndex: =11

            galBulletinDetail_StockImageSelect As gallery.galleryHorizontal:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Gallery of stock images, and user uploaded image",
                            varOOBTextId: "galBulletinDetail_StockImageSelect__AccessibleLabel"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Fill: =gblAppStyles.Background.Fill
                Height: =300
                Items: =colStockImages
                TemplateFill: =Transparent
                TemplatePadding: =0
                TemplateSize: =Self.Width / 6
                Visible: =locVisibleStockImage
                Width: =btnBulletinDetail_Background.Width - (2 * gblPadding.Page)
                WrapCount: =3
                X: =btnBulletinDetail_Background.X + gblPadding.Page
                Y: =btnBulletinDetail_Background.Y+ gblPadding.Page
                ZIndex: =12

                btnBulletinDetail_StockImageSelect_Background As button:
                    BorderColor: =Transparent
                    BorderThickness: =0
                    Color: =Transparent
                    DisabledBorderColor: =Transparent
                    DisabledColor: =gblAppStyles.ButtonBackground.DisabledColor
                    DisabledFill: |-
                        =If(
                            !IsBlank(ThisItem.appStockImage),
                            If(
                                ThisItem.appStockImage = If(
                                    !IsBlank(locSelectedStockImage),
                                    locSelectedStockImage,
                                    gblRecordBulletin.'Stock Image'
                                ),
                                gblAppStyles.ButtonPrimary.Fill,
                                Transparent
                            ),
                            locSelectedStockImage = addBulletinDetail_Image.Media,
                            gblAppStyles.ButtonPrimary.Fill,
                            Transparent
                        )
                    DisplayMode: =DisplayMode.Disabled
                    Fill: |-
                        =If(
                            !IsBlank(ThisItem.appStockImage),
                            If(
                                ThisItem.appStockImage = If(
                                    !IsBlank(locSelectedStockImage),
                                    locSelectedStockImage,
                                    gblRecordBulletin.'Stock Image'
                                ),
                                gblAppStyles.ButtonPrimary.Fill,
                                Transparent
                            ),
                            Transparent
                        )
                    FocusedBorderColor: =gblAppStyles.ButtonPrimary.FocusedBorderColor
                    FocusedBorderThickness: =2//gblAppStyles.ButtonPrimary.FocusedBorderThickness
                    Font: =Font.'Segoe UI'
                    Height: =imgBulletinDetail_StockImage.Height + 4
                    HoverBorderColor: =gblAppStyles.ButtonBackground.HoverBorderColor
                    HoverColor: =gblAppStyles.ButtonBackground.HoverColor
                    HoverFill: =gblAppStyles.ButtonBackground.HoverFill
                    OnSelect: =Select(Parent)
                    PressedBorderColor: =gblAppStyles.ButtonBackground.PressedBorderColor
                    PressedColor: =gblAppStyles.ButtonBackground.PressedColor
                    PressedFill: =gblAppStyles.ButtonBackground.PressedFill
                    RadiusBottomLeft: =4
                    RadiusBottomRight: =4
                    RadiusTopLeft: =4
                    RadiusTopRight: =4
                    Size: =gblAppStyles.ButtonBackground.Size
                    Text: ="Stock Image"
                    Tooltip: =
                    Width: =imgBulletinDetail_StockImage.Width + 4
                    X: =imgBulletinDetail_StockImage.X - 2
                    Y: =imgBulletinDetail_StockImage.Y -2
                    ZIndex: =1

                imgBulletinDetail_StockImage As image:
                    AccessibleLabel: |-
                        =With(
                            {
                                varDefault: "A stock image for bulletins",
                                varOOBTextId: "imgBulletinDetail_StockImage__AccessibleLabel__AccessibleLabel"
                            },
                            With(
                                {
                                    varLocalizedText: LookUp(
                                        colLocalization,
                                        OOBTextId = varOOBTextId,
                                        LocalizedText
                                    )
                                },
                                Coalesce(
                                    varLocalizedText,
                                    varDefault
                                )
                            )
                        )
                    BorderColor: =Transparent
                    BorderThickness: =1
                    Fill: =If(IsBlank(ThisItem.appStockImage),gblAppStyles.ButtonSecondary.Fill,Transparent)
                    FocusedBorderColor: =gblAppStyles.ButtonPrimary.FocusedBorderColor
                    FocusedBorderThickness: =2//gblAppStyles.ButtonPrimary.FocusedBorderThickness
                    Height: =Parent.TemplateHeight - (Self.Y * 2)
                    HoverBorderColor: =gblAppStyles.ButtonPrimary.Fill
                    HoverFill: =Black//gblAppStyles.Gallery.HoverFill
                    Image: |-
                        =Coalesce(ThisItem.appStockImage,addBulletinDetail_Image.Media,gblRecordBulletin.'Header Image'.Full)
                        //If(IsBlank(Coalesce(ThisItem.appStockImage,addBulletinDetail_Image.Media)),If(IsBlank(gblRecordBulletin.'Header Image'.Full),Coalesce(ThisItem.appStockImage,addBulletinDetail_Image.Media),gblRecordBulletin.'Header Image'.Full),Coalesce(ThisItem.appStockImage,addBulletinDetail_Image.Media))
                        
                        //If(IsBlank(Coalesce(locSelectedStockImage,addBulletinDetail_Image.Media)),If(IsBlank(gblRecordBulletin.'Header Image'.Full),gblRecordBulletin.'Stock Image',gblRecordBulletin.'Header Image'.Full),Coalesce(locSelectedStockImage,addBulletinDetail_Image.Media))
                        //Coalesce(locSelectedStockImage,addBulletinDetail_Image.Media,gblRecordBulletin.'Header Image'.Full,gblRecordBulletin.'Header Image'.Value,gblRecordBulletin.'Stock Image')
                        //
                    ImagePosition: =ImagePosition.Fill
                    OnSelect: |
                        =Select(Parent);
                        UpdateContext(
                            {
                                locSelectedStockImage: ThisItem.appStockImage,
                               locVisibleStockImage: false,
                                locImageUpdateType: "Stock"
                            
                            }
                        );
                        addBulletinDetail_Image.Media=Blank();
                    PressedBorderColor: =ColorFade(Self.HoverBorderColor, -20%)
                    RadiusBottomLeft: =4
                    RadiusBottomRight: =4
                    RadiusTopLeft: =4
                    RadiusTopRight: =4
                    TabIndex: =If(IsBlank(ThisItem.appStockImage),-1,0)
                    Tooltip: =Self.AccessibleLabel
                    Width: =Parent.TemplateWidth - (Self.X * 2)
                    X: =8
                    Y: =8
                    ZIndex: =2

                addBulletinDetail_Image As addMedia:
                    AccessibleLabel: |-
                        =With(
                        {
                        varDefault: "Click to add your own image",
                        varOOBTextId: "addBulletinDetail_Image__AccessibleLabel"
                        },
                        With(
                        {
                        varLocalizedText: LookUp(
                        colLocalization,
                        OOBTextId = varOOBTextId,
                        LocalizedText
                        )
                        },
                        Coalesce(
                        varLocalizedText,
                        varDefault
                        )
                        )
                        )
                    BorderColor: =gblAppStyles.ButtonSecondary.BorderColor
                    BorderThickness: =gblAppStyles.ButtonSecondary.BorderThickness
                    ChangePictureText: |-
                        =With(
                        {
                        varDefault: "Update image",
                        varOOBTextId: "addBulletinDetail_Image__ChangePictureText"
                        },
                        With(
                        {
                        varLocalizedText: LookUp(
                        colLocalization,
                        OOBTextId = varOOBTextId,
                        LocalizedText
                        )
                        },
                        Coalesce(
                        varLocalizedText,
                        varDefault
                        )
                        )
                        )
                    Color: =gblAppStyles.ButtonSecondary.Color
                    DisabledBorderColor: =gblAppStyles.ButtonSecondary.DisabledBorderColor
                    DisabledColor: =gblAppStyles.ButtonSecondary.DisabledColor
                    DisabledFill: =gblAppStyles.ButtonSecondary.DisabledFill
                    Fill: =gblAppStyles.ButtonSecondary.Fill
                    FocusedBorderColor: =gblAppStyles.ButtonSecondary.FocusedBorderColor
                    FocusedBorderThickness: =gblAppStyles.ButtonSecondary.FocusedBorderThickness
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Normal
                    Height: =galBulletinDetail_StockImageSelect.TemplateHeight - 16
                    HoverBorderColor: =gblAppStyles.ButtonSecondary.HoverBorderColor
                    HoverColor: =gblAppStyles.ButtonSecondary.HoverColor
                    HoverFill: =gblAppStyles.ButtonSecondary.HoverFill
                    OnChange: |
                        =Select(Parent);
                        UpdateContext(
                            {
                                locSelectedStockImage: Blank(),
                                locVisibleStockImage: false,
                                locImageUpdateType: "Custom"
                            }
                        );
                    OnSelect: =
                    Padding: =4
                    PressedBorderColor: =gblAppStyles.ButtonSecondary.PressedBorderColor
                    PressedColor: =gblAppStyles.ButtonSecondary.PressedColor
                    PressedFill: =gblAppStyles.ButtonSecondary.PressedFill
                    Reset: =locResetAddPic
                    Size: =gblAppStyles.Label.Size.Small
                    Text: |-
                        =If(
                            IsBlank(gblRecordBulletin.'Header Image'),
                            With(
                                {
                                    varDefault: "Add image",
                                    varOOBTextId: "addBulletinDetail_Image__Text"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextId = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            ),
                            With(
                                {
                                    varDefault: "Update image",
                                    varOOBTextId: "addBulletinDetail_Image__ChangePictureText"
                                },
                                With(
                                    {
                                        varLocalizedText: LookUp(
                                            colLocalization,
                                            OOBTextId = varOOBTextId,
                                            LocalizedText
                                        )
                                    },
                                    Coalesce(
                                        varLocalizedText,
                                        varDefault
                                    )
                                )
                            )
                        )
                    VerticalAlign: =VerticalAlign.Bottom
                    Visible: =locVisibleStockImage && IsBlank(ThisItem.appStockImage)
                    Width: =galBulletinDetail_StockImageSelect.TemplateWidth - 16
                    X: =8
                    Y: =8
                    ZIndex: =3

            imgBulletinDetail_VideoPlayButton As image:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "This bulletin has an associated video with it",
                            varOOBTextId: "imgBulletinDetail_VideoPlayButton__AccessibleLabel__AccessibleLabel"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Image: =Image_PlayVideo
                Tooltip: =Self.AccessibleLabel
                Visible: =vidBulletinDetail_VideoUrl.Visible And imgBulletinDetail_HeaderImage.Visible
                X: =((imgBulletinDetail_HeaderImage.X + imgBulletinDetail_HeaderImage.Width) - (Self.Width - imgBulletinDetail_HeaderImage.X)) / 2
                Y: =((imgBulletinDetail_HeaderImage.Y + imgBulletinDetail_HeaderImage.Height) - (Self.Height - imgBulletinDetail_HeaderImage.Y)) / 2
                ZIndex: =13

            imgBulletinDetail_Preview As image:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Click to preview this bulletin",
                            varOOBTextId: "imgBulletinDetail_Preview__AccessibleLabel"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                DisplayMode: =DisplayMode.View
                Height: =32
                Image: |-
                    =With(
                        {
                            varImageRecord: LookUp(
                                staticIcons,
                                staticIconName = "Play"
                            ),
                            varColor: gblAppStyles.Icons.Color
                        },
                        With(
                            {
                                varImageData: Concatenate(
                                    "data:image/svg+xml;utf8, ",
                                    EncodeUrl(
                                        Concatenate(
                                            "<svg viewBox='",
                                            varImageRecord.staticIconViewbox,
                                            "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                            varImageRecord.staticIconPath,
                                            "' fill='#",
                                            varColor,
                                            "'/></svg>"
                                        )
                                    )
                                )
                            },
                            varImageData
                        )
                    )
                OnSelect: =
                PaddingBottom: =(Self.Width - 26)
                PaddingLeft: =(Self.Width - 26)
                PaddingRight: =(Self.Width - 26)
                PaddingTop: =(Self.Width - 26)
                Tooltip: =Self.AccessibleLabel
                Width: =32
                X: =btnBulletinDetail_Preview.X + btnBulletinDetail_Preview.Width - Self.Width
                Y: =btnBulletinDetail_Preview.Y
                ZIndex: =14

            btnBulletinDetail_Preview As button:
                Align: =Align.Right
                BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
                BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
                Color: =gblAppStyles.ButtonTransparent.Color
                DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                DisabledColor: =gblAppStyles.ButtonTransparent.DisabledColor
                DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
                Fill: =gblAppStyles.ButtonTransparent.Fill
                FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
                Height: =imgBulletinDetail_Preview.Height
                HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
                HoverColor: =gblAppStyles.ButtonTransparent.HoverColor
                HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
                OnSelect: |-
                    =// Toggle a variable to cause the Reader component to resize the text
                    UpdateContext({locPreviewBulletinBody: Blank()});
                    UpdateContext({locPreviewBulletinBody: rteBulletinDetail_Body.HtmlText});
                    // Show the Reader
                    UpdateContext(
                        {
                            locVisibleDialog: true,
                            locVisibleDialogVideoUrl: false,
                            locVisibleDialogPreviewBulletin: true
                        }
                    );
                    // [Set Focus Start]
                    UpdateContext({locSetFocusTimerStart: false});
                    UpdateContext({locSetFocusControlTarget: "btnBulletinReader_Close"});
                    UpdateContext({locSetFocusTimerStart: true});
                    // [Set Focus End]
                    // [Screen Reader Start]
                    UpdateContext(
                        {
                            locScreenReaderAnnouncedText: With(
                                {
                                    varAnnouncedText: With(
                                        {
                                            varDefault: "A preview of the bulletin is shown", // Default Text to use
                                            varOOBTextId: "btnBulletinDetail_Preview__Announced" // Localized version
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextId = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            Coalesce(
                                                varLocalizedText,
                                                varDefault
                                            )
                                        )
                                    )
                                },
                                If(
                                    locScreenReaderAnnouncedText = varAnnouncedText,
                                    Concatenate(
                                        varAnnouncedText,
                                        " "
                                    ),
                                    varAnnouncedText // If clicked twice, will append blank space to update variable
                                )
                            )
                        }
                    );
                    // [Screen Reader End]
                PaddingLeft: =0
                PaddingRight: =imgBulletinDetail_Preview.Width
                PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
                PressedColor: =gblAppStyles.ButtonTransparent.PressedColor
                PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
                RadiusBottomLeft: =gblAppStyles.ButtonTransparent.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.ButtonTransparent.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.ButtonTransparent.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.ButtonTransparent.RadiusTopRight
                Size: =gblAppStyles.ButtonTransparent.Size
                TabIndex: =If(locVisibleDialog,-1,0)
                Text: |-
                    =With(
                    {
                    varDefault: "Preview",
                    varOOBTextId: "btnBulletinDetail_Preview__Text"
                    },
                    With(
                    {
                    varLocalizedText: LookUp(
                    colLocalization,
                    OOBTextId = varOOBTextId,
                    LocalizedText
                    )
                    },
                    Coalesce(
                    varLocalizedText,
                    varDefault
                    )
                    )
                    )
                Tooltip: =Self.Text
                Width: =120
                X: =Parent.Width - Self.Width - gblPadding.Page
                Y: =1*2
                ZIndex: =15

        dtcBulletinDetail_Button As dataCard.blankCard:
            BorderColor: =RGBA(0, 0, 0, 1)
            BorderStyle: =BorderStyle.Solid
            DisplayMode: =DisplayMode.Edit
            Fill: =RGBA(0, 0, 0, 0)
            Height: =98
            Width: =Min(Parent.Width,1200)//ScreenSize.Large
            X: =0
            Y: =2
            ZIndex: =3

            lblBulletinDetail_ButtonDetails As label:
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                DisabledColor: |
                    =gblAppStyles.Label.DisabledColor
                DisabledFill: =gblAppStyles.Label.DisabledFill
                DisplayMode: =DisplayMode.View
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                Height: =36
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                OnSelect: =
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Size: =gblAppStyles.Label.Size.Medium
                Text: |-
                    =With(
                    {
                    varDefault: "Add a button",
                    varOOBTextId: "lblBulletinDetail_ButtonDetails__Text"
                    },
                    With(
                    {
                    varLocalizedText: LookUp(
                    colLocalization,
                    OOBTextId = varOOBTextId,
                    LocalizedText
                    )
                    },
                    Coalesce(
                    varLocalizedText,
                    varDefault
                    )
                    )
                    )
                Width: =lblBulletinDetail_Author.X - Self.X
                Wrap: =false
                X: =gblPadding.Page
                Y: =0*0
                ZIndex: =2

            txtBulletinDetail_ButtonTitle As text:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Text input to add button's title",
                            varOOBTextId: "txtBulletinDetail_ButtonTitle__AccessibleLabel"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                BorderColor: =gblAppStyles.TextInput.BorderColor
                BorderThickness: =gblAppStyles.TextInput.BorderThickness
                Color: =gblAppStyles.TextInput.Color
                Default: =gblRecordBulletin.'Button Title'
                DelayOutput: =true
                DisabledBorderColor: =gblAppStyles.TextInput.DisabledBorderColor
                DisabledColor: =gblAppStyles.TextInput.DisabledColor
                DisabledFill: =gblAppStyles.TextInput.DisabledFill
                Fill: =gblAppStyles.TextInput.Fill
                FocusedBorderColor: =gblAppStyles.TextInput.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.TextInput.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                Height: =32
                HintText: |-
                    =With(
                    {
                    varDefault: "Enter the button's title",
                    varOOBTextId: "txtBulletinDetail_ButtonTitle__HintText"
                    },
                    With(
                    {
                    varLocalizedText: LookUp(
                    colLocalization,
                    OOBTextId = varOOBTextId,
                    LocalizedText
                    )
                    },
                    Coalesce(
                    varLocalizedText,
                    varDefault
                    )
                    )
                    )
                HoverBorderColor: =gblAppStyles.TextInput.HoverBorderColor
                HoverColor: =gblAppStyles.TextInput.HoverColor
                HoverFill: =gblAppStyles.TextInput.HoverFill
                MaxLength: =20
                PaddingLeft: =5
                PressedBorderColor: =gblAppStyles.TextInput.PressedBorderColor
                PressedColor: =gblAppStyles.TextInput.PressedColor
                PressedFill: =gblAppStyles.TextInput.PressedFill
                RadiusBottomLeft: =gblAppStyles.TextInput.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.TextInput.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.TextInput.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.TextInput.RadiusTopRight
                Size: =gblAppStyles.TextInput.Size
                TabIndex: =If(locVisibleDialog,-1,0)
                Tooltip: =Self.HintText
                Width: =200
                X: =lblBulletinDetail_VideoUrl_Title.X
                Y: =lblBulletinDetail_ButtonDetails.Y + lblBulletinDetail_ButtonDetails.Height
                ZIndex: =3

            lblBulletinDetail_Author As label:
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                DisabledColor: |
                    =gblAppStyles.Label.DisabledColor
                DisabledFill: =gblAppStyles.Label.DisabledFill
                DisplayMode: =DisplayMode.View
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                Height: =36
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                OnSelect: =
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Size: =gblAppStyles.Label.Size.Medium
                Text: |-
                    =With(
                    {
                    varDefault: "Author",
                    varOOBTextId: "lblBulletinDetail_Author__Text"
                    },
                    With(
                    {
                    varLocalizedText: LookUp(
                    colLocalization,
                    OOBTextId = varOOBTextId,
                    LocalizedText
                    )
                    },
                    Coalesce(
                    varLocalizedText,
                    varDefault
                    )
                    )
                    )
                Width: =280
                Wrap: =false
                X: =Parent.Width - Self.Width - gblPadding.Page
                Y: =0*0
                ZIndex: =4

            txtBulletinDetail_Author As text:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Text input to add author",
                            varOOBTextId: "txtBulletinDetail_Author__AccessibleLabel"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                BorderColor: =gblAppStyles.TextInput.BorderColor
                BorderThickness: =gblAppStyles.TextInput.BorderThickness
                Color: =gblAppStyles.TextInput.Color
                Default: =gblRecordBulletin.'Author(s)'
                DelayOutput: =true
                DisabledBorderColor: =gblAppStyles.TextInput.DisabledBorderColor
                DisabledColor: =gblAppStyles.TextInput.DisabledColor
                DisabledFill: =gblAppStyles.TextInput.DisabledFill
                Fill: =gblAppStyles.TextInput.Fill
                FocusedBorderColor: =gblAppStyles.TextInput.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.TextInput.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                Height: =32
                HintText: |-
                    =With(
                    {
                    varDefault: "Enter an author",
                    varOOBTextId: "txtBulletinDetail_Author__HintText"
                    },
                    With(
                    {
                    varLocalizedText: LookUp(
                    colLocalization,
                    OOBTextId = varOOBTextId,
                    LocalizedText
                    )
                    },
                    Coalesce(
                    varLocalizedText,
                    varDefault
                    )
                    )
                    )
                HoverBorderColor: =gblAppStyles.TextInput.HoverBorderColor
                HoverColor: =gblAppStyles.TextInput.HoverColor
                HoverFill: =gblAppStyles.TextInput.HoverFill
                MaxLength: =100
                PaddingLeft: =5
                PressedBorderColor: =gblAppStyles.TextInput.PressedBorderColor
                PressedColor: =gblAppStyles.TextInput.PressedColor
                PressedFill: =gblAppStyles.TextInput.PressedFill
                RadiusBottomLeft: =gblAppStyles.TextInput.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.TextInput.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.TextInput.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.TextInput.RadiusTopRight
                Size: =gblAppStyles.TextInput.Size
                TabIndex: =If(locVisibleDialog,-1,0)
                Tooltip: =Self.HintText
                Width: =lblBulletinDetail_Author.Width
                X: =lblBulletinDetail_Author.X
                Y: =lblBulletinDetail_Author.Y + lblBulletinDetail_Author.Height
                ZIndex: =5

            txtBulletinDetail_ButtonURL As text:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Text input to add url",
                            varOOBTextId: "txtBulletinDetail_ButtonURL__AccessibleLabel"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                BorderColor: =gblAppStyles.TextInput.BorderColor
                BorderThickness: =gblAppStyles.TextInput.BorderThickness
                Color: =gblAppStyles.TextInput.Color
                Default: =gblRecordBulletin.'Button URL'
                DelayOutput: =true
                DisabledBorderColor: =gblAppStyles.TextInput.DisabledBorderColor
                DisabledColor: =gblAppStyles.TextInput.DisabledColor
                DisabledFill: =gblAppStyles.TextInput.DisabledFill
                Fill: =gblAppStyles.TextInput.Fill
                FocusedBorderColor: =gblAppStyles.TextInput.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.TextInput.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                Height: =32
                HintText: |-
                    =With(
                    {
                    varDefault: "Enter a URL",
                    varOOBTextId: "txtBulletinDetail_ButtonURL__HintText"
                    },
                    With(
                    {
                    varLocalizedText: LookUp(
                    colLocalization,
                    OOBTextId = varOOBTextId,
                    LocalizedText
                    )
                    },
                    Coalesce(
                    varLocalizedText,
                    varDefault
                    )
                    )
                    )
                HoverBorderColor: =gblAppStyles.TextInput.HoverBorderColor
                HoverColor: =gblAppStyles.TextInput.HoverColor
                HoverFill: =gblAppStyles.TextInput.HoverFill
                MaxLength: =500
                PaddingLeft: =5
                PressedBorderColor: =gblAppStyles.TextInput.PressedBorderColor
                PressedColor: =gblAppStyles.TextInput.PressedColor
                PressedFill: =gblAppStyles.TextInput.PressedFill
                RadiusBottomLeft: =gblAppStyles.TextInput.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.TextInput.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.TextInput.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.TextInput.RadiusTopRight
                Size: =gblAppStyles.TextInput.Size
                TabIndex: =If(locVisibleDialog,-1,0)
                Tooltip: =Self.HintText
                Width: =txtBulletinDetail_Author.X - Self.X - (2 * gblPadding.Page)
                X: =txtBulletinDetail_ButtonTitle.X + txtBulletinDetail_ButtonTitle.Width + gblPadding.Page
                Y: =lblBulletinDetail_ButtonDetails.Y + lblBulletinDetail_ButtonDetails.Height
                ZIndex: =6

        dtcBulletinDetail_FooterActions As dataCard.blankCard:
            BorderColor: =RGBA(0, 0, 0, 1)
            BorderStyle: =BorderStyle.Solid
            DisplayMode: =DisplayMode.Edit
            Fill: =RGBA(0, 0, 0, 0)
            Height: =52
            Visible: =true
            Width: =Min(Parent.Width,1200)//ScreenSize.Large
            X: =0
            Y: =3
            ZIndex: =4

            btnBulletinDetail_Footer_Delete As button:
                AutoDisableOnSelect: =false
                BorderColor: =gblAppStyles.ButtonSecondary.BorderColor
                BorderThickness: =gblAppStyles.ButtonSecondary.BorderThickness
                Color: =gblAppStyles.ButtonSecondary.Color
                DisabledBorderColor: =gblAppStyles.ButtonSecondary.DisabledBorderColor
                DisabledColor: =gblAppStyles.ButtonSecondary.DisabledColor
                DisabledFill: =gblAppStyles.ButtonSecondary.DisabledFill
                Fill: =gblAppStyles.ButtonSecondary.Fill
                FocusedBorderColor: =gblAppStyles.ButtonSecondary.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.ButtonSecondary.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                Height: =32
                HoverBorderColor: =gblAppStyles.ButtonSecondary.HoverBorderColor
                HoverColor: =gblAppStyles.ButtonSecondary.HoverColor
                HoverFill: =gblAppStyles.ButtonSecondary.HoverFill
                OnSelect: |-
                    =// Show Delete Dialog
                    UpdateContext(
                        {
                            locVisibleDialog: true,
                            locVisibleDialogDelete: true
                        }
                    );
                    // [Set Focus Start]
                    UpdateContext({locSetFocusTimerStart: false});
                    UpdateContext({locSetFocusControlTarget: "icnBulletinDetail_Delete_Cancel"});
                    UpdateContext({locSetFocusTimerStart: true});
                    // [Set Focus End]
                    // [Screen Reader Start]
                    UpdateContext(
                        {
                            locScreenReaderAnnouncedText: With(
                                {
                                    varAnnouncedText: With(
                                        {
                                            varDefault: "A dialog to confirm deletion is shown", // Default Text to use
                                            varOOBTextId: "btnBulletinDetail_Footer_Delete__Announced" // Localized version
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextId = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            Coalesce(
                                                varLocalizedText,
                                                varDefault
                                            )
                                        )
                                    )
                                },
                                If(
                                    locScreenReaderAnnouncedText = varAnnouncedText,
                                    Concatenate(
                                        varAnnouncedText,
                                        " "
                                    ),
                                    varAnnouncedText // If clicked twice, will append blank space to update variable
                                )
                            )
                        }
                    );
                    // [Screen Reader End]
                PressedBorderColor: =gblAppStyles.ButtonSecondary.PressedBorderColor
                PressedColor: =gblAppStyles.ButtonSecondary.PressedColor
                PressedFill: =gblAppStyles.ButtonSecondary.PressedFill
                RadiusBottomLeft: =gblAppStyles.ButtonSecondary.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.ButtonSecondary.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.ButtonSecondary.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.ButtonSecondary.RadiusTopRight
                Size: =gblAppStyles.ButtonSecondary.Size
                TabIndex: =If(locVisibleDialog,-1,0)
                Text: |-
                    =With(
                    {
                    varDefault: "Delete",
                    varOOBTextId: "btnBulletinDetail_Footer_Delete__Text"
                    },
                    With(
                    {
                    varLocalizedText: LookUp(
                    colLocalization,
                    OOBTextId = varOOBTextId,
                    LocalizedText
                    )
                    },
                    Coalesce(
                    varLocalizedText,
                    varDefault
                    )
                    )
                    )
                Tooltip: =Self.Text
                Visible: =!IsBlank(gblRecordBulletin)
                Width: =92
                X: =gblPadding.Page
                Y: =1*2
                ZIndex: =2

    conBulletinDetail_Actions As groupContainer:
        Height: =60
        Width: =Parent.Width
        X: =0*0
        Y: =0*0
        ZIndex: =4

        btnBulletinDetail_Actions_Publish As button:
            BorderColor: =gblAppStyles.ButtonPrimary.BorderColor
            BorderThickness: =gblAppStyles.ButtonPrimary.BorderThickness
            Color: =gblAppStyles.ButtonPrimary.Color
            DisabledBorderColor: =gblAppStyles.ButtonPrimary.DisabledBorderColor
            DisabledColor: =gblAppStyles.ButtonPrimary.DisabledColor
            DisabledFill: =gblAppStyles.ButtonPrimary.DisabledFill
            DisplayMode: |-
                =If(
                    !gblUserIsTeamOwner,
                    DisplayMode.Disabled,
                    IsBlankOrError(gblRecordBulletin),
                    DisplayMode.Disabled,
                    If(
                        btnBulletinDetail_Actions_Save.DisplayMode = DisplayMode.Edit,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                )
            Fill: =gblAppStyles.ButtonPrimary.Fill
            FocusedBorderColor: =gblAppStyles.ButtonPrimary.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.ButtonPrimary.FocusedBorderThickness
            Height: =32
            HoverBorderColor: =gblAppStyles.ButtonPrimary.HoverBorderColor
            HoverColor: =gblAppStyles.ButtonPrimary.HoverColor
            HoverFill: =gblAppStyles.ButtonPrimary.HoverFill
            OnSelect: |
                =// Block user input
                UpdateContext({locBlockUserInput: true});
                // Determine publish time (either schedule, or now)
                With(
                    {
                        varPublishOnDate: If(
                            tglBulletinDetail_Schedule.Value,
                            DateTimeValue(
                                Concatenate(
                                    drpBulletinDetail_ScheduleDate.Selected.valDate,
                                    ", ",
                                    drpBulletinDetail_ScheduleTime.Selected.valTime
                                )
                            ),
                            Now()
                        )
                    },
                    Patch(
                        Bulletins,
                        {
                            Bulletin: gblRecordBulletin.Bulletin,
                            'Approval Status': 'Bulletin Approval Status'.Approved,
                            'Publish On': varPublishOnDate,
                            'Feature Until': Switch(
                                drpBulletinDetail_MakeFeatured.Selected.Value,
                                'Bulletin Featured Timeframe'.'For 1 day',
                                DateAdd(
                                    varPublishOnDate,
                                    1,
                                    Days
                                ),
                                'Bulletin Featured Timeframe'.'For 1 week',
                                DateAdd(
                                    varPublishOnDate,
                                    7,
                                    Days
                                ),
                                'Bulletin Featured Timeframe'.'For 2 weeks',
                                DateAdd(
                                    varPublishOnDate,
                                    14,
                                    Days
                                ),
                                'Bulletin Featured Timeframe'.'For 1 month',
                                DateAdd(
                                    varPublishOnDate,
                                    1,
                                    Months
                                ),
                                Blank()
                            )
                        }
                    )
                );
                // [Screen Reader Start]
                UpdateContext(
                    {
                        locScreenReaderAnnouncedText: With(
                            {
                                varAnnouncedText: With(
                                    {
                                        varDefault: "The bulletin has been published", // Default Text to use
                                        varOOBTextId: "btnBulletinDetail_Actions_Publish__Announced" // Localized version
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextId = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            },
                            If(
                                locScreenReaderAnnouncedText = varAnnouncedText,
                                Concatenate(
                                    varAnnouncedText,
                                    " "
                                ),
                                varAnnouncedText // If clicked twice, will append blank space to update variable
                            )
                        )
                    }
                );
                // [Screen Reader End]
                // Return to main screen
                Navigate(
                    'Bulletins Screen',
                    Fade
                );
                // Unblock user
                UpdateContext({locBlockUserInput: false});
            PressedBorderColor: =gblAppStyles.ButtonPrimary.PressedBorderColor
            PressedColor: =gblAppStyles.ButtonPrimary.PressedColor
            PressedFill: =gblAppStyles.ButtonPrimary.PressedFill
            RadiusBottomLeft: =gblAppStyles.ButtonPrimary.RadiusBottomLeft
            RadiusBottomRight: =gblAppStyles.ButtonPrimary.RadiusBottomRight
            RadiusTopLeft: =gblAppStyles.ButtonPrimary.RadiusTopLeft
            RadiusTopRight: =gblAppStyles.ButtonPrimary.RadiusTopRight
            Size: =gblAppStyles.ButtonPrimary.Size
            TabIndex: =If(locVisibleDialog,-1,0)
            Text: |-
                =With(
                {
                varDefault: "Publish",
                varOOBTextId: "btnBulletinDetail_Actions_Publish__Text"
                },
                With(
                {
                varLocalizedText: LookUp(
                colLocalization,
                OOBTextId = varOOBTextId,
                LocalizedText
                )
                },
                Coalesce(
                varLocalizedText,
                varDefault
                )
                )
                )
            Tooltip: =Self.Text
            Width: =96
            X: =Parent.Width -Self.Width -gblPadding.Page
            Y: =(Parent.Height - Self.Height) / 2
            ZIndex: =1

        btnBulletinDetail_Actions_Save As button:
            BorderColor: =gblAppStyles.ButtonPrimary.BorderColor
            BorderThickness: =gblAppStyles.ButtonPrimary.BorderThickness
            Color: =gblAppStyles.ButtonPrimary.Color
            DisabledBorderColor: =gblAppStyles.ButtonPrimary.DisabledBorderColor
            DisabledColor: =gblAppStyles.ButtonPrimary.DisabledColor
            DisabledFill: =gblAppStyles.ButtonPrimary.DisabledFill
            DisplayMode: |-
                =With(
                    {
                        // Check for Valid Data Entry
                        varValidCategory: !IsBlank(drpBulletinDetail_Category.Selected),
                        varValidTitle: !IsBlank(txtBulletinDetail_Title.Text),
                        varValidDescription: !IsBlank(rteBulletinDetail_Body.HtmlText),
                        // Check for Updated Fields
                        varDirtyCategory: locSelectedCategory <> locSelectedCategory_New,
                        varDirtyTitle: Text(txtBulletinDetail_Title.Text) <> Text(gblRecordBulletin.Title),
                        varDirtySubtitle: Text(txtBulletinDetail_Subtitle.Text) <> Text(gblRecordBulletin.Subtitle),
                        varDirtyBody: rteBulletinDetail_Body.HtmlText <> gblRecordBulletin.Body,
                        varDirtyStockImage: locSelectedStockImage <> gblRecordBulletin.'Stock Image',
                        varDirtyImage: !IsBlankOrError(addBulletinDetail_Image.Media),
                        varDirtyVideoUrl: Text(txtBulletinDetail_VideoUrl_Input.Text) <> Text(gblRecordBulletin.'Video URL'),
                        varDirtyReadyForReview: If(
                            tglBulletinDetail_Actions_ReadyForReview.Value,
                            'Ready for Review? (Bulletins)'.Yes,
                            'Ready for Review? (Bulletins)'.No
                        ) <> gblRecordBulletin.'Ready for Review?',
                        varDirtyScheduled: If(
                            tglBulletinDetail_Schedule.Value,
                            'Scheduled? (Bulletins)'.Yes,
                            'Scheduled? (Bulletins)'.No
                        ) <> gblRecordBulletin.'Scheduled?',
                        varDirtyScheduleOn: If(
                            tglBulletinDetail_Schedule.Value,
                            DateTimeValue(
                                Concatenate(
                                    drpBulletinDetail_ScheduleDate.Selected.valDate,
                                    ", ",
                                    drpBulletinDetail_ScheduleTime.Selected.valTime
                                )
                            ),
                            gblRecordBulletin.'Publish On'
                        ) <> gblRecordBulletin.'Publish On',
                        varDirtyFeaturedUntil: drpBulletinDetail_MakeFeatured.Selected.Value <> gblRecordBulletin.'Featured Time-frame',
                        varDirtyButtonTitle: Text(txtBulletinDetail_ButtonTitle.Text) <> Text(gblRecordBulletin.'Button Title'),
                        varDirtyButtonUrl: Text(txtBulletinDetail_ButtonURL.Text) <> Text(gblRecordBulletin.'Button URL'),
                        varDirtyAuthors: Text(txtBulletinDetail_Author.Text) <> Text(gblRecordBulletin.'Author(s)')
                    },
                    If(
                        And(
                            varValidCategory,
                            varValidTitle,
                            varValidDescription
                        ),
                        If(
                            Or(
                                varDirtyCategory,
                                varDirtyTitle,
                                varDirtySubtitle,
                                varDirtyBody,
                                varDirtyStockImage,
                                varDirtyImage,
                                varDirtyVideoUrl,
                                varDirtyReadyForReview,
                                varDirtyScheduled,
                                varDirtyScheduleOn,
                                varDirtyFeaturedUntil,
                                varDirtyButtonTitle,
                                varDirtyButtonUrl,
                                varDirtyAuthors
                            ),
                            DisplayMode.Edit,
                            DisplayMode.Disabled
                        ),
                        DisplayMode.Disabled
                    )
                )
            Fill: =gblAppStyles.ButtonPrimary.Fill
            FocusedBorderColor: =gblAppStyles.ButtonPrimary.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.ButtonPrimary.FocusedBorderThickness
            Height: =32
            HoverBorderColor: =gblAppStyles.ButtonPrimary.HoverBorderColor
            HoverColor: =gblAppStyles.ButtonPrimary.HoverColor
            HoverFill: =gblAppStyles.ButtonPrimary.HoverFill
            OnSelect: |
                =// Block user entry; code processing
                UpdateContext({locBlockUserInput: true});
                // Patch record, and update variable
                Set(
                    gblRecordBulletin,
                    Patch(
                        Bulletins,
                        {
                            Bulletin: gblRecordBulletin.Bulletin,
                            'Approval Status': If(
                                tglBulletinDetail_Actions_ReadyForReview.Value,
                                'Bulletin Approval Status'.Pending,
                                'Bulletin Approval Status'.Draft
                            ),
                            'Author(s)': Coalesce(
                                txtBulletinDetail_Author.Text,
                                gblUser.FullName
                            ),
                            'Button Title': txtBulletinDetail_ButtonTitle.Text,
                            'Button URL': txtBulletinDetail_ButtonURL.Text,
                            Category: drpBulletinDetail_Category.Selected,
                            Body: rteBulletinDetail_Body.HtmlText,
                            'Expire On': Blank(),
                            'Featured Time-frame': drpBulletinDetail_MakeFeatured.Selected.Value,
                            'Header Image': If(
                                locImageUpdateType = "Custom",
                                imgBulletinDetail_HeaderImage.Image,// Use Custom Image
                                locImageUpdateType = "Stock",
                                Blank(),// Clear Custom Image, use Stock
                                If(
                                    IsBlank(gblRecordBulletin.'Header Image'),
                                    Blank(),
                                    gblRecordBulletin.'Header Image'
                                )// Default, if unknown or no change
                            ),
                            'Header Image?': If(
                                locImageUpdateType = "Custom",
                                'Header Image? (Bulletins)'.Yes,
                                locImageUpdateType = "Stock",
                                'Header Image? (Bulletins)'.No,
                                gblRecordBulletin.'Header Image?'
                            ),
                            'Stock Image': locSelectedStockImage,
                            Title: txtBulletinDetail_Title.Text,
                            'Publish On': If(
                                tglBulletinDetail_Schedule.Value,
                                With(
                                    {
                                        varPublishOnDate: If(
                                            tglBulletinDetail_Schedule.Value,
                                            DateTimeValue(
                                                Concatenate(
                                                    drpBulletinDetail_ScheduleDate.Selected.valDate,
                                                    ", ",
                                                    drpBulletinDetail_ScheduleTime.Selected.valTime
                                                )
                                            ),
                                            Blank()
                                        )
                                    },
                                    If(
                                        IsBlankOrError(varPublishOnDate),
                                        Blank(),
                                        varPublishOnDate
                                    )
                                ),
                                Blank()
                            ),
                            'Ready for Review?': If(
                                tglBulletinDetail_Actions_ReadyForReview.Value,
                                'Ready for Review? (Bulletins)'.Yes,
                                'Ready for Review? (Bulletins)'.No
                            ),
                            'Scheduled?': If(
                                tglBulletinDetail_Schedule.Value,
                                'Scheduled? (Bulletins)'.Yes,
                                'Scheduled? (Bulletins)'.No
                            ),
                            Subtitle: txtBulletinDetail_Subtitle.Text,
                            'Video URL': txtBulletinDetail_VideoUrl_Input.Text
                        }
                    )
                );
                // Get latest version from server, to allow form comparisons, and for calculated fields to set correctly
                Set(
                    gblRecordBulletin,
                    LookUp(
                        Bulletins,
                        Bulletin = gblRecordBulletin.Bulletin
                    )
                );
                UpdateContext({locSelectedCategory: locSelectedCategory_New});
                // Show Ready for Review dialog, if not already shown
                If(
                    tglBulletinDetail_Actions_ReadyForReview.Value And !locConfirmedReadyReview,
                    UpdateContext(
                        {
                            locVisibleDialog: true,
                            locVisibleDialogReadyForReview: true,
                            locConfirmedReadyReview: If(
                                IsBlankOrError(locConfirmedReadyReview),
                                false,
                                locConfirmedReadyReview
                            )
                        }
                    )
                );
                // Reset Controls
                // Reset(addBulletinDetail_Image);
                UpdateContext({locResetAddPic: false});
                UpdateContext({locResetAddPic: true});
                // [Screen Reader Start]
                UpdateContext(
                    {
                        locScreenReaderAnnouncedText: With(
                            {
                                varAnnouncedText: With(
                                    {
                                        varDefault: "The bulletin has been saved",
                                        // Default Text to use
                                        varOOBTextId: "btnBulletinDetail_Actions_Save__Announced"// Localized version
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextId = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            },
                            If(
                                locScreenReaderAnnouncedText = varAnnouncedText,
                                Concatenate(
                                    varAnnouncedText,
                                    " "
                                ),
                                varAnnouncedText// If clicked twice, will append blank space to update variable
                            )
                        )
                    }
                );
                // [Screen Reader End]
                // Allow user entry; code completed
                UpdateContext({locBlockUserInput: false});
            PressedBorderColor: =gblAppStyles.ButtonPrimary.PressedBorderColor
            PressedColor: =gblAppStyles.ButtonPrimary.PressedColor
            PressedFill: =gblAppStyles.ButtonPrimary.PressedFill
            RadiusBottomLeft: =gblAppStyles.ButtonPrimary.RadiusBottomLeft
            RadiusBottomRight: =gblAppStyles.ButtonPrimary.RadiusBottomRight
            RadiusTopLeft: =gblAppStyles.ButtonPrimary.RadiusTopLeft
            RadiusTopRight: =gblAppStyles.ButtonPrimary.RadiusTopRight
            Size: =gblAppStyles.ButtonPrimary.Size
            TabIndex: =If(locVisibleDialog,-1,0)
            Text: |-
                =With(
                {
                varDefault: "Save",
                varOOBTextId: "btnBulletinDetail_Actions_Save__Text"
                },
                With(
                {
                varLocalizedText: LookUp(
                colLocalization,
                OOBTextId = varOOBTextId,
                LocalizedText
                )
                },
                Coalesce(
                varLocalizedText,
                varDefault
                )
                )
                )
            Tooltip: =Self.Text
            Width: =96
            X: =btnBulletinDetail_Actions_Publish.X -Self.Width -gblPadding.Page
            Y: =(Parent.Height - Self.Height) / 2
            ZIndex: =2

        tglBulletinDetail_Actions_ReadyForReview As toggleSwitch:
            AccessibleLabel: |-
                =With(
                    {
                        varDefault: "Toggle indicating bulletin is ready for review",
                        varOOBTextId: "tglBulletinDetail_Actions_ReadyForReview__AccessibleLabel"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextId = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            BorderColor: =gblAppStyles.Toggle.BorderColor
            BorderThickness: =gblAppStyles.Toggle.BorderThickness
            Color: =gblAppStyles.Toggle.Color
            Default: =gblRecordBulletin.'Ready for Review?' = 'Ready for Review? (Bulletins)'.Yes
            DisabledBorderColor: =gblAppStyles.Toggle.DisabledBorderColor
            DisabledColor: =gblAppStyles.Toggle.DisabledColor
            FalseFill: =gblAppStyles.Toggle.FalseFill
            FalseHoverFill: =gblAppStyles.Toggle.FalseHoverFill
            FalseText: |-
                =With(
                    {
                        varDefault: "No",
                        varOOBTextId: "tglBulletinDetail_Actions_ReadyForReview__Value-False"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextId = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            FocusedBorderColor: =gblAppStyles.Toggle.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.Toggle.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Semibold
            HandleFill: =If(Self.Value,gblAppStyles.Toggle.HandleFillTrue,gblAppStyles.Toggle.HandleFillFalse)
            Height: =32
            HoverBorderColor: =gblAppStyles.Toggle.HoverBorderColor
            OnCheck: |-
                =// [Screen Reader Start]
                UpdateContext(
                    {
                        locScreenReaderAnnouncedText: With(
                            {
                                varAnnouncedText: With(
                                    {
                                        varDefault: "Bulletin is ready to review", // Default Text to use
                                        varOOBTextId: "tglBulletinDetail_Actions_ReadyForReview__Announcement-True" // Localized version
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextId = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            },
                            If(
                                locScreenReaderAnnouncedText = varAnnouncedText,
                                Concatenate(
                                    varAnnouncedText,
                                    " "
                                ),
                                varAnnouncedText // If clicked twice, will append blank space to update variable
                            )
                        )
                    }
                );
                // [Screen Reader End]
            OnSelect: |-
                =false;
                //screen reader start
                UpdateContext(
                    {
                        locScreenReaderAnnouncedText: With(
                            {
                                varAnnouncedText: With(
                                    {
                                        varDefault: "Bulletin is not ready to review",
                                        varOOBTextId: "tglBulletinDetail_Actions_ReadyForReview__Announcement"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextId = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            },
                            If(
                                locScreenReaderAnnouncedText = varAnnouncedText,
                                Concatenate(
                                    varAnnouncedText,
                                    " "
                                ),
                                varAnnouncedText
                            )
                        )
                    }
                );
                //screen reader end
            OnUncheck: |-
                =// [Screen Reader Start]
                UpdateContext(
                    {
                        locScreenReaderAnnouncedText: With(
                            {
                                varAnnouncedText: With(
                                    {
                                        varDefault: "Bulletin is not ready to review", // Default Text to use
                                        varOOBTextId: "tglBulletinDetail_Actions_ReadyForReview__Announcement-False" // Localized version
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextId = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            },
                            If(
                                locScreenReaderAnnouncedText = varAnnouncedText,
                                Concatenate(
                                    varAnnouncedText,
                                    " "
                                ),
                                varAnnouncedText // If clicked twice, will append blank space to update variable
                            )
                        )
                    }
                );
                // [Screen Reader End]
            PressedBorderColor: =gblAppStyles.Toggle.PressedBorderColor
            Size: =gblAppStyles.Toggle.Size
            Tooltip: =Self.AccessibleLabel
            TrueFill: =gblAppStyles.Toggle.TrueFill
            TrueHoverFill: =gblAppStyles.Toggle.TrueHoverFill
            TrueText: |
                =With(
                    {
                        varDefault: "Yes",
                        varOOBTextId: "tglBulletinDetail_Actions_ReadyForReview__Value-True"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextId = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Visible: =!gblUserIsTeamOwner
            X: =btnBulletinDetail_Actions_Save.X - Self.Width - gblPadding.Page
            Y: =(Parent.Height - Self.Height) / 2
            ZIndex: =4

        lblBulletinDetail_Actions_ReadyForReview As label:
            Align: =Align.Right
            BorderColor: =gblAppStyles.Label.BorderColor
            BorderThickness: =gblAppStyles.Label.BorderThickness
            Color: =gblAppStyles.Label.Color
            DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
            DisabledColor: |
                =gblAppStyles.Label.DisabledColor
            DisabledFill: =gblAppStyles.Label.DisabledFill
            Fill: =gblAppStyles.Label.Fill
            FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Semibold
            Height: =Parent.Height
            HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
            HoverColor: =gblAppStyles.Label.HoverColor
            HoverFill: =gblAppStyles.Label.HoverFill
            OnSelect: =
            PaddingBottom: =4
            PaddingLeft: =4
            PaddingRight: =20
            PaddingTop: =4
            PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
            PressedColor: =gblAppStyles.Label.PressedColor
            PressedFill: =gblAppStyles.Label.PressedFill
            Size: =gblAppStyles.Label.Size.Medium
            Text: |-
                =With(
                {
                varDefault: "Ready for review",
                varOOBTextId: "lblBulletinDetail_Actions_ReadyForReview__Text"
                },
                With(
                {
                varLocalizedText: LookUp(
                colLocalization,
                OOBTextId = varOOBTextId,
                LocalizedText
                )
                },
                Coalesce(
                varLocalizedText,
                varDefault
                )
                )
                )
            Visible: =!gblUserIsTeamOwner
            Width: =160
            Wrap: =false
            X: =tglBulletinDetail_Actions_ReadyForReview.X -Self.Width
            Y: =0*0
            ZIndex: =5

        lblBulletinDetail_Actions_Title As label:
            BorderColor: =gblAppStyles.Label.BorderColor
            BorderThickness: =gblAppStyles.Label.BorderThickness
            Color: =gblAppStyles.Label.Color
            DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
            DisabledColor: |
                =gblAppStyles.Label.DisabledColor
            DisabledFill: =gblAppStyles.Label.DisabledFill
            DisplayMode: =DisplayMode.View
            Fill: =gblAppStyles.Label.Fill
            FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Semibold
            Height: =Parent.Height
            HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
            HoverColor: =gblAppStyles.Label.HoverColor
            HoverFill: =gblAppStyles.Label.HoverFill
            OnSelect: =
            PaddingBottom: =4
            PaddingLeft: =4
            PaddingRight: =4
            PaddingTop: =4
            PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
            PressedColor: =gblAppStyles.Label.PressedColor
            PressedFill: =gblAppStyles.Label.PressedFill
            Role: =TextRole.Heading1
            Size: =gblAppStyles.Label.Size.Large
            Text: |-
                =If(
                    IsBlankOrError(gblRecordBulletin),
                    With(
                    {
                        varDefault: "New bulletin",
                        varOOBTextId: "lblBulletinDetail_Actions_Title__Text-New"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextId = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                ),
                    With(
                    {
                        varDefault: "Edit bulletin",
                        varOOBTextId: "lblBulletinDetail_Actions_Title__Text-Edit"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextId = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
                
                )
            Width: =lblBulletinDetail_Actions_ReadyForReview.X
            Wrap: =false
            X: =imgBulletinDetail_Actions_Back.X +imgBulletinDetail_Actions_Back.Width
            Y: =0*0
            ZIndex: =6

        imgBulletinDetail_Actions_Back As image:
            AccessibleLabel: |-
                =With(
                    {
                        varDefault: "Click to navigate back to home screen",
                        varOOBTextId: "imgBulletinDetail_Actions_Back__AccessibleLabel__AccessibleLabel"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextId = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
            DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
            Fill: =gblAppStyles.ButtonTransparent.Fill
            FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
            Height: =Parent.Height - (2* Self.Y)
            HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
            HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
            Image: |-
                =With(
                    {
                        varImageRecord: LookUp(
                            staticIcons,
                            staticIconName = "Back"
                        ),
                        varColor: gblAppStyles.Icons.Color
                    },
                    With(
                        {
                            varImageData: Concatenate(
                                "data:image/svg+xml;utf8, ",
                                EncodeUrl(
                                    Concatenate(
                                        "<svg viewBox='",
                                        varImageRecord.staticIconViewbox,
                                        "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                        varImageRecord.staticIconPath,
                                        "' fill='#",
                                        varColor,
                                        "'/></svg>"
                                    )
                                )
                            )
                        },
                        varImageData
                    )
                )
            OnSelect: |-
                =UpdateContext({locBlockUserInput:true});
                Navigate('Bulletins Screen',ScreenTransition.Fade);
                UpdateContext({locBlockUserInput:false});
                UpdateContext({locResetAddPic: false});
                UpdateContext({locResetAddPic: true})
            PaddingBottom: =12
            PaddingLeft: =8
            PaddingRight: =8
            PaddingTop: =12
            PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
            PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
            TabIndex: =If(locVisibleDialog,-1,0)
            Tooltip: =Self.AccessibleLabel
            Width: =44
            X: =2*1
            Y: =2*1
            ZIndex: =7

    conModalDialog_BulletinDetail As groupContainer:
        Fill: |-
            =If(
                locVisibleDialogPreviewBulletin,
                RGBA(
                    0,
                    0,
                    0,
                    .9
                ),
                gblAppStyles.Dialogs.Fill
            )
        Height: =Parent.Height
        Visible: =locVisibleDialog
        Width: =Parent.Width
        ZIndex: =5

        lblModalDialog_BulletinDetail_Cancel As label:
            BorderColor: =RGBA(0, 0, 0, 0)
            Color: =RGBA(0, 0, 0, 0)
            FocusedBorderThickness: =0.25
            Height: =Parent.Height
            OnSelect: |-
                =UpdateContext(
                    {
                        locVisibleDialog: false,
                        locVisibleDialogVideoUrl: false,
                        locVisibleDialogDelete: false
                    }
                )
            Text: |-
                =With(
                {
                varDefault: "Cancel",
                varOOBTextId: "lblModalDialog_BulletinDetail_Cancel__Text"
                },
                With(
                {
                varLocalizedText: LookUp(
                colLocalization,
                OOBTextId = varOOBTextId,
                LocalizedText
                )
                },
                Coalesce(
                varLocalizedText,
                varDefault
                )
                )
                )
            Width: =Parent.Width
            X: =0*0
            Y: =0*0
            ZIndex: =1

        conModalDialog_BulletinDetail_VideoUrlEntry As groupContainer:
            Fill: =gblAppStyles.Background.Fill
            Visible: =locVisibleDialogVideoUrl
            X: =(Parent.Width - Self.Width)/2
            Y: =(Parent.Height - Self.Height)/2
            ZIndex: =2

            btnBulletinDetail_VideoUrl_Confirm As button:
                BorderColor: =gblAppStyles.ButtonPrimary.BorderColor
                BorderThickness: =gblAppStyles.ButtonPrimary.BorderThickness
                Color: =gblAppStyles.ButtonPrimary.Color
                DisabledBorderColor: =gblAppStyles.ButtonPrimary.DisabledBorderColor
                DisabledColor: =gblAppStyles.ButtonPrimary.DisabledColor
                DisabledFill: =gblAppStyles.ButtonPrimary.DisabledFill
                DisplayMode: |-
                    =If(
                        IsMatch(
                            txtBulletinDetail_VideoUrl_Input.Text,
                            "https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_\+.~#?&//=]*)"
                        ) Or IsBlank(txtBulletinDetail_VideoUrl_Input.Text),
                        DisplayMode.Edit,
                        DisplayMode.Disabled
                    )
                Fill: =gblAppStyles.ButtonPrimary.Fill
                FocusedBorderColor: =gblAppStyles.ButtonPrimary.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.ButtonPrimary.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                Height: =32
                HoverBorderColor: =gblAppStyles.ButtonPrimary.HoverBorderColor
                HoverColor: =gblAppStyles.ButtonPrimary.HoverColor
                HoverFill: =gblAppStyles.ButtonPrimary.HoverFill
                OnSelect: |-
                    =//Close Modal Dialog
                    UpdateContext(
                        {
                            locVisibleDialog: false,
                            locVisibleDialogVideoUrl: false
                        }
                    );
                    // [Set Focus Start]
                    UpdateContext({locSetFocusTimerStart: false});
                    UpdateContext({locSetFocusControlTarget: "btnBulletinDetail_EditVideo"});
                    UpdateContext({locSetFocusTimerStart: true});
                    // [Set Focus End]
                    // [Screen Reader Start]
                    UpdateContext(
                        {
                            locScreenReaderAnnouncedText: With(
                                {
                                    varAnnouncedText: With(
                                        {
                                            varDefault: "The entered URL has been set for the bulletin", // Default Text to use
                                            varOOBTextId: "btnBulletinDetail_VideoUrl_Confirm__Announced" // Localized version
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextId = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            Coalesce(
                                                varLocalizedText,
                                                varDefault
                                            )
                                        )
                                    )
                                },
                                If(
                                    locScreenReaderAnnouncedText = varAnnouncedText,
                                    Concatenate(
                                        varAnnouncedText,
                                        " "
                                    ),
                                    varAnnouncedText // If clicked twice, will append blank space to update variable
                                )
                            )
                        }
                    );
                    // [Screen Reader End]
                PressedBorderColor: =gblAppStyles.ButtonPrimary.PressedBorderColor
                PressedColor: =gblAppStyles.ButtonPrimary.PressedColor
                PressedFill: =gblAppStyles.ButtonPrimary.PressedFill
                RadiusBottomLeft: =gblAppStyles.ButtonPrimary.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.ButtonPrimary.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.ButtonPrimary.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.ButtonPrimary.RadiusTopRight
                Size: =gblAppStyles.ButtonPrimary.Size
                TabIndex: =If(locVisibleDialogVideoUrl,0,-1)
                Text: |-
                    =With(
                    {
                    varDefault: "Update",
                    varOOBTextId: "btnBulletinDetail_VideoUrl_Confirm__Text"
                    },
                    With(
                    {
                    varLocalizedText: LookUp(
                    colLocalization,
                    OOBTextId = varOOBTextId,
                    LocalizedText
                    )
                    },
                    Coalesce(
                    varLocalizedText,
                    varDefault
                    )
                    )
                    )
                Tooltip: =Self.Text
                Width: =96
                X: =Parent.Width - Self.Width - gblPadding.Page
                Y: =Parent.Height - Self.Height -gblPadding.Page
                ZIndex: =1

            txtBulletinDetail_VideoUrl_Input As text:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "Text input to add video url",
                            varOOBTextId: "txtBulletinDetail_VideoUrl_Input__AccessibleLabel"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                BorderColor: =gblAppStyles.TextInput.BorderColor
                BorderThickness: =gblAppStyles.TextInput.BorderThickness
                Color: =gblAppStyles.TextInput.Color
                Default: =gblRecordBulletin.'Video URL'
                DelayOutput: =true
                DisabledBorderColor: =gblAppStyles.TextInput.DisabledBorderColor
                DisabledColor: =gblAppStyles.TextInput.DisabledColor
                DisabledFill: =gblAppStyles.TextInput.DisabledFill
                Fill: =gblAppStyles.TextInput.Fill
                FocusedBorderColor: =gblAppStyles.TextInput.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.TextInput.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                Height: =48
                HintText: |-
                    =With(
                    {
                    varDefault: "Enter video url",
                    varOOBTextId: "txtBulletinDetail_VideoUrl_Input__HintText"
                    },
                    With(
                    {
                    varLocalizedText: LookUp(
                    colLocalization,
                    OOBTextId = varOOBTextId,
                    LocalizedText
                    )
                    },
                    Coalesce(
                    varLocalizedText,
                    varDefault
                    )
                    )
                    )
                HoverBorderColor: =gblAppStyles.TextInput.HoverBorderColor
                HoverColor: =gblAppStyles.TextInput.HoverColor
                HoverFill: =gblAppStyles.TextInput.HoverFill
                MaxLength: =100
                PaddingLeft: =5
                PressedBorderColor: =gblAppStyles.TextInput.PressedBorderColor
                PressedColor: =gblAppStyles.TextInput.PressedColor
                PressedFill: =gblAppStyles.TextInput.PressedFill
                RadiusBottomLeft: =gblAppStyles.TextInput.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.TextInput.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.TextInput.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.TextInput.RadiusTopRight
                Size: =gblAppStyles.TextInput.Size
                TabIndex: =If(locVisibleDialogVideoUrl,0,-1)
                Tooltip: =Self.HintText
                Width: =lblBulletinDetail_VideoUrl_Title.Width
                X: =lblBulletinDetail_VideoUrl_Title.X
                Y: =lblBulletinDetail_VideoUrl_Title.Y +lblBulletinDetail_VideoUrl_Title.Height + gblPadding.Page
                ZIndex: =2

            lblBulletinDetail_VideoUrl_Title As label:
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                DisabledColor: =gblAppStyles.Label.DisabledColor
                DisabledFill: =gblAppStyles.Label.DisabledFill
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Bold
                Height: =28
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Size: =gblAppStyles.Label.Size.Large
                Text: |-
                    =With(
                    {
                    varDefault: "Video link",
                    varOOBTextId: "lblBulletinDetail_VideoUrl_Title__Text"
                    },
                    With(
                    {
                    varLocalizedText: LookUp(
                    colLocalization,
                    OOBTextId = varOOBTextId,
                    LocalizedText
                    )
                    },
                    Coalesce(
                    varLocalizedText,
                    varDefault
                    )
                    )
                    )
                VerticalAlign: =VerticalAlign.Bottom
                Width: =Parent.Width - (2* Self.X)
                X: =gblPadding.Page
                Y: =32
                ZIndex: =3

        conModalDialog_BulletinDetail_Preview As groupContainer:
            Height: =Parent.Height
            Visible: =locVisibleDialogPreviewBulletin
            Width: =Parent.Width
            X: =0*0
            Y: =0*0
            ZIndex: =5

            cnvBulletinDetail_BulletinReader As fluidGrid.fluidGridWithBlankCard:
                BorderThickness: =0
                Height: =Parent.Height
                Width: =Parent.Width
                X: =0*0
                Y: =0*0
                ZIndex: =2

                dtcBulletinDetail_BulletinReader As dataCard:
                    BorderColor: =RGBA(0, 0, 0, 1)
                    BorderStyle: =BorderStyle.Solid
                    BorderThickness: =0
                    DisplayMode: =DisplayMode.Edit
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =Parent.Height
                    Width: =Parent.Width
                    X: =0
                    Y: =0
                    ZIndex: =1

                    lblModalDialog_BulletinDetail_Preview_Cancel As label:
                        BorderColor: =RGBA(0, 0, 0, 0)
                        Color: =RGBA(0, 0, 0, 0)
                        FocusedBorderThickness: =0.25
                        Height: =Parent.Height
                        OnSelect: |-
                            =// Close the dialog window
                            UpdateContext(
                                {
                                    locVisibleDialog: false,
                                    locVisibleDialogVideoUrl: false,
                                    locVisibleDialogPreviewBulletin: false
                                }
                            );
                            // Reset Video(s)
                            Reset(vidBulletinReader_VideoPlayer);
                            //Reset(MicrosoftStream1);
                            // [Set Focus Start]
                            UpdateContext({locSetFocusTimerStart: false});
                            UpdateContext({locSetFocusControlTarget: "btnBulletinDetail_Preview"});
                            UpdateContext({locSetFocusTimerStart: true});
                            // [Set Focus End]
                        Text: ="Cancel"
                        Width: =Parent.Width
                        X: =0*0
                        Y: =0*0
                        ZIndex: =1

                    conBulletinReader As groupContainer:
                        Fill: =White
                        Height: =locReaderHeight
                        Width: =Min(900,Parent.Width - 40)
                        X: =(Parent.Width - Self.Width) / 2
                        Y: =Max(20,(App.Height - Self.Height) / 2)
                        ZIndex: =4

                        btnBulletinReader_BulletinButton As button:
                            BorderColor: =gblAppStyles.ButtonSecondary.BorderColor
                            BorderThickness: =gblAppStyles.ButtonSecondary.BorderThickness
                            Color: =gblAppStyles.ButtonSecondary.Color
                            DisabledBorderColor: =gblAppStyles.ButtonSecondary.DisabledBorderColor
                            DisabledColor: =gblAppStyles.ButtonSecondary.DisabledColor
                            DisabledFill: =gblAppStyles.ButtonSecondary.DisabledFill
                            Fill: =gblAppStyles.ButtonSecondary.Fill
                            FocusedBorderColor: =gblAppStyles.ButtonSecondary.FocusedBorderColor
                            FocusedBorderThickness: =gblAppStyles.ButtonSecondary.FocusedBorderThickness
                            Font: =Font.'Segoe UI'
                            Height: =If(IsBlankOrError(txtBulletinDetail_ButtonTitle.Text),0,32)
                            HoverBorderColor: =gblAppStyles.ButtonSecondary.HoverBorderColor
                            HoverColor: =gblAppStyles.ButtonSecondary.HoverColor
                            HoverFill: =gblAppStyles.ButtonSecondary.HoverFill
                            OnSelect: =Launch(txtBulletinDetail_ButtonURL.Text,Blank(),LaunchTarget.New)
                            PressedBorderColor: =gblAppStyles.ButtonSecondary.PressedBorderColor
                            PressedColor: =gblAppStyles.ButtonSecondary.PressedColor
                            PressedFill: =gblAppStyles.ButtonSecondary.PressedFill
                            RadiusBottomLeft: =gblAppStyles.ButtonSecondary.RadiusBottomLeft
                            RadiusBottomRight: =gblAppStyles.ButtonSecondary.RadiusBottomRight
                            RadiusTopLeft: =gblAppStyles.ButtonSecondary.RadiusTopLeft
                            RadiusTopRight: =gblAppStyles.ButtonSecondary.RadiusTopRight
                            Size: =gblAppStyles.ButtonSecondary.Size
                            TabIndex: =If(locVisibleDialogPreviewBulletin,0,-1)
                            Text: =txtBulletinDetail_ButtonTitle.Text
                            Tooltip: =Self.Text
                            Visible: =!IsBlankOrError(txtBulletinDetail_ButtonTitle.Text)
                            Width: =Len(Self.Text)*13
                            X: =Parent.Width - Self.Width - 20
                            Y: =Parent.Height - Self.Height - gblPadding.Page
                            ZIndex: =1

                        tmrBulletinReader_SetSize As timer:
                            AutoStart: =locVisibleDialogPreviewBulletin
                            BorderStyle: =BorderStyle.None
                            Duration: =100
                            Fill: =RGBA(0, 0, 0, 1)
                            Height: =0*0
                            HoverFill: =ColorFade(Self.Fill, -20%)
                            OnTimerEnd: |-
                                =UpdateContext(
                                    {
                                        locReaderHeight: Sum(
                                            imgBulletinReader_HeaderImage.Height,
                                            lblBulletinReader_Author.Height,
                                            lblBulletinReader_Title.Height,
                                            lblBulletinReader_Subtitle.Height,
                                            htmBulletinReader_Body.Height,
                                            btnBulletinReader_BulletinButton.Height,
                                            40
                                        )
                                    }
                                );
                                tmrBulletinReader_SetSize.Repeat = If(locReaderHeight > 40, "false", "true")
                            Repeat: =true
                            Text: =Self.Value
                            Width: =0*0
                            X: =0*0
                            Y: =0*0
                            ZIndex: =2

                        htmBulletinReader_Body As htmlViewer:
                            AutoHeight: =true
                            Color: |-
                                =ColorValue("#2A2A2A")
                            DisplayMode: =DisplayMode.View
                            Font: =Font.'Segoe UI'
                            Height: =Parent.Height - Self.Y
                            HtmlText: =locPreviewBulletinBody
                            PaddingBottom: =10
                            PaddingLeft: =20
                            PaddingRight: =20
                            PaddingTop: =10
                            Size: =10.5
                            Width: =Parent.Width
                            X: =0*0
                            Y: =lblBulletinReader_Subtitle.Y + lblBulletinReader_Subtitle.Height
                            ZIndex: =3

                        lblBulletinReader_Subtitle As label:
                            Color: |-
                                =ColorValue("#2A2A2A")
                            DisplayMode: =DisplayMode.View
                            Font: =Font.'Segoe UI'
                            Height: =If(IsBlank(Self.Text),0,28)
                            LineHeight: =1
                            PaddingLeft: =20
                            Size: =10.5
                            Text: =txtBulletinDetail_Subtitle.Text
                            Width: =Parent.Width
                            Wrap: =false
                            X: =0*0
                            Y: =lblBulletinReader_Title.Y + lblBulletinReader_Title.Height
                            ZIndex: =4

                        lblBulletinReader_Title As label:
                            Color: |-
                                =ColorValue("#242424")
                            DisplayMode: =DisplayMode.View
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Bold
                            Height: =36
                            LineHeight: =1
                            PaddingLeft: =20
                            Text: =Coalesce(txtBulletinDetail_Title.Text,"Untitled")
                            VerticalAlign: =VerticalAlign.Bottom
                            Width: =Parent.Width
                            Wrap: =false
                            X: =0*0
                            Y: =lblBulletinReader_Author.Y + lblBulletinReader_Author.Height
                            ZIndex: =5

                        lblBulletinReader_Author As label:
                            Color: |-
                                =ColorValue("#616161")
                            DisplayMode: =DisplayMode.View
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Lighter
                            LineHeight: =1
                            PaddingLeft: =20
                            Size: =10.5
                            Text: |-
                                =Upper(
                                    Concatenate(
                                        "BY ",
                                        Coalesce(
                                            txtBulletinDetail_Author.Text,
                                            gblUser.FullName
                                        )
                                    )
                                )
                            VerticalAlign: =VerticalAlign.Bottom
                            Width: =Parent.Width
                            Wrap: =false
                            X: =0*0
                            Y: =imgBulletinReader_HeaderImage.Y + imgBulletinReader_HeaderImage.Height
                            ZIndex: =6

                        vidBulletinReader_VideoPlayer As videoPlayback:
                            BorderColor: =RGBA(0, 0, 0, 0)
                            Fill: =gblAppStyles.ButtonPrimary.Fill
                            Height: =imgBulletinReader_HeaderImage.Height
                            Media: =IfError(txtBulletinDetail_VideoUrl_Input.Text,Blank())
                            TabIndex: =If(locVisibleDialogPreviewBulletin,0,-1)
                            Visible: |-
                                =And(
                                    !IsBlank(
                                        IfError(
                                            txtBulletinDetail_VideoUrl_Input.Text,
                                            Blank()
                                        )
                                    ),
                                    !IsMatch(
                                        txtBulletinDetail_VideoUrl_Input.Text,
                                        "microsoftstream.com",
                                        MatchOptions.Contains
                                    )
                                )
                            Width: =Parent.Width
                            X: =0*0
                            Y: =0*0
                            ZIndex: =7

                        MicrosoftStream1 As microsoftStreamPlayback:
                            BorderColor: =RGBA(0, 0, 0, 0)
                            Color: =RGBA(0, 0, 0, 0)
                            Fill: =RGBA(0, 0, 0, 0)
                            Height: =vidBulletinReader_VideoPlayer.Height
                            StreamUrl: |-
                                =If(
                                    locVisibleDialogPreviewBulletin,
                                    txtBulletinDetail_VideoUrl_Input.Text,
                                    Blank()
                                )
                            TabIndex: =If(locVisibleDialogPreviewBulletin,0,-1)
                            Visible: |-
                                =IsMatch(
                                    txtBulletinDetail_VideoUrl_Input.Text,
                                    "microsoftstream.com",
                                    MatchOptions.Contains
                                )
                            Width: =vidBulletinReader_VideoPlayer.Width
                            X: =vidBulletinReader_VideoPlayer.X
                            Y: =vidBulletinReader_VideoPlayer.Y
                            ZIndex: =8

                        imgBulletinReader_HeaderImage As image:
                            AccessibleLabel: |-
                                =With(
                                    {
                                        varDefault: "Preview of the image for this bulletin",
                                        varOOBTextId: "imgBulletinReader_HeaderImage__AccessibleLabel"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextId = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            DisplayMode: =DisplayMode.View
                            Height: |-
                                =If(
                                    IsBlank(imgBulletinDetail_HeaderImage.Image) And IsBlank(txtBulletinDetail_VideoUrl_Input.Text),
                                    60,
                                    Self.Width / (1.8)
                                )
                            Image: =imgBulletinDetail_HeaderImage.Image
                            ImagePosition: =ImagePosition.Fill
                            Tooltip: =Self.AccessibleLabel
                            Visible: =!IsBlank(imgBulletinDetail_HeaderImage.Image) And !locPlayVideo
                            Width: =Parent.Width
                            X: =0*0
                            Y: =0*0
                            ZIndex: =9

                        imgBulletinReader_VideoPlayButton As image:
                            AccessibleLabel: |-
                                =With(
                                    {
                                        varDefault: "Preview of the video play button for this bulletin",
                                        varOOBTextId: "imgBulletinReader_VideoPlayButton__AccessibleLabel"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextId = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            Image: =Image_PlayVideo
                            OnSelect: |
                                =UpdateContext({locPlayVideo: true});
                            TabIndex: =If(locVisibleDialogPreviewBulletin,0,-1)
                            Tooltip: =Self.AccessibleLabel
                            Visible: =!IsBlank(imgBulletinDetail_HeaderImage.Image) And !IsBlank(txtBulletinDetail_VideoUrl_Input.Text) And !locPlayVideo
                            X: =(Parent.Width - Self.Width) / 2
                            ZIndex: =10

                        lblBulletinReader_PublishOnAgo As label:
                            Align: =Align.Center
                            Color: |-
                                =ColorValue("#F4F4FC")
                            DisplayMode: =DisplayMode.View
                            Fill: =RGBA(37, 36, 36, 0.85)
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Lighter
                            Height: =20  
                            PaddingBottom: =4
                            PaddingLeft: =4
                            PaddingTop: =4
                            Size: =9
                            Text: ="0 MINUTES"
                            Width: =108
                            X: =20*1
                            Y: =gblPadding.Page
                            ZIndex: =11

                        btnBulletinReader_Close As button:
                            BorderColor: =gblAppStyles.ButtonSecondary.BorderColor
                            BorderThickness: =gblAppStyles.ButtonSecondary.BorderThickness
                            Color: =gblAppStyles.ButtonSecondary.Color
                            DisabledBorderColor: =gblAppStyles.ButtonSecondary.DisabledBorderColor
                            DisabledColor: =gblAppStyles.ButtonSecondary.DisabledColor
                            DisabledFill: =gblAppStyles.ButtonSecondary.DisabledFill
                            Fill: =gblAppStyles.ButtonSecondary.Fill
                            FocusedBorderColor: =gblAppStyles.ButtonSecondary.FocusedBorderColor
                            FocusedBorderThickness: =gblAppStyles.ButtonSecondary.FocusedBorderThickness
                            Font: =Font.'Segoe UI'
                            Height: =32
                            HoverBorderColor: =gblAppStyles.ButtonSecondary.HoverBorderColor
                            HoverColor: =gblAppStyles.ButtonSecondary.HoverColor
                            HoverFill: =gblAppStyles.ButtonSecondary.HoverFill
                            OnSelect: |+
                                =// Selects the cancel label, to close dialog properly and avoid duplicating code
                                Select(lblModalDialog_BulletinDetail_Preview_Cancel);
                                
                            PressedBorderColor: =gblAppStyles.ButtonSecondary.PressedBorderColor
                            PressedColor: =gblAppStyles.ButtonSecondary.PressedColor
                            PressedFill: =gblAppStyles.ButtonSecondary.PressedFill
                            RadiusBottomLeft: =gblAppStyles.ButtonSecondary.RadiusBottomLeft
                            RadiusBottomRight: =gblAppStyles.ButtonSecondary.RadiusBottomRight
                            RadiusTopLeft: =gblAppStyles.ButtonSecondary.RadiusTopLeft
                            RadiusTopRight: =gblAppStyles.ButtonSecondary.RadiusTopRight
                            Size: =gblAppStyles.ButtonSecondary.Size
                            TabIndex: =If(locVisibleDialogPreviewBulletin,0,-1)
                            Text: ="Close"
                            Tooltip: =Self.Text
                            Width: =85
                            X: =Parent.Width - Self.Width - gblPadding.Page
                            Y: =gblPadding.Page
                            ZIndex: =12

                        imgBulletinReader_Bookmark As image:
                            AccessibleLabel: |-
                                =With(
                                    {
                                        varDefault: "Preview of the bookmark link for this bulletin",
                                        varOOBTextId: "imgBulletinReader_Bookmark__AccessibleLabel"
                                    },
                                    With(
                                        {
                                            varLocalizedText: LookUp(
                                                colLocalization,
                                                OOBTextId = varOOBTextId,
                                                LocalizedText
                                            )
                                        },
                                        Coalesce(
                                            varLocalizedText,
                                            varDefault
                                        )
                                    )
                                )
                            Height: =24
                            Image: |-
                                =With(
                                    {
                                        varImageRecord: LookUp(
                                            staticIcons,
                                            staticIconName = "BookmarkOutline"
                                        ),
                                        varColor: gblAppStyles.Icons.Color
                                    },
                                    With(
                                        {
                                            varImageData: Concatenate(
                                                "data:image/svg+xml;utf8, ",
                                                EncodeUrl(
                                                    Concatenate(
                                                        "<svg viewBox='",
                                                        varImageRecord.staticIconViewbox,
                                                        "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                                        varImageRecord.staticIconPath,
                                                        "' fill='#",
                                                        varColor,
                                                        "'/></svg>"
                                                    )
                                                )
                                            )
                                        },
                                        varImageData
                                    )
                                )
                            OnSelect: =
                            PaddingBottom: =4
                            PaddingLeft: =4
                            PaddingRight: =4
                            PaddingTop: =4
                            Tooltip: =Self.AccessibleLabel
                            Width: =24
                            X: =Parent.Width - Self.Width - 20
                            Y: =lblBulletinReader_Author.Y + ((lblBulletinReader_Author.Height - Self.Height) / 2)
                            ZIndex: =13

        conModalDialog_BulletinDetail_Delete As groupContainer:
            Fill: =gblAppStyles.Background.Fill
            Height: =300
            Visible: =locVisibleDialogDelete
            X: =(Parent.Width - Self.Width)/2
            Y: =(Parent.Height - Self.Height)/2
            ZIndex: =6

            btnBulletinDetail_Delete_Confirm As button:
                BorderColor: =gblAppStyles.ButtonPrimary.BorderColor
                BorderThickness: =gblAppStyles.ButtonPrimary.BorderThickness
                Color: =gblAppStyles.ButtonPrimary.Color
                DisabledBorderColor: =gblAppStyles.ButtonPrimary.DisabledBorderColor
                DisabledColor: =gblAppStyles.ButtonPrimary.DisabledColor
                DisabledFill: =gblAppStyles.ButtonPrimary.DisabledFill
                DisplayMode: |-
                    =If(
                        chkBulletinDetail_Delete_Confirm.Value,
                        DisplayMode.Edit,
                        DisplayMode.Disabled
                    )
                Fill: =gblAppStyles.ButtonPrimary.Fill
                FocusedBorderColor: =gblAppStyles.ButtonPrimary.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.ButtonPrimary.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                Height: =32
                HoverBorderColor: =gblAppStyles.ButtonPrimary.HoverBorderColor
                HoverColor: =gblAppStyles.ButtonPrimary.HoverColor
                HoverFill: =gblAppStyles.ButtonPrimary.HoverFill
                OnSelect: |
                    =// Block user input
                    UpdateContext({locBlockUserInput: true});
                    // Remove record from CDS
                    Remove(
                        Bulletins,
                        gblRecordBulletin
                    );
                    // [Screen Reader Start]
                    UpdateContext(
                        {
                            locScreenReaderAnnouncedText: With(
                                {
                                    varAnnouncedText: With(
                                        {
                                            varDefault: "The bulletin has been deleted", // Default Text to use
                                            varOOBTextId: "btnBulletinDetail_Delete_Confirm__Announced" // Localized version
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextId = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            Coalesce(
                                                varLocalizedText,
                                                varDefault
                                            )
                                        )
                                    )
                                },
                                If(
                                    locScreenReaderAnnouncedText = varAnnouncedText,
                                    Concatenate(
                                        varAnnouncedText,
                                        " "
                                    ),
                                    varAnnouncedText // If clicked twice, will append blank space to update variable
                                )
                            )
                        }
                    );
                    // [Screen Reader End]
                    // Navigate Home
                    Navigate(
                        'Bulletins Screen',
                        ScreenTransition.Fade
                    );
                    Reset(chkBulletinDetail_Delete_Confirm);
                    UpdateContext({locBlockUserInput: false});
                PressedBorderColor: =gblAppStyles.ButtonPrimary.PressedBorderColor
                PressedColor: =gblAppStyles.ButtonPrimary.PressedColor
                PressedFill: =gblAppStyles.ButtonPrimary.PressedFill
                RadiusBottomLeft: =gblAppStyles.ButtonPrimary.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.ButtonPrimary.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.ButtonPrimary.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.ButtonPrimary.RadiusTopRight
                Size: =gblAppStyles.ButtonPrimary.Size
                TabIndex: =If(locVisibleDialogDelete,0,-1)
                Text: |-
                    =With(
                    {
                    varDefault: "Delete",
                    varOOBTextId: "btnBulletinDetail_Delete_Confirm__Text"
                    },
                    With(
                    {
                    varLocalizedText: LookUp(
                    colLocalization,
                    OOBTextId = varOOBTextId,
                    LocalizedText
                    )
                    },
                    Coalesce(
                    varLocalizedText,
                    varDefault
                    )
                    )
                    )
                Tooltip: =Self.Text
                Width: =96
                X: =Parent.Width - Self.Width - 32
                Y: =228
                ZIndex: =1

            btnBulletinDetail_Delete_Cancel As button:
                BorderColor: =gblAppStyles.ButtonSecondary.BorderColor
                BorderThickness: =gblAppStyles.ButtonSecondary.BorderThickness
                Color: =gblAppStyles.ButtonSecondary.Color
                DisabledBorderColor: =gblAppStyles.ButtonSecondary.DisabledBorderColor
                DisabledColor: =gblAppStyles.ButtonSecondary.DisabledColor
                DisabledFill: =gblAppStyles.ButtonSecondary.DisabledFill
                Fill: =gblAppStyles.ButtonSecondary.Fill
                FocusedBorderColor: =gblAppStyles.ButtonSecondary.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.ButtonSecondary.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                Height: =btnBulletinDetail_Delete_Confirm.Height
                HoverBorderColor: =gblAppStyles.ButtonSecondary.HoverBorderColor
                HoverColor: =gblAppStyles.ButtonSecondary.HoverColor
                HoverFill: =gblAppStyles.ButtonSecondary.HoverFill
                OnSelect: |-
                    =// Close Modal Dialog
                    UpdateContext(
                        {
                            locVisibleDialog: false,
                            locVisibleDialogDelete: false
                        }
                    );
                    // Reset the confirmaiton checkbox
                    Reset(chkBulletinDetail_Delete_Confirm);
                    // [Set Focus Start]
                    UpdateContext({locSetFocusTimerStart: false});
                    UpdateContext({locSetFocusControlTarget: "btnBulletinDetail_Footer_Delete"});
                    UpdateContext({locSetFocusTimerStart: true});
                    // [Set Focus End]
                    // [Screen Reader Start]
                    UpdateContext(
                        {
                            locScreenReaderAnnouncedText: With(
                                {
                                    varAnnouncedText: With(
                                        {
                                            varDefault: "The delete dialog has been closed", // Default Text to use
                                            varOOBTextId: "btnBulletinDetail_Delete_Cancel__Announced" // Localized version
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextId = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            Coalesce(
                                                varLocalizedText,
                                                varDefault
                                            )
                                        )
                                    )
                                },
                                If(
                                    locScreenReaderAnnouncedText = varAnnouncedText,
                                    Concatenate(
                                        varAnnouncedText,
                                        " "
                                    ),
                                    varAnnouncedText // If clicked twice, will append blank space to update variable
                                )
                            )
                        }
                    );
                    // [Screen Reader End]
                PressedBorderColor: =gblAppStyles.ButtonSecondary.PressedBorderColor
                PressedColor: =gblAppStyles.ButtonSecondary.PressedColor
                PressedFill: =gblAppStyles.ButtonSecondary.PressedFill
                RadiusBottomLeft: =gblAppStyles.ButtonSecondary.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.ButtonSecondary.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.ButtonSecondary.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.ButtonSecondary.RadiusTopRight
                Size: =gblAppStyles.ButtonSecondary.Size
                TabIndex: =If(locVisibleDialogDelete,0,-1)
                Text: |-
                    =With(
                    {
                    varDefault: "Cancel",
                    varOOBTextId: "btnBulletinDetail_Delete_Cancel__Text"
                    },
                    With(
                    {
                    varLocalizedText: LookUp(
                    colLocalization,
                    OOBTextId = varOOBTextId,
                    LocalizedText
                    )
                    },
                    Coalesce(
                    varLocalizedText,
                    varDefault
                    )
                    )
                    )
                Tooltip: =Self.Text
                Width: =btnBulletinDetail_Delete_Confirm.Width
                X: =btnBulletinDetail_Delete_Confirm.X - Self.Width - 16
                Y: =btnBulletinDetail_Delete_Confirm.Y
                ZIndex: =2

            chkBulletinDetail_Delete_Confirm As checkbox:
                BorderColor: =gblAppStyles.Checkbox.BorderColor
                BorderThickness: =gblAppStyles.Checkbox.BorderThickness
                CheckboxBackgroundFill: =gblAppStyles.Checkbox.CheckboxBackgroundFill
                CheckboxBorderColor: =gblAppStyles.Checkbox.CheckboxBorderColor
                CheckboxSize: =24
                CheckmarkFill: =gblAppStyles.Checkbox.CheckmarkFill
                Color: =gblAppStyles.Checkbox.Color
                DisabledBorderColor: =gblAppStyles.Checkbox.DisabledBorderColor
                DisabledColor: =gblAppStyles.Checkbox.DisabledColor
                DisabledFill: =gblAppStyles.Checkbox.DisabledFill
                Fill: =gblAppStyles.Checkbox.Fill
                FocusedBorderColor: =gblAppStyles.Checkbox.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Checkbox.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                Height: =36
                HoverBorderColor: =gblAppStyles.Checkbox.HoverBorderColor
                HoverColor: =gblAppStyles.Checkbox.HoverColor
                HoverFill: =gblAppStyles.Checkbox.HoverFill
                OnCheck: |-
                    =// [Screen Reader Start]
                    UpdateContext(
                        {
                            locScreenReaderAnnouncedText: With(
                                {
                                    varAnnouncedText: With(
                                        {
                                            varDefault: "Checkbox is checked. Record can be deleted.", // Default Text to use
                                            varOOBTextId: "chkBulletinDetail_Delete_Confirm__Announcement-Checked" // Localized version
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextId = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            Coalesce(
                                                varLocalizedText,
                                                varDefault
                                            )
                                        )
                                    )
                                },
                                If(
                                    locScreenReaderAnnouncedText = varAnnouncedText,
                                    Concatenate(
                                        varAnnouncedText,
                                        " "
                                    ),
                                    varAnnouncedText // If clicked twice, will append blank space to update variable
                                )
                            )
                        }
                    );
                    // [Screen Reader End]
                OnUncheck: |-
                    =// [Screen Reader Start]
                    UpdateContext(
                        {
                            locScreenReaderAnnouncedText: With(
                                {
                                    varAnnouncedText: With(
                                        {
                                            varDefault: "Checkbox is unchecked. Record cannot be deleted.", // Default Text to use
                                            varOOBTextId: "chkBulletinDetail_Delete_Confirm__Announcement-Unchecked" // Localized version
                                        },
                                        With(
                                            {
                                                varLocalizedText: LookUp(
                                                    colLocalization,
                                                    OOBTextId = varOOBTextId,
                                                    LocalizedText
                                                )
                                            },
                                            Coalesce(
                                                varLocalizedText,
                                                varDefault
                                            )
                                        )
                                    )
                                },
                                If(
                                    locScreenReaderAnnouncedText = varAnnouncedText,
                                    Concatenate(
                                        varAnnouncedText,
                                        " "
                                    ),
                                    varAnnouncedText // If clicked twice, will append blank space to update variable
                                )
                            )
                        }
                    );
                    // [Screen Reader End]
                PressedBorderColor: =gblAppStyles.Checkbox.PressedBorderColor
                PressedColor: =gblAppStyles.Checkbox.PressedColor
                PressedFill: =gblAppStyles.Checkbox.PressedFill
                Size: =gblAppStyles.Checkbox.Size
                TabIndex: =If(locVisibleDialogDelete,0,-1)
                Text: |-
                    =With(
                        {
                            varDefault: "I understand.",
                            varOOBTextId: "chkBulletinDetail_Delete_Confirm__Text"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                X: =40
                Y: =151
                ZIndex: =3

            lblBulletinDetail_Delete_Warning As label:
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                DisabledColor: =gblAppStyles.Label.DisabledColor
                DisabledFill: =gblAppStyles.Label.DisabledFill
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                Height: =71
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Size: =gblAppStyles.Label.Size.Medium
                Text: |-
                    =With(
                    {
                    varDefault: "You're about to permanently delete this bulletin. You can't undo this action.",
                    varOOBTextId: "lblBulletinDetail_Delete_Warning__Text"
                    },
                    With(
                    {
                    varLocalizedText: LookUp(
                    colLocalization,
                    OOBTextId = varOOBTextId,
                    LocalizedText
                    )
                    },
                    Coalesce(
                    varLocalizedText,
                    varDefault
                    )
                    )
                    )
                Width: =Parent.Width - 64
                X: =32
                Y: =78
                ZIndex: =6

            lblBulletinDetail_Delete_Title As label:
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                DisabledColor: =gblAppStyles.Label.DisabledColor
                DisabledFill: =gblAppStyles.Label.DisabledFill
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Bold
                Height: =28
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Size: =gblAppStyles.Label.Size.Large
                Text: |-
                    =With(
                    {
                    varDefault: "Delete bulletin",
                    varOOBTextId: "lblBulletinDetail_Delete_Title__Text"
                    },
                    With(
                    {
                    varLocalizedText: LookUp(
                    colLocalization,
                    OOBTextId = varOOBTextId,
                    LocalizedText
                    )
                    },
                    Coalesce(
                    varLocalizedText,
                    varDefault
                    )
                    )
                    )
                VerticalAlign: =VerticalAlign.Bottom
                Width: =Parent.Width - Self.X
                X: =32 * 1
                Y: =48 * 1
                ZIndex: =7

            icnBulletinDetail_Delete_Cancel As image:
                BorderColor: =gblAppStyles.ButtonTransparent.BorderColor
                BorderThickness: =gblAppStyles.ButtonTransparent.BorderThickness
                DisabledBorderColor: =gblAppStyles.ButtonTransparent.DisabledBorderColor
                DisabledFill: =gblAppStyles.ButtonTransparent.DisabledFill
                Fill: =gblAppStyles.ButtonTransparent.Fill
                FocusedBorderColor: =gblAppStyles.ButtonTransparent.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.ButtonTransparent.FocusedBorderThickness
                Height: =32
                HoverBorderColor: =gblAppStyles.ButtonTransparent.HoverBorderColor
                HoverFill: =gblAppStyles.ButtonTransparent.HoverFill
                Image: |-
                    =With(
                        {
                            varImageRecord: LookUp(
                                staticIcons,
                                staticIconName = "Dismiss"
                            ),
                            varColor: If(
                                Self.DisplayMode = DisplayMode.Disabled,
                                gblAppStyles.Icons.DisabledColor,
                                gblAppStyles.Icons.Color_Gray
                            )
                        },
                        With(
                            {
                                varImageData: Concatenate(
                                    "data:image/svg+xml;utf8, ",
                                    EncodeUrl(
                                        Concatenate(
                                            "<svg viewBox='",
                                            varImageRecord.staticIconViewbox,
                                            "' xmlns='http://www.w3.org/2000/svg'><path d='",
                                            varImageRecord.staticIconPath,
                                            "' fill='#",
                                            varColor,
                                            "'/></svg>"
                                        )
                                    )
                                )
                            },
                            varImageData
                        )
                    )
                OnSelect: =Select(btnBulletinDetail_Delete_Cancel)
                PaddingBottom: =6
                PaddingLeft: =6
                PaddingRight: =6
                PaddingTop: =6
                PressedBorderColor: =gblAppStyles.ButtonTransparent.PressedBorderColor
                PressedFill: =gblAppStyles.ButtonTransparent.PressedFill
                TabIndex: =If(locVisibleDialogDelete,0,-1)
                Width: =32
                X: =Parent.Width - Self.Width - 4
                Y: =4*1
                ZIndex: =8

        conModalDialog_BulletinDetail_ReadyReview As groupContainer:
            Fill: =gblAppStyles.Background.Fill
            Height: =Min(300,Parent.Height)
            Visible: =locVisibleDialogReadyForReview
            Width: =Min(400,Parent.Width)
            X: =(Parent.Width - Self.Width)/2
            Y: =(Parent.Height - Self.Height)/2
            ZIndex: =7

            btnBulletinDetail_ReadyReview_Confirm As button:
                BorderColor: =gblAppStyles.ButtonPrimary.BorderColor
                BorderThickness: =gblAppStyles.ButtonPrimary.BorderThickness
                Color: =gblAppStyles.ButtonPrimary.Color
                DisabledBorderColor: =gblAppStyles.ButtonPrimary.DisabledBorderColor
                DisabledColor: =gblAppStyles.ButtonPrimary.DisabledColor
                DisabledFill: =gblAppStyles.ButtonPrimary.DisabledFill
                Fill: =gblAppStyles.ButtonPrimary.Fill
                FocusedBorderColor: =gblAppStyles.ButtonPrimary.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.ButtonPrimary.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                Height: =32
                HoverBorderColor: =gblAppStyles.ButtonPrimary.HoverBorderColor
                HoverColor: =gblAppStyles.ButtonPrimary.HoverColor
                HoverFill: =gblAppStyles.ButtonPrimary.HoverFill
                OnSelect: =Navigate('Bulletins Screen',Fade)
                PressedBorderColor: =gblAppStyles.ButtonPrimary.PressedBorderColor
                PressedColor: =gblAppStyles.ButtonPrimary.PressedColor
                PressedFill: =gblAppStyles.ButtonPrimary.PressedFill
                RadiusBottomLeft: =gblAppStyles.ButtonPrimary.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.ButtonPrimary.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.ButtonPrimary.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.ButtonPrimary.RadiusTopRight
                Size: =gblAppStyles.ButtonPrimary.Size
                Text: |-
                    =With(
                    {
                    varDefault: "Back to home",
                    varOOBTextId: "btnBulletinDetail_ReadyReview_Confirm__Text"
                    },
                    With(
                    {
                    varLocalizedText: LookUp(
                    colLocalization,
                    OOBTextId = varOOBTextId,
                    LocalizedText
                    )
                    },
                    Coalesce(
                    varLocalizedText,
                    varDefault
                    )
                    )
                    )
                Tooltip: =Self.Text
                Width: =132
                X: =Parent.Width - Self.Width - gblPadding.Page
                Y: =Parent.Height -Self.Height - gblPadding.Page
                ZIndex: =1

            btnBulletinDetail_ReadyReview_Cancel As button:
                BorderColor: =gblAppStyles.ButtonSecondary.BorderColor
                BorderThickness: =gblAppStyles.ButtonSecondary.BorderThickness
                Color: =gblAppStyles.ButtonSecondary.Color
                DisabledBorderColor: =gblAppStyles.ButtonSecondary.DisabledBorderColor
                DisabledColor: =gblAppStyles.ButtonSecondary.DisabledColor
                DisabledFill: =gblAppStyles.ButtonSecondary.DisabledFill
                Fill: =gblAppStyles.ButtonSecondary.Fill
                FocusedBorderColor: =gblAppStyles.ButtonSecondary.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.ButtonSecondary.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                Height: =btnBulletinDetail_ReadyReview_Confirm.Height
                HoverBorderColor: =gblAppStyles.ButtonSecondary.HoverBorderColor
                HoverColor: =gblAppStyles.ButtonSecondary.HoverColor
                HoverFill: =gblAppStyles.ButtonSecondary.HoverFill
                OnSelect: |
                    =UpdateContext(
                        {
                            locVisibleDialog: false,
                            locVisibleDialogReadyForReview: false,
                            locConfirmedReadyReview: true
                        }
                    );
                PressedBorderColor: =gblAppStyles.ButtonSecondary.PressedBorderColor
                PressedColor: =gblAppStyles.ButtonSecondary.PressedColor
                PressedFill: =gblAppStyles.ButtonSecondary.PressedFill
                RadiusBottomLeft: =gblAppStyles.ButtonSecondary.RadiusBottomLeft
                RadiusBottomRight: =gblAppStyles.ButtonSecondary.RadiusBottomRight
                RadiusTopLeft: =gblAppStyles.ButtonSecondary.RadiusTopLeft
                RadiusTopRight: =gblAppStyles.ButtonSecondary.RadiusTopRight
                Size: =gblAppStyles.ButtonSecondary.Size
                Text: |-
                    =With(
                    {
                    varDefault: "Edit",
                    varOOBTextId: "btnBulletinDetail_ReadyReview_Cancel__Text"
                    },
                    With(
                    {
                    varLocalizedText: LookUp(
                    colLocalization,
                    OOBTextId = varOOBTextId,
                    LocalizedText
                    )
                    },
                    Coalesce(
                    varLocalizedText,
                    varDefault
                    )
                    )
                    )
                Tooltip: =Self.Text
                Width: =64
                X: =btnBulletinDetail_ReadyReview_Confirm.X - Self.Width - gblPadding.Page
                Y: =Parent.Height -Self.Height - gblPadding.Page
                ZIndex: =2

            lblBulletinDetail_ReadyReview_Title As label:
                Align: =Align.Center
                BorderColor: =gblAppStyles.Label.BorderColor
                BorderThickness: =gblAppStyles.Label.BorderThickness
                Color: =gblAppStyles.Label.Color
                DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
                DisabledColor: =gblAppStyles.Label.DisabledColor
                DisabledFill: =gblAppStyles.Label.DisabledFill
                Fill: =gblAppStyles.Label.Fill
                FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
                FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
                Font: =Font.'Segoe UI'
                FontWeight: =FontWeight.Semibold
                Height: =btnBulletinDetail_ReadyReview_Confirm.Y -Self.Y
                HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
                HoverColor: =gblAppStyles.Label.HoverColor
                HoverFill: =gblAppStyles.Label.HoverFill
                PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
                PressedColor: =gblAppStyles.Label.PressedColor
                PressedFill: =gblAppStyles.Label.PressedFill
                Size: =gblAppStyles.Label.Size.Medium
                Text: |-
                    =Concatenate(
                        "Thanks, ",
                        gblUserFirstName,
                        "! Your bulletin will get published after approval."
                    )
                VerticalAlign: =VerticalAlign.Top
                Width: =240
                X: =(Parent.Width - Self.Width) / 2
                Y: =imgBulletinDetail_ReadyReview.Y + imgBulletinDetail_ReadyReview.Height
                ZIndex: =6

            imgBulletinDetail_ReadyReview As image:
                AccessibleLabel: |-
                    =With(
                        {
                            varDefault: "The bulletin is ready for review",
                            varOOBTextId: "imgBulletinDetail_ReadyReview__AccessibleLabel__AccessibleLabel"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                Height: =Parent.Height / 2
                Image: =Image_BulletinScheduled
                Tooltip: =Self.AccessibleLabel
                Width: =160
                X: =(Parent.Width - Self.Width) / 2
                Y: =20
                ZIndex: =7

    lblBlockUserInput_BulletinDetail As label:
        DisabledFill: =RGBA(0, 0, 0, 0.05)
        DisplayMode: =DisplayMode.Disabled
        Font: =Font.'Segoe UI'
        Height: =Parent.Height
        Text: =""
        Visible: =locBlockUserInput
        Width: =Parent.Width
        X: =0*0
        Y: =0*0
        ZIndex: =6

